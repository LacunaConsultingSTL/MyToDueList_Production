{"version":3,"sources":["app/services/firebase.js","app/components/BootstrapTooltip.js","app/components/SuccessAnimation.js","app/components/todoItemListStyles.js","app/components/utils/twoDigitDateTextMaker.js","app/components/todoItemList.jsx","app/assets/images/logo.png","app/screens/Profile/extraUtils.js","app/screens/Profile/utils.js","app/screens/Profile/Charts.js","app/screens/Profile/LinksSection.js","app/screens/Profile/TopStats.js","app/screens/Profile/Profile.js","app/components/BoardDeleteConfirm.js","app/assets/images/demo_board.png","app/components/SuccessModal.js","app/components/BoardCardStyles.js","app/components/BoardCard.js","app/components/MobilePopup.js","app/components/BoardsSortControls.js","app/components/MainFooter.js","app/screens/Home/styles.js","app/screens/AllTasks/FilterButton.js","app/screens/AllTasks/utils.js","app/screens/AllTasks/AllTasks.js","app/screens/Home/index.jsx","app/screens/Login/index.jsx","app/screens/Register/index.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","useStylesBootstrap","makeStyles","theme","arrow","color","palette","common","black","tooltip","fontSize","backgroundColor","BootstrapTooltip","props","classes","disabled","children","Tooltip","Container","styled","div","Message","SuccessAnimation","text","liveRegion","className","useStyles","container","paddingTop","spacing","paddingBottom","root","width","background","paper","marginTop","marginBottom","outline","expensionSummary","position","display","border","expansionPanelSummaryContent","transition","todoItemFormControl","height","optionButtonArea","padding","optionButtons","margin","dateField","textAlign","borderRadius","rootButton","optionButtonPopper","zIndex","listTitle","marginRight","justifyContent","borderBottom","search","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transitions","create","breakpoints","up","addTodoItemButton","addTodoItemButtonIcon","addTaskButton","taskProps","boxshadow","filterOptions","taskPropContainer","twoDigitDateTextMaker","time","toString","length","calculateFullDate","eventDate","Date","date","getUTCMonth","getUTCDate","getUTCFullYear","clock","toLocaleString","hour","minute","hour12","TodoItemList","useTheme","useState","alertOpen","setAlertOpen","severity","setSeverity","alertMessage","setAlertMessage","handleCloseAlert","event","reason","useEffect","console","log","selectedList","mobileWidth","window","screen","availWidth","lists","list","todoList","filteredLists","mainKey","setMainKey","openCompletedAlert","setOpenCompletedAlert","searchText","setSearchText","sortCompleted","setSortCompleted","sortIncomplete","setSortIncomplete","filterDue","setFilterDue","filterOverdue","setFilterOverdue","sortValue","setSortValue","sortCreated","setSortCreated","sortDue","setSortDue","filterAssigned","setFilterAssigned","filterAssignee","setFilterAssignee","remaining","id","filter","isComplete","notRemaining","allTasks","handleChange","a","target","value","sort","b","createDate","dueRemaining","overdueRemaining","assigned","assignee","todayDate","getTime","assignedTo","currentUserEmail","assignedBy","name","toLowerCase","includes","toLocaleLowerCase","detail","sortByAll","editTodo","index","stopPropagation","openEditDialog","removeTodo","deletedTask","splice","assignedToo","assignedByy","removeNewAssignment","updateTodoList","checkboxToggle","tagName","completedAt","setTimeout","data","createdBy","componentDecorator","href","key","rel","duplicateTask","setTaskToDuplicate","openNewTodoDialog","isPublic","setIsPublic","loc","location","handleBoardUrlCopy","url","origin","pathname","navigator","clipboard","writeText","message","handleSnackbarOpen","animationTimeout","maxWidth","Grid","Zoom","timeout","in","Typography","aphy","variant","placement","title","IconButton","style","onClick","aria-label","Share","createdByUsername","isLogged","setOpenProfile","setProfileUserId","item","xs","sm","lg","Button","textTransform","fontWeight","FormControl","marginLeft","component","RadioGroup","flexDirection","onChange","FormControlLabel","control","Radio","label","Search","InputBase","placeholder","input","inputProps","Fade","Switch","checked","e","tempList","setSelectedList","handleIsPublicChange","TextField","Paper","map","fullDate","ExpansionPanel","taskId","ExpansionPanelSummary","expandIcon","ExpandMore","aria-controls","content","onFocus","Checkbox","transitionDelay","level","urgent","important","Box","pl","pt","live","Edit","Delete","ExpansionPanelDetails","wordBreak","overflowWrap","wordWrap","estimatedBudget","AddCircleOutline","top","left","Math","round","random","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","minHeight","dateMaker","timestamp","fullYear","getFullYear","month","getMonth","day","getDate","dateMakerMonthly","dateMakerWeekly","wom","dateObj","d","getDay","ceil","getWeekOfMonth","dayjs","extend","isBetween","extractStats","tasks","currentUserId","checkAssignedToOthers","task","checkAssignedToMyself","tasksSortedByCreatedAt","makeWeek","Number","split","monthString","timeseriesObj","timeseriesObjMonthly","timeseriesObjWeekly","checkAssignee","prev","prevMonthly","prevWeekly","completed","created","daily","keys","Object","stats","values","arrToPush","push","extractDailyStats","monthly","extractMonthlyStats","weekly","keysSorted","slice","extractWeeklyStats","isNotEmpty","toCheck","ChartTabs","Chart","lazy","wrapper","useRef","current","getChart","clearChart","chartData","setChartData","tasksData","allTasksRaw","boardObj","flat","param","reduce","acc","find","concat","statsMaker","square","elevation","Tabs","tabOpenNum","indicatorColor","textColor","newValue","setTabOpenNum","Tab","fallback","CircularProgress","chartType","loader","options","colors","bar","groupWidth","chart","subtitle","getChartWrapper","w","TabPanel","other","role","hidden","aria-labelledby","Charts","LinksSection","LinkedIn","LinkRounded","TopStats","numOfAssignedToMyselfCompleted","assigneeCompletedTasks","remainingAssigneeTasks","numOfAssignedToMyselfRemaining","numOfBoardsCompleted","StatDecorator","stat","icon","Profile","userUid","auth","currentUser","uid","username","setUsername","alert","history","replace","loaded","setLoaded","setPosition","setName","imgUrl","setImgUrl","React","todoLists","setTodoLists","firestore","collection","where","get","then","snapShot","newTodoLists","docs","doc","tempData","catch","error","useTodoLists","numOfAssignedToOthers","setNumOfAssignedToOthers","numOfAssignedToOthersCompleted","setNumOfAssignedToOthersCompleted","setNumOfAssignedToOthersRemaining","numOfAssignedToMyself","setNumOfAssignedToMyself","setNumOfAssignedToMyselfCompleted","setNumOfAssignedToMyselfRemaining","numOfAssignee","setNumOfAssignee","setTotalTasks","setRemainingAssigneeTasks","setAssigneeCompletedTasks","setNumOfBoardsCompleted","completionRate","psudo","err","tasksCompletedInBoard","prevState","Avatar","alt","src","Rating","precision","readOnly","useStyless","modal","boxShadow","shadows","BoardDeleteConfirm","openDeleteModal","setOpenDeleteModal","listToDelete","removeTodoList","handleClose","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","mt","SuccessModal","setOpen","media","expand","transform","duration","shortest","expandOpen","avatar","green","Subheader","Title","BoardCard","handleConfirmationOpen","setListToDelete","boardOnClick","completedPercent","setCompletedPercent","numOfTasksCompleted","totalTasks","taskObj","Card","CardHeader","subheader","CardMedia","image","demo_board","CardContent","description","CardActions","disableSpacing","boardId","handleShareBtnClick","MobilePopup","openMobilePopup","setOpenMobilePopup","BoardsSortControls","initialTodoLists","setInitialTodoLists","ascendingCompleted","setAscendingCompleted","ascendingCreated","setAscendingCreated","tempArr","sortedTodoLists","created1","createdAt","sortCreatedAscending","sortCreatedDescending","board1","board2","numOfTasksCompletedB1","totalTasksB1","numOfTasksCompletedB2","totalTasksB2","completedPercentB1","completedPercentB2","tempFilteredArr","handleSearchChange","MainFooter","textDecoration","drawerWidth","styles","toolbar","paddingRight","toolbarIcon","mixins","appBar","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","flexShrink","drawerContainer","overflow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","fixedHeight","button","right","logoutButton","allMyTasksButton","todoListRoot","emptyListText","nested","addTodoListButton","listRemoveButton","FilterButton","state","checkBwDaysFuture","tsToCheck","daysInFuture","futureTimeStamp","setTime","startDate","endDate","dateToCheck","dueDateFilter","today","tomorrow","sevendays","thirtydays","isSame","AllTasks","boardName","boardIndex","JSON","parse","stringify","filteredTasks","setFilteredTasks","sortAll","setSortAll","filterToday","setFilterToday","filterTomorrow","setFilterTomorrow","filter7days","setFilter7days","filter30days","setFilter30days","tasksToday","tasksTomorrow","tasks7days","tasks30days","updatedTodoList","updatedBoardObj","updatedTask","filteredTodoLists","setOpenTasksFeed","setOpenDrawer","getHours","getMinutes","HomePage","email","currentUserName","displayName","publicView","setIsLogged","logout","signOut","signin","setNavKey","openTasksFeed","openProfile","openOtherProfile","profileUserId","userName","setUserName","currentUsername","setCurrentUsername","currentUserUid","boardsLoading","setBoardsLoading","todoListss","taskToDuplicate","selectedIndex","setSelectedIndex","selectedListId","localStorage","getItem","toSet","obj","setItem","selectedListEditItemIndex","setSelectedListEditItemIndex","showEditTodoDialog","setShowEditTodoDialog","showNewTodoDialog","setShowNewTodoDialog","showNewListDialog","setShowNewListDialog","selectNewAddedList","setSelectNewAddedList","openDrawer","handleListItemClick","openEditTodoDialog","addNewAssignment","sendAssignedTaskEmail","exists","previousData","previousTodoListFiltered","Array","assignmentsAll","assignments","Set","set","functionData","axios","post","sendTaskCompletionEmail","emailAssignee","emailAssignor","merge","usernameAssignee","saveEditTodo","estimatedDays","saveNewTodo","uuidv4","tabIndex","onKeyDown","ctrlKey","CssBaseline","AppBar","Toolbar","noWrap","logo","size","profileOpen","delete","navKey","go","editItem","Dialog","onKeyUp","DialogTitle","DialogContent","DialogContentText","autoFocus","defaultValue","type","fullWidth","multiline","rows","InputLabelProps","shrink","InputProps","min","max","textField","DialogActions","renderEditDialog","dateToSet","renderNewTodoDialog","add","saveNewTodoList","renderNewListDialog","withRouter","withStyles","main","unit","secondary","form","submit","createAccount","setEmail","password","setPassword","alertData","setAlertData","alertType","setAlertType","onSubmit","preventDefault","required","InputLabel","htmlFor","Input","autoComplete","Link","to","sendPasswordResetEmail","signInWithEmailAndPassword","emailVerified","sendEmailVerification","backToLogin","storage","signupLoading","setSignupLoading","setFile","setURL","setPsudo","successModalOpen","setSuccessModalOpen","handleFileChange","filee","files","handleUpload","file","fileName","ref","put","on","child","getDownloadURL","validateData","tempDate","dateForTomorrow","buildTodoList","sendWelcomeEmail","validationResult","createUserWithEmailAndPassword","updateProfile","createMuiTheme","primary","App","firebaseInitialized","setFirebaseInitialized","Promise","resolve","onAuthStateChanged","val","exact","path","SignIn","Register","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9750885.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firebase-firestore'\r\nimport 'firebase/firebase-database'\r\nimport 'firebase/storage'\r\n\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDd5hiHu_pHZFJT0YiPZuUoVgUtgKlsG4o\",\r\n  authDomain: \"todue-mullan.firebaseapp.com\",\r\n  databaseURL: \"https://todue-mullan.firebaseio.com\",\r\n  projectId: \"todue-mullan\",\r\n  storageBucket: \"todue-mullan.appspot.com\",\r\n  messagingSenderId: \"345532771312\",\r\n  appId: \"1:345532771312:web:e211aa4bc3cfcfddb80b35\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      fontSize: '12px',\r\n      backgroundColor: theme.palette.common.black,\r\n    },\r\n  }));\r\n\r\n\r\nconst BootstrapTooltip = (props) => {\r\n    const classes = useStylesBootstrap();\r\n  \r\n    if (!props.disabled) return <Tooltip arrow classes={classes} {...props} />;\r\n    if(props.disabled) return <>{props.children}</>;\r\n}\r\n\r\nexport default BootstrapTooltip\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  position: relative;\r\n  padding-bottom: 48px;\r\n  margin: 1.5rem 0 60px 0;\r\n\r\n  @keyframes appear {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes ripple-out {\r\n    20% {\r\n      opacity: 0.5;\r\n    }\r\n    100% {\r\n      top: -15px;\r\n      right: -15px;\r\n      bottom: -15px;\r\n      left: -15px;\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  @keyframes pop {\r\n    0% {\r\n      opacity: 0;\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  .pop {\r\n    opacity: 0;\r\n    display: block;\r\n    transform-origin: (50%, 50%);\r\n    transform: scale(0) perspective(1px) translateZ(0);\r\n    transition: opacity 200ms ease;\r\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0);\r\n    animation-name: pop;\r\n    animation-duration: 600ms;\r\n    animation-timing-function: cubic-bezier(0.65, 0.05, 0.08, 0.99);\r\n    animation-iteration-count: infinte;\r\n    animation-delay: 1s;\r\n    animation-fill-mode: forwards;\r\n  }\r\n`;\r\n\r\nconst Cicle = styled.div`\r\n  margin-bottom: 22px;\r\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0);\r\n  border: 3px solid ${({color}) => color};\r\n  border-radius: 50%;\r\n  display: block;\r\n  width: 60px;\r\n  height: 60px;\r\n  position: relative;\r\n  opacity: 0;\r\n  animation-name: appear;\r\n  animation-duration: 300ms;\r\n  animation-timing-function: cubic-bezier(0.65, 0.05, 0.08, 0.99);\r\n  animation-iteration-count: infinte;\r\n  animation-delay: 1s;\r\n  animation-fill-mode: forwards;\r\n  transform: perspective(1px) translateZ(0);\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    border: ${({color}) => color} solid 7px;\r\n    border-radius: 50%;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    opacity: 0;\r\n    animation-duration: 500ms;\r\n    animation-name: ripple-out;\r\n    animation-delay: 1.2s;\r\n  }\r\n`;\r\n\r\nconst Tick = styled.div`\r\n  position: absolute;\r\n  top: 18px;\r\n  left: 16px;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  color: ${({color}) => color};\r\n  font-family: 'Rubik', Arial;\r\n  font-size: 22px;\r\n  bottom: 0;\r\n  opacity: 0;\r\n  position: absolute;\r\n  animation-name: message-in;\r\n  animation-duration: 900ms;\r\n  animation-timing-function: cubic-bezier(0, 0.7, 0.31, 1);\r\n  animation-iteration-count: infinte;\r\n  animation-delay: 1.5s;\r\n  animation-fill-mode: forwards;\r\n\r\n  @keyframes message-in {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translate3d(0, 40%, 0);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translate3d(0, 0, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SuccessAnimation = ({ color = '#000000', text = 'Success', liveRegion = '' }) => {\r\n\r\n  return (\r\n    <Container>\r\n      {/* <Cicle className=\"ripple-out\" color={color}>\r\n        <Tick className=\"pop\" color={color}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"22\">\r\n            <path d=\"M11.637 20.286a2.41 2.41 0 0 1-3.411 0L2.11 14.17a2.42 2.42 0 0 1 0-3.413c.943-.94 2.47-.94 3.41 0l4.412 4.412L22.87 2.23a2.41 2.41 0 1 1 3.411 3.411L11.637 20.286z\" fill={color} fillRule=\"evenodd\"/>\r\n          </svg>\r\n        </Tick>\r\n      </Cicle> */}\r\n      {\r\n        text && <Message className=\"message\" color={color}>{text}</Message>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nSuccessAnimation.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string\r\n}\r\n\r\nexport default SuccessAnimation;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      // maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      marginTop: '10px',\r\n      marginBottom: '10px',\r\n      paddingTop: '0px',\r\n      outline: 'none',\r\n    },\r\n  \r\n    \r\n    expensionSummary: {\r\n      position: 'relative',\r\n      display: 'block',   \r\n      border: '0px',\r\n    },\r\n  \r\n    expansionPanelSummaryContent: {\r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n      border: '0px',\r\n      '&:hover':{\r\n        transition: 'all 0.2s linear',\r\n        background: '#f7f5f5',\r\n      }\r\n    },\r\n    \r\n    \r\n    todoItemFormControl: {\r\n      width: 'calc(100% - 180px)',\r\n      height: '0 px',\r\n      marginTop: '0px',\r\n      marginBottom: '0px',\r\n      paddingTop: '0px',\r\n      paddingBottom: '0px',\r\n    },\r\n  \r\n    optionButtonArea: {\r\n      position: 'fixed',\r\n      outline: '0 !important',\r\n      padding: 0,\r\n      outline: 'none',\r\n  \r\n      // marginTop: '6px',\r\n    },\r\n  \r\n  \r\n    optionButtons: {\r\n      outline: '0 !important',\r\n      margin: 'auto',\r\n      \r\n  \r\n    },\r\n    dateField: {\r\n      position: 'relative',\r\n      outline: '0 !important',\r\n      margin: 'auto',\r\n      textAlign: 'right',\r\n      // marginRight: 15,\r\n      marginTop: 0,\r\n      border: '0px solid #ccc',\r\n      padding: 0,\r\n      borderRadius: 10,\r\n      fontSize: '0.875rem',\r\n    },\r\n  \r\n    \r\n    \r\n    rootButton: {\r\n      display: 'flex',\r\n      \r\n    },\r\n   \r\n    optionButtonPopper: {\r\n      zIndex: 9\r\n    },\r\n    \r\n    listTitle: {\r\n      marginRight: '10px',\r\n      justifyContent: \"right\",\r\n      padding: '6px',\r\n      textAlign: 'left',\r\n      width: '100%',\r\n      fontSize: 25,\r\n      borderBottom: 'solid 4px #3dd19d',\r\n  \r\n    },\r\n    search: {\r\n      fontSize: 17,\r\n      marginTop: '10px',\r\n      position: 'relative',\r\n      borderRadius: 5,\r\n      width: '50%',\r\n      justifyContent: \"right\",\r\n  \r\n      \r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      }\r\n    },\r\n    addTodoItemButton: {\r\n      display: 'block',\r\n      outline: '0 !important',\r\n      margin: 'auto',\r\n      marginTop: 5\r\n    },\r\n    addTodoItemButtonIcon: {\r\n      color: '#3dd19d',\r\n      fontSize: 30\r\n    },\r\n  \r\n    addTaskButton: {\r\n      color: '#3dd19d',\r\n      fontSize: 17,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '120px',\r\n      height: '100%',\r\n      padding: '9px',\r\n      marginTop: '10px',\r\n    },\r\n  \r\n  \r\n    taskProps:{\r\n      padding: theme.spacing(0, 2),\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    paper:{\r\n      //background: '',\r\n      marginTop: '15px',\r\n      boxshadow: 'none',\r\n      border: 'none',\r\n    },\r\n  \r\n    filterOptions: {\r\n      marginTop: '15px',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    taskPropContainer:{\r\n      justifyContent: 'center',\r\n      border: 'solid 1black',\r\n      alignItems: 'center',\r\n    },\r\n  \r\n  }));\r\n\r\nexport default useStyles;  ","const twoDigitDateTextMaker = (time) => {\r\n    let text = time.toString();\r\n    if (text.toString().length > 1) {\r\n      return text;\r\n    } else {\r\n      return '0' + text;\r\n    }\r\n  }\r\n  \r\nconst calculateFullDate = (time) => {\r\n    // Return Type -> DD/MM/YY  HH:MM\r\n    const eventDate = new Date(time);\r\n    const resDate = twoDigitDateTextMaker(eventDate.getUTCMonth() + 1) + '/' + twoDigitDateTextMaker(eventDate.getUTCDate()) + '/' + twoDigitDateTextMaker(eventDate.getUTCFullYear());\r\n    // const resClock = twoDigitDateTextMaker(eventDate.getHours()) + ':' + twoDigitDateTextMaker(eventDate.getMinutes());\r\n    // var time = new Date();\r\n    // console.log(\r\n    //   time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n    // );\r\n    return {\r\n      date: resDate,\r\n      clock: eventDate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\r\n    };\r\n  }\r\n\r\nexport default calculateFullDate;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport {\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n  // AutorenewTwoTone,\r\n  // ContactsOutlined,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Search as SearchIcon,\r\n  FileCopy as CopyIcon,\r\n  Share,\r\n} from \"@material-ui/icons\";\r\n\r\nimport TimeAgo from \"react-timeago\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nimport BootstrapTooltip from \"./BootstrapTooltip\";\r\nimport SuccessAnimation from \"./SuccessAnimation\";\r\nimport useStyles from \"./todoItemListStyles\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport calculateFullDate from \"./utils/twoDigitDateTextMaker\";\r\nimport { Fade, Switch, TextField, Zoom } from \"@material-ui/core\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nfunction TodoItemList(props) {\r\n  const originalTheme = useTheme();\r\n\r\n  // const theme = createMuiTheme({\r\n  //   palette: {\r\n  //     text: {\r\n  //       disabled: \"black\",\r\n  //     },\r\n  //     // primary: originalTheme.color.primary\r\n  //   },\r\n  // });\r\n\r\n  // Snackbar ALERT\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [severity, setSeverity] = useState(\"success\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  };\r\n\r\n  const handleSnackbarOpen = (severity, message) => {\r\n    setSeverity(severity);\r\n    setAlertMessage(message);\r\n    setAlertOpen(true);\r\n  };\r\n  //\r\n\r\n  useEffect(() => {\r\n    console.log(\"heeeeeeeeeeeadafafasssssssssssssss\");\r\n  }, [props.selectedList.length]);\r\n\r\n  const mobileWidth = window.screen.availWidth < 700;\r\n\r\n  const classes = useStyles();\r\n  let lists = props.list.todoList;\r\n  let filteredLists = lists;\r\n\r\n  const [mainKey, setMainKey] = useState(123);\r\n\r\n  const [openCompletedAlert, setOpenCompletedAlert] = useState(false);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortCompleted, setSortCompleted] = useState(false);\r\n  const [sortIncomplete, setSortIncomplete] = useState(false);\r\n\r\n  const [filterDue, setFilterDue] = useState(false);\r\n  const [filterOverdue, setFilterOverdue] = useState(false);\r\n\r\n  const [sortValue, setSortValue] = useState(\"due\");\r\n  const [sortCreated, setSortCreated] = useState(false);\r\n  const [sortDue, setSortDue] = useState(true);\r\n\r\n  const [filterAssigned, setFilterAssigned] = useState(false);\r\n  const [filterAssignee, setFilterAssignee] = useState(false);\r\n\r\n  let remaining = [];\r\n  if (props.list.id) {\r\n    remaining = props.list.todoList.filter((list) => !list.isComplete);\r\n  } else {\r\n    remaining = [];\r\n  }\r\n\r\n  let notRemaining = [];\r\n  if (props.list.id) {\r\n    notRemaining = props.list.todoList.filter((list) => list.isComplete);\r\n  } else {\r\n    notRemaining = [];\r\n  }\r\n\r\n  let allTasks = [];\r\n  if (props.list.id) {\r\n    allTasks = props.list.todoList.filter((list) => list);\r\n  } else {\r\n    allTasks = [];\r\n  }\r\n\r\n  // SORT BY:   CREATE DATE / DUE DATE\r\n  const handleChange = async (event) => {\r\n    await setSortValue(event.target.value);\r\n    // await console.log(sortValue);\r\n    if (sortValue === \"created\") {\r\n      await setSortCreated(false);\r\n      await setSortDue(true);\r\n    } else if (sortValue === \"due\") {\r\n      await setSortCreated(true);\r\n      await setSortDue(false);\r\n    }\r\n  };\r\n  if (sortCreated && props.list.id && filteredLists.length > 0) {\r\n    filteredLists = filteredLists.sort((a, b) => a.createDate - b.createDate);\r\n  } else if (sortDue && props.list.id && filteredLists.length > 0) {\r\n    filteredLists = filteredLists.sort((a, b) => a.date - b.date);\r\n  }\r\n\r\n  // FILTER BY: COMPLETE / INCOMPLETE\r\n  // if (props.list.id) {\r\n  //   if(sortCompleted){\r\n  //     filteredLists = props.list.todoList.filter((list)=> list.isComplete);\r\n  //   }\r\n  //   else if(sortIncomplete){\r\n  //     filteredLists = props.list.todoList.filter((list)=> !list.isComplete);\r\n  //   }\r\n  //   else filteredLists = props.list.todoList.filter((list) => list.name.toLowerCase().includes(searchText.toLocaleLowerCase()));\r\n  // } else {\r\n  //   filteredLists = [];\r\n  // }\r\n\r\n  // this will randomly choose words from an array and return it to the SuccessAnimation component as text prop\r\n  const chooseAlertText = () => {\r\n    const sentences = [\r\n      \"You Rock!!\",\r\n      \"Let's gooo!!\",\r\n      \"Great Work!\",\r\n      \"Done with that!\",\r\n      \"Nice Work!\",\r\n      \"Woohooo\",\r\n      \"Well done!\",\r\n      \"Great Job\",\r\n    ]; // add as many affirmations as you want\r\n    const selectedText = sentences[Math.round(Math.random() * 3)]; // replace 3 with 1 less than the number of messages in the array above\r\n\r\n    return selectedText;\r\n  };\r\n\r\n  // FILTER BY: DUE / OVERDUE & FILTER BY: COMPLETE / INCOMPLETE\r\n  let dueRemaining = [];\r\n  let overdueRemaining = [];\r\n  let assigned = [];\r\n  let assignee = [];\r\n\r\n  const todayDate = new Date().getTime();\r\n\r\n  if (props.list.id) {\r\n    dueRemaining = remaining.filter((list) => new Date(list.date) > new Date());\r\n    overdueRemaining = remaining.filter((list) => list.date < todayDate);\r\n\r\n    assigned = props.list.todoList.filter(\r\n      (list) =>\r\n        list.assignedTo !== props.currentUserEmail &&\r\n        list.assignedTo !== \"\" &&\r\n        list.assignedBy === props.currentUserEmail\r\n    );\r\n    assignee = props.list.todoList.filter(\r\n      (list) =>\r\n        list.assignedBy !== props.currentUserEmail &&\r\n        list.assignedTo === props.currentUserEmail\r\n    );\r\n\r\n    if (filterDue) {\r\n      filteredLists = dueRemaining;\r\n    } else if (filterOverdue) {\r\n      filteredLists = overdueRemaining;\r\n    } else if (sortCompleted) {\r\n      filteredLists = props.list.todoList.filter((list) => list.isComplete);\r\n    } else if (sortIncomplete) {\r\n      filteredLists = props.list.todoList.filter((list) => !list.isComplete);\r\n    } else if (filterAssigned) {\r\n      filteredLists = assigned;\r\n    } else if (filterAssignee) {\r\n      filteredLists = assignee;\r\n    } else\r\n      filteredLists = props.list.todoList.filter(\r\n        (list) =>\r\n          list.name.toLowerCase().includes(searchText.toLocaleLowerCase()) ||\r\n          list.detail.toLowerCase().includes(searchText.toLocaleLowerCase())\r\n      );\r\n  } else {\r\n    filteredLists = [];\r\n    const dueRemaining = [];\r\n    const overDueRemaining = [];\r\n  }\r\n\r\n  const sortByAll = async () => {\r\n    await setFilterAssigned(false);\r\n    await setFilterAssignee(false);\r\n    await setSortIncomplete(false);\r\n    await setSortCompleted(false);\r\n    await setFilterDue(false);\r\n    await setFilterOverdue(false);\r\n  };\r\n\r\n  const editTodo = (event, list, index) => {\r\n    event.stopPropagation();\r\n    props.openEditDialog(list, index);\r\n  };\r\n\r\n  const removeTodo = (event, list, index) => {\r\n    event.stopPropagation();\r\n    const deletedTask = lists.splice(index, 1);\r\n    const assignedToo = deletedTask[0].assignedTo;\r\n    const assignedByy = deletedTask[0].assignedBy;\r\n    // console.log('DELTED TASK:', deletedTask);\r\n    // console.log('assigned by:', assignedByy, 'assigned To:', assignedToo);\r\n    if (\r\n      assignedToo !== props.currentUserEmail &&\r\n      assignedToo !== \"\" &&\r\n      assignedByy === props.currentUserEmail\r\n    ) {\r\n      // alert('helllllllllllllllllllllllllll');\r\n      props.removeNewAssignment(\r\n        props.selectedList.id,\r\n        props.selectedList.name,\r\n        deletedTask[0]\r\n      );\r\n      // console.log('selectrd Listttt',props.selectedList);\r\n    }\r\n    props.updateTodoList({ ...props.list, todoList: lists });\r\n    setMainKey((mainKey) => mainKey + 1);\r\n  };\r\n\r\n  const checkboxToggle = async (event, list) => {\r\n    if (event.target.tagName !== \"INPUT\") return;\r\n\r\n    event.stopPropagation();\r\n\r\n    list.isComplete = !list.isComplete;\r\n    list.completedAt = new Date().getTime();\r\n\r\n    // console.log(list.assignedTo, list.assignedBy);\r\n\r\n    setMainKey((mainKey) => mainKey + 1); // for remounting the component (https://www.nikgraf.com/blog/using-reacts-key-attribute-to-remount-a-component)\r\n\r\n    // open success message\r\n    if (list.isComplete) {\r\n      await setOpenCompletedAlert(true);\r\n      setTimeout(async () => await setOpenCompletedAlert(false), 4000);\r\n      // the function inside setTimeout will run after 4000 millisecond (written as second argument)\r\n      // which means that animation message will be open for 4000ms (or 4 seconds)\r\n    }\r\n\r\n    // if(list.assignedTo!==props.currentUserEmail && list.assignedTo!==''){\r\n    //   props.addNewAssignment(props.selectedList.id, props.selectedList.name, list);\r\n    // }\r\n    // if(list.assignedBy!==props.currentUserEmail && list.assignedTo!==''){\r\n    //   props.addNewAssignment(props.selectedList.id, props.selectedList.name, list, \"complex\");\r\n    // }\r\n    if (list.assignedBy !== props.currentUserEmail && list.isComplete) {\r\n      console.log(\"RAN CHECKKKK\");\r\n      const data = {\r\n        name: props.list.name,\r\n        todoList: lists,\r\n        createdBy: props.list.createdBy,\r\n        ...props.list,\r\n      };\r\n      props.updateTodoList(data, true, list.assignedTo, list.assignedBy);\r\n    } else {\r\n      props.updateTodoList({\r\n        name: props.list.name,\r\n        todoList: lists,\r\n        createdBy: props.list.createdBy,\r\n        ...props.list,\r\n      });\r\n    }\r\n  };\r\n\r\n  const componentDecorator = (href, text, key) => (\r\n    <a\r\n      className=\"text-blue-500\"\r\n      href={href}\r\n      key={key}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n  const duplicateTask = (event, list, index) => {\r\n    props.setTaskToDuplicate(list);\r\n    props.openNewTodoDialog(true);\r\n  };\r\n\r\n  const [isPublic, setIsPublic] = useState(\r\n    props.list.isPublic ? props.list.isPublic : false\r\n  );\r\n  const handleIsPublicChange = (e) => {\r\n    setIsPublic(e.target.checked);\r\n    const tempList = { ...props.list, isPublic: e.target.checked };\r\n    props.updateTodoList(tempList);\r\n    props.setSelectedList(tempList);\r\n    console.log(\"tempList\", tempList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsPublic(props.list.isPublic);\r\n  }, [props.list.isPublic]);\r\n\r\n  const loc = window.location;\r\n\r\n  const handleBoardUrlCopy = (id) => {\r\n    const url = `${loc.origin}${loc.pathname}?id=${id}`;\r\n    navigator.clipboard.writeText(url);\r\n    handleSnackbarOpen(\"success\", \"Board Url has been copied to the clipboard\");\r\n  };\r\n\r\n  const animationTimeout = 500;\r\n\r\n  if (props.list.id) {\r\n    return (\r\n      <Container key={mainKey} maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={1}>\r\n          <span className=\"w-auto mt-1 row-center\">\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Typography aphy variant=\"h6\" className={classes.listTitle}>\r\n                Board: {props.list.name}\r\n              </Typography>\r\n            </Zoom>\r\n            {isPublic && (\r\n              <Zoom timeout={animationTimeout} in={isPublic}>\r\n                <BootstrapTooltip\r\n                  key={isPublic}\r\n                  placement=\"top\"\r\n                  title={\"Share Board\"}\r\n                >\r\n                  <span className=\"w-8 h-8 pointer\">\r\n                    <IconButton\r\n                      style={{ outline: \"none\" }}\r\n                      color=\"primary\"\r\n                      onClick={() => handleBoardUrlCopy(props.list.id)}\r\n                      className=\"w-8 h-8\"\r\n                      aria-label=\"share\"\r\n                    >\r\n                      <Share />\r\n                    </IconButton>\r\n                  </span>\r\n                </BootstrapTooltip>\r\n              </Zoom>\r\n            )}\r\n          </span>\r\n          {props.list.createdByUsername && (\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <BootstrapTooltip placement=\"bottom\" title=\"Board Owner\">\r\n                <span className=\"h-full mt-3 ml-3 lg:mt-3 row-center\">\r\n                  <button\r\n                    disabled={!props.isLogged}\r\n                    className={`text-blue-300 focus:outline-none font-bold text-lg  `}\r\n                    onClick={() => {\r\n                      props.setOpenProfile(true);\r\n                      props.setProfileUserId(props.list.createdBy);\r\n                    }}\r\n                  >\r\n                    {props.list.createdByUsername}\r\n                  </button>\r\n                </span>\r\n              </BootstrapTooltip>\r\n            </Zoom>\r\n          )}\r\n          {!props.isLogged && isPublic && (\r\n            // <Fade timeout={animationTimeout} in={props.isLogged && isPublic}>\r\n            <span\r\n              className=\"w-24 h-10 mt-3 ml-5 text-lg font-bold text-center text-white bg-blue-300 opacity-100 row-center\"\r\n              key={isPublic}\r\n            >\r\n              Public\r\n            </span>\r\n            // </Fade>\r\n          )}\r\n\r\n          {/* {\r\n            // <Fade timeout={animationTimeout} in={props.isLogged && isPublic}>\r\n            <span\r\n              className=\"h-10 px-3 mt-3 ml-5 text-lg font-bold text-center text-white bg-blue-300 opacity-100 row-center\"\r\n              key={isPublic}\r\n            >\r\n              {props.list.createdByUsername}\r\n            </span>\r\n            // </Fade>\r\n          } */}\r\n          {/* <span item xs={12} sm={12} md={4} lg={4}>\r\n            <span className=\"h-full row-center\">\r\n              <div \r\n                className={`text-white big-btn bg-green ml-4 mt-2`}\r\n                onClick={(event) => {props.openNewTodoDialog();}}\r\n                >\r\n                Add Task\r\n            </div>\r\n            </span>\r\n          </span> */}\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item height={50} xs={12} sm={12} lg={12}>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                onClick={sortByAll}\r\n                className=\"no-outline\"\r\n                style={\r\n                  !sortIncomplete &&\r\n                  !sortCompleted &&\r\n                  !filterAssigned &&\r\n                  !filterAssignee &&\r\n                  !filterOverdue\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n              >\r\n                <Typography\r\n                  style={\r\n                    !sortIncomplete &&\r\n                    !sortCompleted &&\r\n                    !filterAssigned &&\r\n                    !filterAssignee &&\r\n                    !filterOverdue\r\n                      ? { fontWeight: \"bold\" }\r\n                      : null\r\n                  }\r\n                >\r\n                  All\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"15px\" }}\r\n                    display=\"inline\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {allTasks.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                outline=\"none\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  sortIncomplete\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  // compensate\r\n                  await setFilterAssigned(false);\r\n                  await setFilterAssignee(false);\r\n\r\n                  await setSortIncomplete(true);\r\n                  await setSortCompleted(false);\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={sortIncomplete ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Todue\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"5px\" }}\r\n                    display=\"inline\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {remaining.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  sortCompleted\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  // compensate\r\n                  await setFilterAssigned(false);\r\n                  await setFilterAssignee(false);\r\n\r\n                  await setSortCompleted(true);\r\n                  await setSortIncomplete(false);\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={sortCompleted ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Todone\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"5px\" }}\r\n                    display=\"\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {notRemaining.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  filterAssigned\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  await setFilterAssigned(true);\r\n                  await setFilterAssignee(false);\r\n                  await setSortIncomplete(false);\r\n                  await setSortCompleted(false);\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={filterAssigned ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Assigned to others\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"5px\" }}\r\n                    display=\"inline\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {assigned.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  filterAssignee\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  await setFilterAssigned(false);\r\n                  await setFilterAssignee(true);\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(false);\r\n                  await setSortCompleted(false);\r\n                  await setSortIncomplete(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={filterAssignee ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Assigned to me\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"5px\" }}\r\n                    display=\"\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {assignee.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  filterOverdue\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  // compensation\r\n                  await setFilterAssigned(false);\r\n                  await setFilterAssignee(false);\r\n\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(true);\r\n                  await setSortIncomplete(false);\r\n                  await setSortCompleted(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={filterOverdue ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Overdue\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={\r\n                      overdueRemaining.length > 0\r\n                        ? { paddingLeft: \"5px\", color: \"red\" }\r\n                        : { paddingLeft: \"5px\", color: \"#3dd19d\" }\r\n                    }\r\n                    display=\"\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    {\" \"}\r\n                    {overdueRemaining.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <FormControl\r\n                style={{ marginTop: \"3px\", marginLeft: \"10px\" }}\r\n                component=\"fieldset\"\r\n              >\r\n                {/* <FormLabel component=\"legend\">Sort By:</FormLabel> */}\r\n                <RadioGroup\r\n                  style={{ display: \"flex\", flexDirection: \"row\" }}\r\n                  aria-label=\"sort by\"\r\n                  name=\"sortCreateDue\"\r\n                  value={sortValue}\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel\r\n                    style={{ fontSize: \"0.9rem\" }}\r\n                    value=\"created\"\r\n                    control={<Radio />}\r\n                    label=\"Date Created\"\r\n                  />\r\n                  <FormControlLabel\r\n                    style={{ fontSize: \"0.9rem\" }}\r\n                    value=\"due\"\r\n                    control={<Radio />}\r\n                    label=\"Due Date\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Zoom>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon style={{ color: \"#3dd19d\" }} />\r\n              </div>\r\n              <InputBase\r\n                style={{ marginTop: \"10px\" }}\r\n                placeholder=\"Search your tasks…\"\r\n                onChange={(text) => {\r\n                  setSearchText(text.target.value);\r\n                }}\r\n                value={searchText}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n              <span>\r\n                {props.isLogged &&\r\n                  props.list.createdBy === props.currentUserEmail && (\r\n                    <span key={isPublic}>\r\n                      <Fade timeout={animationTimeout} in={true}>\r\n                        <span>\r\n                          {isPublic ? \"Board is Public\" : \"Board is Private\"}\r\n                        </span>\r\n                      </Fade>\r\n                      <Switch\r\n                        checked={isPublic}\r\n                        onChange={(e) => handleIsPublicChange(e)}\r\n                        name=\"isPublic\"\r\n                        color=\"primary\"\r\n                        inputProps={{ \"aria-label\": \"Is Board Public\" }}\r\n                      />\r\n                    </span>\r\n                  )}\r\n              </span>\r\n            </div>\r\n\r\n            {props.isLogged && isPublic && (\r\n              <Fade timeout={animationTimeout} in={props.isLogged && isPublic}>\r\n                <span key={isPublic}>\r\n                  <TextField\r\n                    style={{ width: \"350px\" }}\r\n                    onClick={() => handleBoardUrlCopy(props.list.id)}\r\n                    label=\"Board Link\"\r\n                    margin=\"dense\"\r\n                    value={`${loc.origin}${loc.pathname}?id=${props.list?.id}`}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </span>\r\n              </Fade>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} sm={3} lg={4}>\r\n            <Paper className={classes.filterOptions}>\r\n              {/* <FormControl component=\"fieldset\"> */}\r\n              {/* <FormLabel component=\"legend\">Sort By:</FormLabel> */}\r\n              {/* <RadioGroup style={{display:'flex', flexDirection:'row'}} aria-label=\"sort by\" name=\"sortCreateDue\" value={sortValue} onChange={handleChange}>\r\n                  <FormControlLabel  value='allFilter' control={<Radio />} label=\"All\" />\r\n                  <FormControlLabel  value='allToDue' control={<Radio />} label=\"ToDue\" />\r\n                  <FormControlLabel style={{fontSize:'0.9rem'}} value='allOverDue' control={<Radio />} label=\"OverDue\" />\r\n                </RadioGroup>\r\n              </FormControl> */}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.filterOptions}>\r\n              {/* <Button color=\"black\" onClick={sortByAll}>\r\n                <Typography style={!sortIncomplete && !sortCompleted?{fontWeight:'bold'} : null}>All</Typography> <Typography variant=\"h6\"><Typography style={{paddingLeft: '15px'}} display=\"inline\" variant=\"h6\" color=\"primary\"> {allTasks.length}</Typography></Typography>\r\n              </Button> */}\r\n\r\n              {/* <Button color=\"black\" onClick={async () => {\r\n                await setSortCreated(true);\r\n                await  setSortDue(false);\r\n                }}>\r\n                <Typography style={sortCreated?{fontWeight:'bold'} : null}>Date Created</Typography>\r\n              </Button>\r\n              <Button color=\"black\" onClick={async () => {\r\n                await setSortCreated(false);\r\n                await  setSortDue(true);\r\n                }}>\r\n        \r\n                <Typography style={sortDue?{fontWeight:'bold'} : null}>Due Date</Typography>\r\n\r\n              </Button>  */}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}></Grid>\r\n        </Grid>\r\n\r\n        {/* <div className={classes.filterAread}>\r\n          \r\n        </div> */}\r\n        <Zoom timeout={animationTimeout} in={true}>\r\n          <BootstrapTooltip placement=\"bottom\" title=\"Ctrl+Enter\">\r\n            <span className=\"h-full row-center\">\r\n              <div\r\n                className={`text-white big-btn bg-green mb-2`}\r\n                onClick={(event) => {\r\n                  props.openNewTodoDialog();\r\n                }}\r\n              >\r\n                + Add Step\r\n              </div>\r\n            </span>\r\n          </BootstrapTooltip>\r\n        </Zoom>\r\n        {props.list.todoList.length > 0 && (\r\n          <div className={classes.root}>\r\n            {filteredLists.map((list, index) => {\r\n              const fullDate = calculateFullDate(list.date);\r\n              return (\r\n                // <ThemeProvider theme={theme}>\r\n                  <ExpansionPanel\r\n                    // expanded={}\r\n                    key={list.taskId}\r\n                  >\r\n                    <ExpansionPanelSummary\r\n                      expandIcon={<ExpandMoreIcon />} // !mobileWidth &&\r\n                      aria-label=\"Expand\"\r\n                      aria-controls=\"additional-actions1-content\"\r\n                      id=\"additional-actions1-header\"\r\n                      classes={{\r\n                        content: classes.expansionPanelSummaryContent,\r\n                      }}\r\n                    >\r\n                      {mobileWidth ? (\r\n                        <span className=\"flex flex-col justify-center w-full\">\r\n                          <FormControlLabel\r\n                            style={{ pointerEvents: \"none\" }}\r\n                            className={`${classes.todoItemFormControl} py-3 px-1`}\r\n                            aria-label=\"Acknowledge\"\r\n                            onFocus={(event) => event.stopPropagation()}\r\n                            control={\r\n                              <Checkbox\r\n                                style={{\r\n                                  color: \"#3dd19d\",\r\n                                  pointerEvents: \"auto\",\r\n                                }}\r\n                                color=\"primary\"\r\n                                onClick={(event) => {\r\n                                  checkboxToggle(event, list);\r\n                                }}\r\n                                checked={list.isComplete}\r\n                                disabled={\r\n                                  list.assignedBy === props.currentUserEmail ||\r\n                                  list.assignedTo === props.currentUserEmail\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                              />\r\n                            }\r\n                            label={list.name}\r\n                            style={{ width: \"100%\", color: \"black\" }}\r\n                          />\r\n\r\n                          {/* <span className=\"space-x-1 row-center\">\r\n                    {\r\n                      props.isLogged && list.assignedTo===props.currentUserEmail && list.assignedBy!==props.currentUserEmail ?\r\n                      <Typography className=\"pb-1 pl-1 col-center\" variant=\"subtitle2\">\r\n                        <span>Assigned By:</span>\r\n                        <span>{list.assignedBy}</span>\r\n                      </Typography>\r\n                      : props.isLogged && list.assignedTo && list.assignedBy===props.currentUserEmail ?\r\n                        <Typography className=\"pb-1 pl-1 col-center\" variant=\"subtitle2\">\r\n                          <span>Assigned To:</span> \r\n                          <span>{list.assignedTo}</span>\r\n                        </Typography>\r\n                        : null\r\n                    }\r\n                    <BootstrapTooltip placement=\"top\" title=\"Sum of urgency, impact and difficulty\">\r\n                      <span className=\"ml-1 min-w-max col-center\">\r\n                        <span className=\"px-2 py-1 min-w-min rounded-2xl bg-green-lightest\">\r\n                          {\r\n                            1 + (typeof(list.level)==='number' ? list.level : 1) \r\n                            + (typeof(list.urgent)==='number' ? list.urgent : 1)\r\n                            + (typeof(list.important)==='number' ? list.important : 1)\r\n                          }\r\n                        </span>\r\n                      </span>\r\n                    </BootstrapTooltip>\r\n                  </span> */}\r\n                          <span className=\"row-center\">\r\n                            {/* <Box component=\"span\" className=\"flex flex-wrap w-24\" pl={2} pt={2}>\r\n                      <Typography variant=\"subtitle2\" \r\n                        style={\r\n                          (list.date<todayDate && list.isComplete) \r\n                          ? {color: \"black\"} \r\n                          : (list.date<todayDate && !list.isComplete) ? {color: \"red\"} : {color:'green'}}\r\n                      >\r\n                        <TimeAgo\r\n                          live={false} // use false to increase performance (live means it updates est. time automatically without reloading the page)\r\n                          date={list.date}  \r\n                        />\r\n                      </Typography>\r\n                    </Box> */}\r\n                            {/* <span className=\"flex\"> */}\r\n                            {/* <Typography className={classes.dateField}>\r\n                              {fullDate.date}\r\n                              <br />\r\n                              {fullDate.clock}\r\n                            </Typography> */}\r\n\r\n                            {/* <>\r\n                        <BootstrapTooltip placement=\"top\" title={list.assignedBy===props.currentUserEmail ? \"Edit Task\" : \"Tasks added by others can't be edited by you\"}>\r\n                            <span className=\"pointer\">\r\n                              <IconButton aria-label=\"edit\" disabled={list.assignedBy===props.currentUserEmail? false : true} className={classes.optionButtons} onClick={(event) => {\r\n                                editTodo(event, list, index);\r\n                              }}>\r\n                                  <EditIcon/>\r\n                              </IconButton>\r\n                            </span>\r\n                        </BootstrapTooltip>\r\n                        <BootstrapTooltip placement=\"top\" title=\"Duplicate Task\">\r\n                          <span className=\"pointer\">\r\n                            <IconButton aria-label=\"duplicate\" className={classes.optionButtons} onClick={(event) => {\r\n                              duplicateTask(event, list, index);\r\n                            }}>\r\n                              <CopyIcon />\r\n                            </IconButton>\r\n                          </span>\r\n                        </BootstrapTooltip>\r\n                        <BootstrapTooltip placement=\"top\" title={list.assignedBy===props.currentUserEmail ? \"Delete Task\" : \"Tasks added by others can't be deleted by you\"}>\r\n                            <span className=\"pointer\">\r\n                              <IconButton aria-label=\"delete\" disabled={list.assignedBy===props.currentUserEmail? false : true} className={classes.optionButtons} onClick={(event) => {\r\n                              removeTodo(event, list, index);\r\n                              }}>\r\n                                <DeleteIcon/>\r\n                              </IconButton>\r\n                            </span>\r\n                        </BootstrapTooltip>\r\n                      </> */}\r\n                            {/* </span> */}\r\n                          </span>\r\n                        </span>\r\n                      ) : (\r\n                        <>\r\n                          {\r\n                            <Fade in={true}>\r\n                              <FormControlLabel\r\n                                style={{\r\n                                  pointerEvents: \"none\",\r\n                                  transitionDelay: \"800ms\",\r\n                                }}\r\n                                className={classes.todoItemFormControl}\r\n                                aria-label=\"Acknowledge\"\r\n                                onFocus={(event) => event.stopPropagation()}\r\n                                control={\r\n                                  <Checkbox\r\n                                    style={{\r\n                                      color: \"#3dd19d\",\r\n                                      pointerEvents: \"auto\",\r\n                                    }}\r\n                                    onClick={(event) => {\r\n                                      checkboxToggle(event, list);\r\n                                    }}\r\n                                    checked={list.isComplete}\r\n                                    disabled={\r\n                                      list.assignedBy ===\r\n                                        props.currentUserEmail ||\r\n                                      list.assignedTo === props.currentUserEmail\r\n                                        ? false\r\n                                        : true\r\n                                    }\r\n                                  />\r\n                                }\r\n                                label={list.name}\r\n                              ></FormControlLabel>\r\n                            </Fade>\r\n                          }\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title=\"Sum of urgency, impact and difficulty\"\r\n                          >\r\n                            <span className=\"ml-1 mr-3 space-x-1 min-w-max row-center\">\r\n                              {/* <span className=\"\">Todue Points</span> */}\r\n                              <span className=\"text-green-dark min-w-min\">\r\n                                {1 +\r\n                                  (typeof list.level === \"number\"\r\n                                    ? list.level\r\n                                    : 1) +\r\n                                  (typeof list.urgent === \"number\"\r\n                                    ? list.urgent\r\n                                    : 1) +\r\n                                  (typeof list.important === \"number\"\r\n                                    ? list.important\r\n                                    : 1)}\r\n                              </span>\r\n                              <span>points</span>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n\r\n                          {props.isLogged &&\r\n                          list.assignedTo &&\r\n                          list.assignedBy !== props.currentUserEmail ? (\r\n                            <Typography variant=\"subtitle2\">\r\n                              Assigned By:\r\n                              <BootstrapTooltip\r\n                                placement=\"top\"\r\n                                title=\"View Profile\"\r\n                              >\r\n                                <button\r\n                                  className=\"text-blue-500 no-outline hover:text-blue-700\"\r\n                                  onClick={() => {\r\n                                    props.setOpenProfile(true);\r\n                                    props.setProfileUserId(list.assignedBy);\r\n                                  }}\r\n                                >\r\n                                  {list.assignedBy}\r\n                                </button>\r\n                              </BootstrapTooltip>\r\n                            </Typography>\r\n                          ) : props.isLogged &&\r\n                            list.assignedTo &&\r\n                            list.assignedBy === props.currentUserEmail ? (\r\n                            <Typography variant=\"subtitle2\">\r\n                              Assigned To:\r\n                              <BootstrapTooltip\r\n                                placement=\"top\"\r\n                                title=\"View Profile\"\r\n                              >\r\n                                <button\r\n                                  className=\"text-blue-500 no-outline hover:text-blue-700\"\r\n                                  onClick={() => {\r\n                                    props.setOpenProfile(true);\r\n                                    props.setProfileUserId(list.assignedTo);\r\n                                  }}\r\n                                >\r\n                                  {list.assignedTo}\r\n                                </button>\r\n                              </BootstrapTooltip>\r\n                            </Typography>\r\n                          ) : null}\r\n\r\n                          <Box component=\"span\" width=\"200px\" pl={2} pt={2}>\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={\r\n                                list.date < todayDate && list.isComplete\r\n                                  ? { color: \"black\" }\r\n                                  : list.date < todayDate && !list.isComplete\r\n                                  ? { color: \"red\" }\r\n                                  : { color: \"green\" }\r\n                              }\r\n                            >\r\n                              <TimeAgo\r\n                                live={false} // use false to increase performance (live means it updates est. time automatically without reloading the page)\r\n                                date={list.date}\r\n                              />\r\n                            </Typography>\r\n                          </Box>\r\n\r\n                          <Typography className={`${classes.dateField} mr-4`}>\r\n                            {fullDate.date} {fullDate.clock}\r\n                          </Typography>\r\n\r\n                          <>\r\n                            <BootstrapTooltip\r\n                              placement=\"top\"\r\n                              title={\r\n                                list.assignedBy === props.currentUserEmail\r\n                                  ? \"Edit Task\"\r\n                                  : \"Tasks added by others can't be edited by you\"\r\n                              }\r\n                            >\r\n                              <span className=\"pointer\">\r\n                                <IconButton\r\n                                  aria-label=\"edit\"\r\n                                  disabled={\r\n                                    list.assignedBy === props.currentUserEmail\r\n                                      ? false\r\n                                      : true\r\n                                  }\r\n                                  className={classes.optionButtons}\r\n                                  onClick={(event) => {\r\n                                    editTodo(event, list, index);\r\n                                  }}\r\n                                >\r\n                                  <EditIcon />\r\n                                </IconButton>\r\n                              </span>\r\n                            </BootstrapTooltip>\r\n                            <BootstrapTooltip\r\n                              placement=\"top\"\r\n                              title=\"Duplicate Task\"\r\n                            >\r\n                              <span className=\"pointer\">\r\n                                <IconButton\r\n                                  aria-label=\"duplicate\"\r\n                                  className={classes.optionButtons}\r\n                                  onClick={(event) => {\r\n                                    duplicateTask(event, list, index);\r\n                                  }}\r\n                                >\r\n                                  <CopyIcon />\r\n                                </IconButton>\r\n                              </span>\r\n                            </BootstrapTooltip>\r\n                            <BootstrapTooltip\r\n                              placement=\"top\"\r\n                              title={\r\n                                list.assignedBy === props.currentUserEmail\r\n                                  ? \"Delete Task\"\r\n                                  : \"Tasks added by others can't be deleted by you\"\r\n                              }\r\n                            >\r\n                              <span className=\"pointer\">\r\n                                <IconButton\r\n                                  aria-label=\"delete\"\r\n                                  disabled={\r\n                                    list.assignedBy === props.currentUserEmail\r\n                                      ? false\r\n                                      : true\r\n                                  }\r\n                                  className={classes.optionButtons}\r\n                                  onClick={(event) => {\r\n                                    removeTodo(event, list, index);\r\n                                  }}\r\n                                >\r\n                                  <DeleteIcon />\r\n                                </IconButton>\r\n                              </span>\r\n                            </BootstrapTooltip>\r\n                          </>\r\n                        </>\r\n                      )}\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails className=\"flex flex-col items-center justify-center w-full space-x-2 lg:justify-between lg:flex-row\">\r\n                      {/* <span className=\"flex items-center justify-between w-full\"> */}\r\n                      <span\r\n                        style={{\r\n                          wordBreak: \"break-word\",\r\n                          overflowWrap: \"breakWord\",\r\n                          wordWrap: \"break-word\",\r\n                        }}\r\n                        className=\"text-sm md:text-base xl:text-base lg:text-base\"\r\n                      >\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                          {list.detail}\r\n                        </Linkify>\r\n                      </span>\r\n                      <span className=\"flex flex-row items-center justify-start w-auto mt-3 space-x-1 space-y-0 lg:justify-end lg:space-x-2 lg:mt-0 lg:space-y-0 md:w-96 md:space-x-2\">\r\n                        <span className=\"col-center\">\r\n                          <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                            BUDGET\r\n                          </span>\r\n                          <span className=\"w-20 text-xl font-medium text-center rounded-full lg:w-28 h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                            {list.estimatedBudget\r\n                              ? `$ ${list.estimatedBudget}`\r\n                              : `$ 0`}\r\n                          </span>\r\n                        </span>\r\n                        <span className=\"col-center\">\r\n                          <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                            URGENCY\r\n                          </span>\r\n                          <span className=\"w-20 text-xl font-semibold text-center rounded-full lg:w-24 h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                            {list.urgent ? `${list.urgent} / 5` : `0 / 5`}\r\n                          </span>\r\n                        </span>\r\n                        <span className=\"col-center\">\r\n                          <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                            IMPACT\r\n                          </span>\r\n                          <span className=\"w-20 text-xl font-semibold text-center rounded-full lg:w-24 h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                            {list.important ? `${list.important} / 5` : `0 / 5`}\r\n                          </span>\r\n                        </span>\r\n                        <span className=\"col-center\">\r\n                          <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                            DIFFICULTY\r\n                          </span>\r\n                          <span className=\"w-20 text-xl font-semibold text-center rounded-full lg:w-24 h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                            {list.level ? `${list.level} / 5` : `0 / 5`}\r\n                          </span>\r\n                        </span>\r\n                      </span>\r\n                      {/* </span> */}\r\n                      {/* <Typography color=\"textSecondary\" className={classes.taskProps}> \r\n                  {list.urgent}\r\n                 </Typography> */}\r\n                      {/* <Typography color=\"textSecondary\" className={classes.taskProps}>\r\n                   {list.important}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" className={classes.taskProps}>\r\n                  {list.level}\r\n                  </Typography> */}\r\n                      {mobileWidth ? (\r\n                        <span className=\"mt-2 row-center\">\r\n                          <span className=\"flex\">\r\n                            <Typography className={classes.dateField}>\r\n                              {fullDate.date}\r\n                              <br />\r\n                              {fullDate.clock}\r\n                            </Typography>\r\n                          </span>\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title={\r\n                              list.assignedBy === props.currentUserEmail\r\n                                ? \"Edit Task\"\r\n                                : \"Tasks added by others can't be edited by you\"\r\n                            }\r\n                          >\r\n                            <span className=\"pointer\">\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                disabled={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                className={classes.optionButtons}\r\n                                onClick={(event) => {\r\n                                  editTodo(event, list, index);\r\n                                }}\r\n                              >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title=\"Duplicate Task\"\r\n                          >\r\n                            <span className=\"pointer\">\r\n                              <IconButton\r\n                                aria-label=\"duplicate\"\r\n                                className={classes.optionButtons}\r\n                                onClick={(event) => {\r\n                                  duplicateTask(event, list, index);\r\n                                }}\r\n                              >\r\n                                <CopyIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title={\r\n                              list.assignedBy === props.currentUserEmail\r\n                                ? \"Delete Task\"\r\n                                : \"Tasks added by others can't be deleted by you\"\r\n                            }\r\n                          >\r\n                            <span className=\"pointer\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                disabled={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                className={classes.optionButtons}\r\n                                onClick={(event) => {\r\n                                  removeTodo(event, list, index);\r\n                                }}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                        </span>\r\n                      ) : null}\r\n                    </ExpansionPanelDetails>\r\n                  </ExpansionPanel>\r\n                // </ThemeProvider>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n        {props.list.todoList.length === 0 && (\r\n          <div>\r\n            <h5 style={{ textAlign: \"center\", padding: 25 }}>\r\n              Add the first task/ step to\r\n              <Typography variant=\"h6\"> {props.list.name}</Typography> and start\r\n              getting things todone around here...\r\n            </h5>\r\n          </div>\r\n        )}\r\n        <IconButton\r\n          aria-label=\"edit\"\r\n          className={classes.addTodoItemButton}\r\n          onClick={(event) => {\r\n            props.openNewTodoDialog();\r\n          }}\r\n        >\r\n          <AddCircleOutlineIcon className={classes.addTodoItemButtonIcon} />\r\n        </IconButton>\r\n\r\n        {/* ALERT FOR WHEN TASK IS MARKED COMPLETED */}\r\n        {\r\n          // in the below line, && is used to make a AND Gate meaning that it'll only display Box component if\r\n          // openCompletedAlert is true (true+true=true & false in every other combination)\r\n          // this is widely used instead of ternary operator when there is no value for \"else\" condition\r\n          openCompletedAlert && (\r\n            <Box\r\n              position=\"fixed\"\r\n              width=\"250px\"\r\n              top=\"40%\"\r\n              left=\"36%\"\r\n              zIndex=\"999\"\r\n            >\r\n              <SuccessAnimation color=\"#3dd19d\" text={chooseAlertText()} />\r\n            </Box>\r\n          )\r\n        }\r\n\r\n        <Snackbar\r\n          open={alertOpen}\r\n          autoHideDuration={4000}\r\n          onClose={handleCloseAlert}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        >\r\n          <Alert\r\n            style={{ background: \"#3dd19d\" }}\r\n            variant=\"filled\"\r\n            onClose={handleCloseAlert}\r\n            severity={severity}\r\n          >\r\n            {alertMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3\r\n          style={{\r\n            textAlign: \"center\",\r\n            padding: 25,\r\n            marginTop: \"50px\",\r\n            minHeight: \"40vh\",\r\n          }}\r\n        >\r\n          Create your first board from left menu and start getting things todone\r\n          around here.\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;\r\n","export default __webpack_public_path__ + \"static/media/logo.7e86100a.png\";","export const filterArrOfObj = (arr, param)=>{\r\n    const filteredArr = arr.reduce((acc, current) => {\r\n      const x = acc.find(item => item[param] === current[param]);\r\n      if (!x) {\r\n        return acc.concat([current]);\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, []);\r\n  \r\n    return filteredArr;\r\n  }\r\n\r\nexport const dateMaker = (timestamp) => {\r\n    // 'yyyy-mm-dd'\r\n    const date = new Date(timestamp);\r\n    const fullYear = date.getFullYear();\r\n    const month = date.getMonth()+1;\r\n    const day = date.getDate();\r\n  \r\n    return `${fullYear}-${month}-${day}`;\r\n  }\r\n\r\nexport const dateMakerMonthly = (timestamp) => {\r\n    // 'yyyy-mm'\r\n    const date = new Date(timestamp);\r\n    const fullYear = date.getFullYear();\r\n    const month = date.getMonth()+1;\r\n  \r\n    return `${fullYear}-${month}`;\r\n  }\r\n\r\nconst getWeekOfMonth = (dateObj) => {\r\n    let d = new Date(dateObj);\r\n    let date = d.getDate();\r\n    let day = d.getDay();\r\n  \r\n    let weekOfMonth = Math.ceil((date - 1 - day) / 7);\r\n  \r\n    return weekOfMonth;\r\n  }\r\n\r\nexport const dateMakerWeekly = (timestamp) => {\r\n    // 'yyyy-mm-wom'\r\n    const date = new Date(timestamp);\r\n    const fullYear = date.getFullYear();\r\n    const month = date.getMonth()+1;\r\n    const wom = getWeekOfMonth(timestamp)+1;\r\n  \r\n    return `${fullYear}-${month}-${wom}`; \r\n}\r\n// export const checkBwDaysPast = (tsToCheck, daysInPast) => {\r\n\r\n//     let pastTimeStamp = new Date();\r\n//     pastTimeStamp.setTime(pastTimeStamp.getTime() - (daysInPast * 24 * 60 * 60 * 1000));\r\n  \r\n//     const startDate = dateMaker(pastTimeStamp);\r\n//     const endDate = dateMaker(new Date().getTime());\r\n//     const dateToCheck = dateMaker(tsToCheck);\r\n  \r\n//     return dayjs(dateToCheck).isBetween(startDate, dayjs(endDate));\r\n//   };","import dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\nimport { dateMaker, dateMakerMonthly, filterArrOfObj, dateMakerWeekly } from './extraUtils';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nconst extractStats = (tasks, currentUserId) => {\r\n\r\n  const checkAssignedToOthers = (task) => {\r\n    if (\r\n      task.assignedBy === currentUserId &&\r\n      task.assignedTo !== \"\" &&\r\n      task.assignedTo !== currentUserId\r\n    ) return true;\r\n    else return false;\r\n  }\r\n\r\n  const checkAssignedToMyself = (task) => {\r\n    if (\r\n      task.assignedBy === currentUserId &&\r\n      task.assignedTo !== \"\" &&\r\n      task.assignedTo === currentUserId\r\n    ) return true;\r\n    else return false;\r\n  }\r\n\r\n  const checkAssignee = (task) => {\r\n    if (\r\n      task.assignedTo === currentUserId \r\n      && task.assignedBy !== currentUserId\r\n    ) return true;\r\n    else return false;\r\n  }\r\n\r\nconst tasksSortedByCreatedAt = tasks.sort((a,b)=>a.createDate-b.createDate);\r\nconst tasksSortedByCompletedAt = tasks.sort((a,b)=>a?.completedAt-b?.completedAt);\r\n// const completedTasksSorted = tasks.filter(task=>task.isComplete).sort((a,b)=>a.completedAt-b.completedAt);\r\n\r\n  const getWeekDay = (date) => {\r\n    const dow = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const dayNum = new Date(date).getDay();\r\n    const day = dow[dayNum];\r\n    // `${day} ${date.split('-')[2]}`\r\n    return day;\r\n  }\r\n\r\n  const getMonth = (date) => {\r\n    const moy = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const monNum = new Date(date).getMonth();\r\n    const month = moy[monNum];\r\n    // `${day} ${date.split('-')[2]}`\r\n    return month;\r\n  }\r\n\r\n  const makeWeek = (date) => {\r\n    const moy = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n    const month = Number(date?.split('-')[1])-1;\r\n    const wom = Number(date?.split('-')[2]);\r\n\r\n    const monthString = moy[month];\r\n\r\n    return `Week ${wom}, ${monthString}`;\r\n  }\r\n\r\n  const extractDailyStats = (timeseriesObj) => {\r\n    const keys = Object.keys(timeseriesObj);\r\n    \r\n    const stats = [['Date', 'Completed', 'Created', 'Assigned']];\r\n\r\n    keys?.map((key, index)=>{\r\n      if(index>5) return;\r\n      const values = Object.values(timeseriesObj[key]);\r\n      const arrToPush = [getWeekDay(key), ...values];\r\n      stats.push(arrToPush);\r\n    })\r\n\r\n    // console.log(dayjs(dateMaker(1613205056048)).isSame(dateMaker(1613205056048), 'day'))\r\n    console.log(stats)\r\n\r\n    return stats;\r\n  }\r\n  \r\n  const extractMonthlyStats = (timeseriesObj) => {\r\n    const keys = Object.keys(timeseriesObj)?.sort();\r\n    const stats = [['Month', 'Completed', 'Created', 'Assigned']];\r\n\r\n    keys?.map((key, index)=>{\r\n      if(index>6) return;\r\n      const values = Object.values(timeseriesObj[key]);\r\n      const arrToPush = [getMonth(key), ...values];\r\n      stats.push(arrToPush);\r\n    })\r\n\r\n    console.log(stats)\r\n    return stats;\r\n  }\r\n\r\n  const extractWeeklyStats = (timeseriesObj) => {\r\n    const keysSorted = Object.keys(timeseriesObj)?.sort();\r\n    const keys = keysSorted.slice(keysSorted.length-3)\r\n      // (a.split('-')[0]-b.split('-')[0])\r\n      // &&\r\n      // (a.split('-')[1]-b.split('-')[1])\r\n      // &&\r\n      // (a.split('-')[2]-b.split('-')[2])\r\n      // ).reverse();\r\n\r\n    // const splitted = Object.keys(timeseriesObj)?.split('-');\r\n    // const year\r\n\r\n    console.log('keys',keys); \r\n    const stats = [['Week', 'Completed', 'Created', 'Assigned']];\r\n\r\n    keys?.map((key, index)=>{\r\n      // if(index>3) return;\r\n      const values = Object.values(timeseriesObj[key]);\r\n      const arrToPush = [makeWeek(key), ...values];\r\n      stats.push(arrToPush);\r\n    })\r\n\r\n    console.log(stats)\r\n    return stats;\r\n  }\r\n\r\n  const timeseriesObj = {};\r\n  const timeseriesObjMonthly = {};\r\n  const timeseriesObjWeekly = {};\r\n\r\n  tasksSortedByCreatedAt.map(task=>{ \r\n    if(task?.completedAt && task.isComplete && (checkAssignee(task) || checkAssignedToMyself(task))) {\r\n      const prev = timeseriesObj[dateMaker(task.completedAt)];\r\n      const prevMonthly = timeseriesObjMonthly[dateMakerMonthly(task.completedAt)];\r\n      const prevWeekly = timeseriesObjWeekly[dateMakerWeekly(task.completedAt)];\r\n      if(prev){\r\n        timeseriesObj[dateMaker(task.completedAt)] = {...prev, completed: prev.completed ? prev.completed + 1 : 1};\r\n      } else {\r\n        timeseriesObj[dateMaker(task.completedAt)] = {completed: 1, created: 0, assigned : 0};\r\n      }\r\n      if(prevMonthly){\r\n        timeseriesObjMonthly[dateMakerMonthly(task.completedAt)] = {...prevMonthly, completed: prevMonthly.completed ? prevMonthly.completed + 1 : 1};\r\n      } else {\r\n        timeseriesObjMonthly[dateMakerMonthly(task.completedAt)] = {completed: 1, created: 0, assigned : 0};\r\n      }\r\n      if(prevWeekly){\r\n        timeseriesObjWeekly[dateMakerWeekly(task.completedAt)] = {...prevWeekly, completed: prevWeekly.completed ? prevWeekly.completed + 1 : 1};\r\n      } else {\r\n        timeseriesObjWeekly[dateMakerWeekly(task.completedAt)] = {completed: 1, created: 0, assigned : 0};\r\n      }\r\n    }\r\n    if(checkAssignedToOthers(task)) {\r\n      const prev = timeseriesObj[dateMaker(task.createDate)];\r\n      const prevMonthly = timeseriesObjMonthly[dateMakerMonthly(task.createDate)];\r\n      const prevWeekly = timeseriesObjWeekly[dateMakerWeekly(task.createDate)];\r\n      if(prev){\r\n        timeseriesObj[dateMaker(task.createDate)] = {...prev, assigned: prev.assigned ? prev.assigned + 1 : 1};\r\n      } else {\r\n        timeseriesObj[dateMaker(task.createDate)] = {completed: 0, created: 0, assigned : 1};\r\n      }\r\n      if(prevMonthly){\r\n        timeseriesObjMonthly[dateMakerMonthly(task.createDate)] = {...prevMonthly, assigned: prevMonthly.assigned ? prevMonthly.assigned + 1 : 1};\r\n      } else {\r\n        timeseriesObjMonthly[dateMakerMonthly(task.createDate)] = {completed: 0, created: 0, assigned : 1};\r\n      }\r\n      if(prevWeekly){\r\n        timeseriesObjWeekly[dateMakerWeekly(task.createDate)] = {...prevWeekly, assigned: prevWeekly.assigned ? prevWeekly.assigned + 1 : 1};\r\n      } else {\r\n        timeseriesObjWeekly[dateMakerWeekly(task.createDate)] = {completed: 0, created: 0, assigned : 1};\r\n      }\r\n    }\r\n    if(checkAssignedToMyself(task) || checkAssignedToOthers(task)) {\r\n      const prev = timeseriesObj[dateMaker(task.createDate)];\r\n      const prevMonthly = timeseriesObjMonthly[dateMakerMonthly(task.createDate)];\r\n      const prevWeekly = timeseriesObjWeekly[dateMakerWeekly(task.createDate)];\r\n      if(prev){\r\n        timeseriesObj[dateMaker(task.createDate)] = {...prev, created: prev.created ? prev.created + 1 : 1};\r\n      } else {\r\n        timeseriesObj[dateMaker(task.createDate)] = {completed: 0, created: 1, assigned : 0};\r\n      }\r\n      if(prevMonthly){\r\n        timeseriesObjMonthly[dateMakerMonthly(task.createDate)] = {...prevMonthly, created: prevMonthly.created ? prevMonthly.created + 1 : 1};\r\n      } else {\r\n        timeseriesObjMonthly[dateMakerMonthly(task.createDate)] = {completed: 0, created: 1, assigned : 0};        \r\n      }\r\n      if(prevWeekly){\r\n        timeseriesObjWeekly[dateMakerWeekly(task.createDate)] = {...prevWeekly, created: prevWeekly.created ? prevWeekly.created + 1 : 1};\r\n      } else {\r\n        timeseriesObjWeekly[dateMakerWeekly(task.createDate)] = {completed: 0, created: 1, assigned : 0};        \r\n      }\r\n    }\r\n    })\r\n    console.log('timeseriesObjMonthly', timeseriesObjMonthly)\r\n    return {\r\n      daily: extractDailyStats(timeseriesObj),\r\n      monthly: extractMonthlyStats(timeseriesObjMonthly),\r\n      weekly: extractWeeklyStats(timeseriesObjWeekly)\r\n    } \r\n};\r\n\r\nconst isNotEmpty = (toCheck) => toCheck?.length;\r\n\r\n\r\nexport const statsMaker = (tasksData, currentUserId) => {\r\n\r\n  if(isNotEmpty(tasksData)){\r\n    const allTasksRaw = tasksData.map(boardObj=>[...boardObj.todoList]).flat();\r\n    const allTasks = filterArrOfObj(allTasksRaw, \"taskId\");\r\n    \r\n    if(isNotEmpty(allTasks)){\r\n      console.log('extractStats',extractStats(allTasks, currentUserId))\r\n      return extractStats(allTasks, currentUserId);\r\n    }\r\n  }\r\n    \r\n  return null;\r\n}","import React, { useState, useEffect, useRef, lazy, Suspense } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n// import Chart from 'react-google-charts';\r\n\r\nimport { statsMaker } from './utils';\r\n\r\nconst Charts = (props) => {\r\n\r\n    const [tabOpenNum, setTabOpenNum] = useState(2);\r\n    const converters = {\r\n        epochDaysToDate : (days) => new Date(Math.floor(18725 * 8.64e7)),\r\n        // epochDaysToDate : (days) => new Date(Math.floor(18725 * 8.64e7)), // epochmonth - ((current year number - 1970 - 1) * 12) = current month number\r\n        dateToDay : (date) => new Date(date).getDate(), \r\n    };\r\n    return (\r\n        <span className=\"h-full\">\r\n            <ChartTabs {...props} tabOpenNum={tabOpenNum} setTabOpenNum={setTabOpenNum} />\r\n        </span>\r\n    )\r\n}\r\n\r\nconst ChartTabs = (props) => {\r\n\r\n  const Chart = lazy(()=> import('react-google-charts'));\r\n\r\n  const wrapper = useRef();\r\n    useEffect(() => {\r\n        return () => {\r\n          wrapper?.current?.getChart()?.clearChart();\r\n        };\r\n    }, []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n      props.setTabOpenNum(newValue);\r\n    };\r\n\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      if(props.tasksData?.length){\r\n        const data = statsMaker(props.tasksData, props.currentUserId);\r\n        if(data) setChartData(data);\r\n      }\r\n    }, [chartData.length])\r\n  \r\n    return (\r\n      <Paper square elevation={0}>\r\n        {/* {console.log('chartData',chartData)} */}\r\n        <Tabs\r\n          value={props.tabOpenNum}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          aria-label=\"Chart Tabs\"\r\n          className=\"mb-3\"\r\n        >\r\n          <Tab label=\"Daily\" />\r\n          <Tab label=\"Weekly\" />\r\n          <Tab label=\"Monthly\" />\r\n        </Tabs>\r\n        <TabPanel value={props.tabOpenNum} index={0}>\r\n            <Suspense fallback={<CircularProgress style={{ color: \"#3dd19d\" }} />}>\r\n            <Chart\r\n                width={'450px'}\r\n                height={'320px'}\r\n                chartType=\"Bar\"\r\n                loader={<CircularProgress style={{ color: \"#3dd19d\" }} />}\r\n                data={\r\n                  chartData.daily\r\n                  // [\r\n                  // ['Day', 'Completed', 'Created'],\r\n                  // ['Mon', 0, 0],\r\n                  // ['Tue', 60, 50],\r\n                  // ['Wed', 70, 50],\r\n                  // ['Thu', 80, 50],\r\n                  // ['Fri', 100, 60],\r\n                  // ['Sat', 60, 50],\r\n                  // ['Sun', 70, 50]\r\n                  // ]\r\n                }\r\n                options={{\r\n                // Material design options\r\n                colors: ['#3dd19d','lightblue', '#ffab91'],\r\n                bar: { groupWidth: \"60px\" },\r\n                chart: {\r\n                    title: 'Daily Performance',\r\n                    subtitle: 'Tasks completion metrics',\r\n                },\r\n                }}\r\n                getChartWrapper={(w) => (wrapper.current = w)}\r\n            />\r\n            </Suspense>\r\n        </TabPanel>\r\n        <TabPanel value={props.tabOpenNum} index={1}> \r\n          <Suspense fallback={<CircularProgress style={{ color: \"#3dd19d\" }} />}>\r\n            <Chart\r\n                width={'450px'}\r\n                height={'320px'}\r\n                chartType=\"Bar\"\r\n                loader={<CircularProgress style={{ color: \"#3dd19d\" }} />}\r\n                data={\r\n                  chartData.weekly\r\n                  // [\r\n                  //   ['Week', 'Completed', 'Created'],\r\n                  //   ['Apr 1-7', 100, 40],\r\n                  //   ['Apr 7-14', 117, 46],\r\n                  //   ['Apr 14-21', 66, 11],\r\n                  //   ['Apr 21-28', 103, 54],\r\n                  // ]\r\n                }\r\n                options={{\r\n                // Material design options\r\n                colors: ['#3dd19d','lightblue', '#ffab91'],\r\n                bar: { groupWidth: \"60px\" },\r\n                chart: {\r\n                    title: 'Weekly Performance',\r\n                    subtitle: 'Tasks completion metrics',\r\n                },\r\n                }}\r\n                getChartWrapper={(w) => (wrapper.current = w)}\r\n            />\r\n            </Suspense>\r\n        </TabPanel>\r\n        <TabPanel value={props.tabOpenNum} index={2}>\r\n          <Suspense fallback={<CircularProgress style={{ color: \"#3dd19d\" }} />}>\r\n            <Chart\r\n                width={'450px'}\r\n                height={'320px'}\r\n                chartType=\"Bar\"\r\n                loader={<CircularProgress style={{ color: \"#3dd19d\" }} />}\r\n                data={\r\n                  chartData.monthly\r\n                  // [\r\n                  //   ['Month', 'Completed', 'Created', 'Assigned'],\r\n                  //   ['Jan', 100, 60, 80],\r\n                  //   ['Feb', 60, 50, 60],\r\n                  //   ['Mar', 70, 50, 60],\r\n                  //   ['Apr', 80, 50, 60],\r\n                  // ]\r\n              }\r\n                options={{\r\n                // Material design options\r\n                colors: ['#3dd19d','lightblue', '#ffab91'],\r\n                bar: { groupWidth: \"60px\" },\r\n                chart: {\r\n                    title: 'Monthly Performance',\r\n                    subtitle: 'Tasks completion metrics',\r\n                },\r\n                }}\r\n                getChartWrapper={(w) => (wrapper.current = w)}\r\n            />\r\n            </Suspense>\r\n        </TabPanel>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n        className=\"flex items-center justify-end w-full transition-all flex-end\"\r\n      >\r\n        {value === index && (\r\n          <span className=\"flex items-center justify-end w-full py-4 transition-all flex-end\">\r\n            <span>{children}</span>\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Charts\r\n","import React from 'react';\r\n\r\nimport {\r\n    LinkedIn as LinkedInIcon,\r\n    GitHub as GithubIcon,\r\n    LinkRounded,\r\n    \r\n  } from \"@material-ui/icons\";\r\n\r\nimport BootstrapTooltip from \"../../components/BootstrapTooltip\";\r\n\r\nconst LinksSection = () => {\r\n    return (\r\n        <span className=\"w-full space-x-3 row-center\">\r\n            <BootstrapTooltip placement=\"top\" title=\"coming soon\">\r\n                <span><GithubIcon className=\"w-10 h-10 text-green\" /></span>\r\n            </BootstrapTooltip>\r\n            <BootstrapTooltip placement=\"top\" title=\"coming soon\">\r\n                <span><LinkedInIcon className=\"w-10 h-10 text-green\" /></span>\r\n            </BootstrapTooltip>\r\n            <BootstrapTooltip placement=\"top\" title=\"coming soon\">\r\n                <span><LinkRounded className=\"w-10 h-10 text-green\" /></span>\r\n            </BootstrapTooltip>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default LinksSection\r\n","import React from 'react'\r\n\r\nconst TopStats = ( props ) => {\r\n    const {\r\n        numOfAssignedToMyselfCompleted,\r\n        assigneeCompletedTasks,\r\n        remainingAssigneeTasks,\r\n        numOfAssignedToMyselfRemaining,\r\n        numOfBoardsCompleted\r\n    } = props;\r\n    return (\r\n        <span className=\"space-y-8 col-start\">\r\n            <span className=\"space-y-2 col-start\">\r\n            <span className=\"text-xs font-medium text-gray-400\">COMPLETED TASKS</span>\r\n            <span className=\"h-8 text-2xl font-bold text-center rounded-full w-28 bg-opacity-80 bg-green-lightest text-green\">\r\n                {numOfAssignedToMyselfCompleted+assigneeCompletedTasks}\r\n            </span>\r\n            </span>\r\n            <span className=\"space-y-2 col-start\">\r\n            <span className=\"text-xs font-medium text-gray-400\">INCOMPLETE TASKS ACROSS ALL BOARDS</span>\r\n            <span className={`h-8 text-2xl font-bold text-center ${remainingAssigneeTasks+numOfAssignedToMyselfRemaining===0 ? \"text-green bg-green-lightest\" : \"text-red-400 bg-red-100\"} rounded-full w-28 bg-opacity-80`}>\r\n                {remainingAssigneeTasks + numOfAssignedToMyselfRemaining}\r\n            </span>\r\n            </span>\r\n            <span className=\"space-y-2 col-start\">\r\n            <span className=\"text-xs font-medium text-gray-400\">BOARDS COMPLETED (ALL TIME)</span>\r\n            <span className=\"h-8 text-2xl font-bold text-center rounded-full w-28 bg-opacity-80 bg-green-lightest text-green\">\r\n                {numOfBoardsCompleted}\r\n            </span>\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default TopStats\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n// import AssignmentCompleteIcon from '@material-ui/icons/AssignmentTurnedIn';\r\n// import AssignmentLateIcon from '@material-ui/icons/AssignmentLate';\r\n// import CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport AssigneeIcon from '@material-ui/icons/AssignmentInd';\r\nimport AssignmentSelfIcon from '@material-ui/icons/AssignmentReturned';\r\nimport AssignmentCompletedIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport TotalTasksCompletedIcon from '@material-ui/icons/DoneAll';\r\nimport AssignedToOthersCompletedIcon from '@material-ui/icons/CheckCircle';\r\n\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport firebase from \"../../services/firebase\";\r\n\r\nimport Charts from './Charts';\r\nimport \"./Profile.css\";\r\nimport BootstrapTooltip from \"../../components/BootstrapTooltip\";\r\n\r\nimport LinksSection from './LinksSection';\r\nimport TopStats from \"./TopStats\";\r\n\r\n// COMMENT 1\r\n\r\nfunction useTodoLists(currentUserId, setLoaded) {\r\n  const [todoLists, setTodoLists] = React.useState([]);\r\n  // COMMENT 2\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"boards\")\r\n      .where(\"assignments\", \"array-contains\", currentUserId)\r\n      .get()\r\n      .then((snapShot) => {\r\n        const newTodoLists = [];\r\n        snapShot.docs.map((doc) => {\r\n          let tempData = {};\r\n          tempData = doc.data();\r\n          tempData.id = doc.id;\r\n          newTodoLists.push(tempData);\r\n        });\r\n        setTodoLists(newTodoLists);\r\n        setLoaded(true);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"error getting documents\");\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }, []);\r\n  return todoLists;\r\n}\r\n\r\nconst Profile = (props) => {\r\n  const currentUserId = props.currentUserId; //firebase.auth().currentUser.email;\r\n  const userUid = firebase.auth().currentUser.uid;\r\n\r\n  // const currentUserEmail =\r\n  //   firebase.auth().currentUser && firebase.auth().currentUser.email;\r\n  const [username, setUsername] = useState('');\r\n    // firebase.auth().currentUser && firebase.auth().currentUser.displayName;\r\n  if (!userUid) {\r\n    // not logged in\r\n    alert(\"Please login first\");\r\n    props.history.replace(\"/\");\r\n\r\n    return null;\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [loaded, setLoaded] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [position, setPosition] = useState(\"\");\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [name, setName] = useState(\"\");\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const tasksData = useTodoLists(currentUserId, setLoaded);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToOthers, setNumOfAssignedToOthers] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToOthersCompleted, setNumOfAssignedToOthersCompleted] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToOthersRemaining, setNumOfAssignedToOthersRemaining] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToMyself, setNumOfAssignedToMyself] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToMyselfCompleted, setNumOfAssignedToMyselfCompleted] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignedToMyselfRemaining, setNumOfAssignedToMyselfRemaining] = useState(0); \r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfAssignee, setNumOfAssignee] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [totalTasks, setTotalTasks] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [remainingAssigneeTasks, setRemainingAssigneeTasks] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [assigneeCompletedTasks, setAssigneeCompletedTasks] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [numOfBoardsCompleted, setNumOfBoardsCompleted] = useState(0);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const [assigneeCompletedTasks, setAssigneeCompletedTasks] = useState(0);\r\n\r\n  let completionRate = Math.round(( (assigneeCompletedTasks+numOfAssignedToMyselfCompleted) * 100) / (numOfAssignedToMyself+numOfAssignee));\r\n\r\n  // // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // useEffect(() => {\r\n  //   firebase\r\n  //     .firestore()\r\n  //     .collection(\"users\")\r\n  //     .doc(userUid)\r\n  //     .get()\r\n  //     .then(async (doc) => {\r\n  //       setUsername(doc.data().psudo);\r\n  //       setPosition(doc.data().position);\r\n  //       setName(doc.data().name);\r\n  //       setImgUrl(doc.data().imgUrl);\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // }, []);\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"users\")\r\n      .where('email', '==', currentUserId)\r\n      .get()\r\n      .then((snapShot) => {\r\n        snapShot.docs.map((doc, index) => {\r\n          setUsername(doc.data().psudo);\r\n          setPosition(doc.data().position);\r\n          setName(doc.data().name);\r\n          setImgUrl(doc.data().imgUrl);\r\n        })\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(() => {\r\n    if (tasksData.length > 0) {\r\n      console.log(\"dataaa\", tasksData);\r\n      tasksData.map(async (boardObj) => {\r\n        let tasksCompletedInBoard = 0;\r\n        // let toto = totalTasks+boardObj.todoList.length;\r\n        await setTotalTasks(\r\n          (prevState) => prevState + boardObj.todoList.length\r\n        );\r\n        // console.log(await totalTasks);\r\n        if(boardObj.todoList.length>0){\r\n          boardObj.todoList.map(async (task) => {\r\n            if(task.isComplete) {\r\n              tasksCompletedInBoard += 1;\r\n            }\r\n            if (\r\n              task.assignedBy === currentUserId &&\r\n              task.assignedTo !== \"\" &&\r\n              task.assignedTo !== currentUserId\r\n            ) {\r\n                await setNumOfAssignedToOthers((prevState) => prevState + 1);\r\n                if(task.isComplete) {\r\n                  setNumOfAssignedToOthersCompleted(prev=>prev+1);\r\n                }\r\n                else setNumOfAssignedToOthersRemaining(prev=>prev+1);\r\n              }\r\n            if (\r\n              task.assignedBy === currentUserId &&\r\n              task.assignedTo !== \"\" &&\r\n              task.assignedTo === currentUserId\r\n            ) {\r\n                await setNumOfAssignedToMyself((prevState) => prevState + 1);\r\n                if(task.isComplete) {\r\n                  setNumOfAssignedToMyselfCompleted(prev => prev + 1 );\r\n                }\r\n                else setNumOfAssignedToMyselfRemaining(prev => prev + 1 );\r\n              }\r\n            if (\r\n              task.assignedTo === currentUserId \r\n              // task.assignedBy !== currentUserId && // CHANGE THIS SO BOTH ASSIGNEE SELF AND ASSIGNEE OF OTHERS ARE DIFFERENT METRICS\r\n              && task.assignedBy !== currentUserId\r\n            ) {\r\n              await setNumOfAssignee((prevState) => prevState + 1);\r\n              if (task.isComplete) {\r\n                await setAssigneeCompletedTasks((prevState) => prevState + 1);\r\n              } else {\r\n                await setRemainingAssigneeTasks((prevState) => prevState + 1);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        if(tasksCompletedInBoard===boardObj.todoList.length && tasksCompletedInBoard!==0) setNumOfBoardsCompleted(prev=>prev+1);\r\n      });\r\n      // console.log('assigned:', numOfAssignedToOthers, 'assignee:', numOfAssignee, 'total:',\r\n      // totalTasks, 'remaining:', remainingAssigneeTasks, 'completedTasks', completedTasks);\r\n    }\r\n  }, [tasksData.length]);\r\n\r\n  return loaded ? (\r\n    <div className=\"w-full mt-5\">\r\n      <span\r\n        className=\"w-full\"\r\n      >\r\n        <div>\r\n          <div className=\"space-y-6\">\r\n            <Paper elevation={2} className=\"p-5 mx-5\">\r\n              <span className=\"flex items-start justify-start\">\r\n                <span\r\n                  style={{height: '450px'}}\r\n                  className=\"w-1/3 space-x-3 space-y-4 col-start\"\r\n                >\r\n                  <span className=\"mx-auto space-y-4 col-center\">\r\n                    <Avatar\r\n                        // variant=\"square\"\r\n                        style={{ width: \"180px\", height: \"180px\" }}\r\n                        alt={name}\r\n                        src={imgUrl}\r\n                      />\r\n                      <span className=\"space-y-1 text-base font-medium text-gray-400 col-center\">\r\n                        <span>{username}</span>\r\n                        <span>{currentUserId}</span>\r\n                      </span>\r\n                  </span>\r\n                  {/* {console.log(\"URLLLLLLL\", imgUrl)} */}\r\n                  <LinksSection />\r\n                </span>\r\n                <span className=\"w-2/3 h-full row-start\">\r\n                  <span className=\"w-2/5 h-full space-y-4 col-start\"> \r\n                      {/* USERNAME + POSITION */}\r\n                    <span className=\"flex flex-col w-full space-y-4\">\r\n                      <span className=\"text-lg text-gray-800 list-none col-start h-18\">\r\n                        <span className=\"text-2xl font-semibold text-gray-600\">\r\n                          <span>{name}</span>\r\n                        </span>\r\n                        {\r\n                          position ? \r\n                          <span className=\"text-sm font-medium text-green-light\">\r\n                            <span>{position}</span>\r\n                          </span>\r\n                          :\r\n                          <span className=\"text-sm font-medium text-green-light\">\r\n                            <span>Position: N/A</span>\r\n                          </span>\r\n                        }\r\n                      </span>\r\n                      {/* RATING */}\r\n                      <span className=\"flex flex-col justify-center space-y-1 h-28\">\r\n                        <span className=\"text-xs font-medium text-gray-400 \">TODUE SCORE</span>\r\n                        <span className=\"flex items-center justify-start space-x-2\">\r\n                          <BootstrapTooltip placement=\"top\" title=\"This is your completion rate\">  \r\n                            <span className=\"text-4xl font-bold text-green\">{completionRate ? completionRate : 0}%</span>\r\n                          </BootstrapTooltip>\r\n                          <Rating precision={0.5} style={{color:'#3dd19d'}} name=\"read-only\" value={completionRate ? (completionRate*5)/100 : 0} readOnly />\r\n                        </span>\r\n                      </span>\r\n                    </span>\r\n                    {/* STATS */}\r\n                    <TopStats\r\n                      numOfAssignedToMyselfCompleted = {numOfAssignedToMyselfCompleted}\r\n                      assigneeCompletedTasks = {assigneeCompletedTasks}\r\n                      remainingAssigneeTasks = {remainingAssigneeTasks}\r\n                      numOfAssignedToMyselfRemaining = {numOfAssignedToMyselfRemaining}\r\n                      numOfBoardsCompleted = {numOfBoardsCompleted} \r\n                    />\r\n                  </span>\r\n                  <span className=\"h-full\">\r\n                    {\r\n                      tasksData?.length &&\r\n                      <Charts\r\n                      tasksData={tasksData}\r\n                      currentUserId={currentUserId}\r\n                      // numOfAssignedToMyselfRemaining={numOfAssignedToMyselfRemaining}\r\n                      // remainingAssigneeTasks={remainingAssigneeTasks} \r\n                    />\r\n                    }\r\n                  </span>\r\n                </span>\r\n              </span>\r\n              {/* <Box marginLeft={10}>\r\n                <ul>\r\n                  <li>\r\n                    <Typography>My Total tasks: \r\n                      <Typography component=\"span\" color=\"primary\"> {totalTasks}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned by ME to OTHERS: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToOthers}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned by ME to OTHERS completed: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToOthersCompleted}</Typography></Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned by ME to OTHERS remaining: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToOthersRemaining}</Typography></Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned to Self Tasks: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToMyself}</Typography></Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned to Self Tasks completed: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToMyselfCompleted}</Typography></Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>Assigned to Self Tasks remaining: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignedToMyselfRemaining}</Typography></Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Tasks assigned to ME by OTHERS: \r\n                      <Typography component=\"span\" color=\"primary\">{numOfAssignee}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Tasks assigned to ME by OTHERS completed: \r\n                      <Typography component=\"span\" color=\"primary\">{assigneeCompletedTasks}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Tasks assigned to ME by OTHERS remaining: \r\n                      <Typography component=\"span\" color=\"primary\">{remainingAssigneeTasks}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Completion Score for tasks assigned to ME by OTHERS: \r\n                      <Typography component=\"span\" color=\"primary\">{`${Math.round((assigneeCompletedTasks * 100) / numOfAssignee)}%`}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Completion Score for tasks assigned by ME to OTHERS: \r\n                      <Typography component=\"span\" color=\"primary\">{`${Math.round((numOfAssignedToOthersCompleted * 100) / numOfAssignedToOthers)}%`}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography>\r\n                      Completion Score for assigned to Self Tasks:\r\n                      <Typography component=\"span\" color=\"primary\">{`${Math.round((numOfAssignedToMyselfCompleted * 100) / numOfAssignedToMyself)}%`}</Typography>\r\n                    </Typography>\r\n                  </li>\r\n                </ul>\r\n              </Box> */}\r\n            </Paper>\r\n            <Paper elevation={2} className=\"flex flex-col items-start justify-start p-5 mx-5 space-y-3\">\r\n              <span className=\"text-lg font-medium\">MY WORKLOAD</span>\r\n              <span className=\"flex flex-wrap items-center justify-between\">\r\n                <StatDecorator color=\"blue\" title=\"TOTAL TASKS\" icon={<AppsIcon />} stat={numOfAssignee+numOfAssignedToOthers+numOfAssignedToMyself} />\r\n                <StatDecorator color=\"blue\" title=\"TASKS ASSIGNED TO ME\" icon={<AssigneeIcon />} stat={numOfAssignee} />\r\n                <StatDecorator color=\"blue\" title=\"ASSIGNED TO OTHERS\" icon={<AssignmentIcon />} stat={numOfAssignedToOthers} />\r\n                <StatDecorator color=\"blue\" title=\"ASSIGNED TO SELF\" icon={<AssignmentSelfIcon />} stat={numOfAssignedToMyself} />\r\n              </span>\r\n            </Paper>\r\n            <Paper elevation={2} className=\"flex flex-col items-start justify-start p-5 mx-5 space-y-3\">\r\n              <span className=\"text-lg font-medium\">MY WORKLOAD COMPLETED</span>\r\n              <span className=\"flex flex-wrap items-center justify-between \">\r\n                <StatDecorator color=\"green\" title=\"TOTAL COMPLETED\" icon={<TotalTasksCompletedIcon />} stat={assigneeCompletedTasks+numOfAssignedToOthersCompleted+numOfAssignedToMyselfCompleted} />\r\n                <StatDecorator color=\"green\" title=\"ASSIGNED TO ME COMPLETED\" icon={<AssignmentCompletedIcon />} stat={assigneeCompletedTasks} />\r\n                <StatDecorator color=\"green\" title=\"ASSIGNED TO OTHERS\" icon={<AssignedToOthersCompletedIcon />} stat={numOfAssignedToOthersCompleted} />\r\n                <StatDecorator color=\"green\" title=\"ASSIGNED TO SELF\" icon={<AssignmentSelfIcon />} stat={numOfAssignedToMyselfCompleted} />\r\n              </span>\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n      </span>\r\n    </div>\r\n  ) : (\r\n    <div id=\"loader\">\r\n      <CircularProgress style={{ color: \"#3dd19d\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StatDecorator = ({ title , stat, icon, color }) => {\r\n  return (\r\n    <>\r\n    <span className=\"flex items-center justify-start w-64 h-20 space-x-6\">\r\n      <span className={`\r\n        bounce-once\r\n        w-12 h-12 rounded-full \r\n        ${color==='green' && \"text-green bg-green-lightest\"}\r\n        ${color==='blue' && \"text-blue-500 bg-blue-100\"} \r\n        row-center`\r\n      }> {icon} </span>\r\n      <span className=\"h-20 col-center\">\r\n        <span className=\"text-xs font-medium text-gray-700\">{title}</span>\r\n        <span className=\"text-3xl font-semibold text-gray-700\">{stat}</span>\r\n      </span>\r\n    </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(5, 5, 5),\r\n    },\r\n  }));\r\n\r\nconst BoardDeleteConfirm = ({ openDeleteModal, setOpenDeleteModal, listToDelete, removeTodoList })=> {\r\n    const classes = useStyless();\r\n\r\n    const handleClose = () => {\r\n      setOpenDeleteModal(false);\r\n    };\r\n    \r\n    return (\r\n      <div>\r\n    \r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={openDeleteModal}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={openDeleteModal}>\r\n            <div className={classes.paper}>\r\n              <h4 id=\"transition-modal-title\">\r\n                This will delete the board permanently, are you sure?\r\n              </h4>\r\n              <Box mt={2}>\r\n                <Button\r\n                  onClick={(event) => {\r\n                        removeTodoList(event, listToDelete);\r\n                        handleClose();\r\n                      }}\r\n                  style={{color:'white', background:'grey'}}\r\n                  variant=\"contained\"\r\n                >\r\n                <DeleteIcon style={{marginRight:'10px'}} />\r\n                 Delete Board\r\n                </Button>\r\n              </Box>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default BoardDeleteConfirm;","export default __webpack_public_path__ + \"static/media/demo_board.6fb88658.png\";","import React from 'react';\r\nimport { Backdrop, Fade, makeStyles, Modal, Typography } from \"@material-ui/core\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      backgroundColor: 'rgb(33,33,33)',\r\n      // border: \"2px solid #000\",\r\n      border: 'none',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(4, 4, 4),\r\n    },\r\n  }));\r\n  \r\n  const SuccessModal = ({open, setOpen, title, subtitle}) => {\r\n    const classes = useStyles();\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Modal\r\n      style={{display:'flex',alignItems:'center',justifyContent:'center'}}\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 5000,\r\n          }}\r\n          closeAfterTransition\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n            <Typography><CheckCircleIcon fontSize=\"large\" style={{marginTop:'5px', color:'lightgreen'}} /></Typography> \r\n              <h3 id=\"transition-modal-title\" style={{color: 'white'}}>\r\n                  {title}\r\n              </h3>\r\n              <div id=\"transition-modal-description\" style={{color: 'white', paddingBottom:'10px'}}>\r\n                <h5>\r\n                  {subtitle}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default SuccessModal;","import { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 300,\r\n      '&:hover': {\r\n        backgroundColor: '#f7f5f5',\r\n        transition: 'all 0.2s linear',\r\n      }\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: green[500],\r\n    },\r\n  }));\r\n\r\n  export default useStyles;","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport BootstrapTooltip from './BootstrapTooltip';\r\nimport demo_board from '../assets/images/demo_board.png';\r\n\r\nimport SuccessModal from './SuccessModal';\r\nimport useStyles from './BoardCardStyles';\r\n\r\n\r\nconst BoardCard = ({ boardObj, handleConfirmationOpen, setListToDelete, boardOnClick, currentUserId, selectedList }) => {\r\n  const classes = useStyles();\r\n  const [completedPercent, setCompletedPercent] = useState(0);\r\n\r\n//   const handleExpandClick = () => {\r\n//     setExpanded(!expanded);\r\n//   };\r\n\r\n  // console.log(boardObj);\r\n\r\n  useEffect(() => {\r\n      let numOfTasksCompleted = 0;\r\n      let totalTasks = boardObj.todoList.length;\r\n      if(boardObj.todoList.length>0){\r\n        boardObj.todoList.map(taskObj=>{\r\n            if(taskObj.isComplete) numOfTasksCompleted= numOfTasksCompleted + 1;\r\n        })\r\n      }\r\n      setCompletedPercent(totalTasks && numOfTasksCompleted ? Math.round(( numOfTasksCompleted * 100 ) / totalTasks) : 0);\r\n      return () => {\r\n      }\r\n  }, [])\r\n\r\n  const createdBySelf = boardObj.createdBy===currentUserId;\r\n\r\n  const handleShareBtnClick = (boardId) => {\r\n    const loc = window.location;\r\n    navigator.clipboard.writeText(`${loc.origin}${loc.pathname}?id=${boardId}`);\r\n    \r\n    setSeverity('success');\r\n    setAlertMessage(\"Board's link has been copied to the clipboard.\");\r\n    setAlertOpen(true);\r\n  }\r\n\r\n  // SUCESS ALERT\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [severity, setSeverity] = useState('success');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  };\r\n  // \r\n\r\n  return (\r\n    <Card elevation={3} className={classes.root}>\r\n      <CardHeader\r\n        // avatar={\r\n        //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n        //     R\r\n        //   </Avatar>\r\n        // }\r\n        // action={\r\n        //   <IconButton aria-label=\"settings\">\r\n        //     <MoreVertIcon />\r\n        //   </IconButton>\r\n        // }\r\n        onClick={boardOnClick}\r\n        className=\"text-green pointer\"\r\n        title= {<Title boardObj={boardObj}/>} //{ boardObj.name }\r\n        // titleTypographyProps={{style: {fontSize:'20px'}}}\r\n        subheader={<Subheader boardObj={boardObj} />}\r\n        // subheader={ boardObj.createdByUsername ? boardObj.createdByUsername : boardObj.createdBy }\r\n      />\r\n      <CardMedia\r\n        onClick={boardOnClick}\r\n        style={{height:'180px', width:'100%'}}\r\n        className={`${classes.media} cursor-pointer`}\r\n        image= {demo_board} //\"/static/images/cards/paella.jpg\"\r\n        title=\"Featured Image\"\r\n      />\r\n      <CardContent className=\"h-14\"> \r\n        {/* <Typography variant=\"h5\" color=\"textSecondary\" component=\"h4\">\r\n            Board Name\r\n        </Typography> */}\r\n        <Typography className=\"h-10\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {\r\n            boardObj.description ? boardObj.description : 'This is a board description explaining everything this board will do.' \r\n          }\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <span className=\"flex w-6/12 px-2 space-x-2\">\r\n        <BootstrapTooltip placement=\"top\" title=\"Coming Soon\">\r\n          <span className=\"w-5 h-5 pointer\">\r\n            <IconButton disabled className=\"w-5 h-5\" aria-label=\"add to favorites\">\r\n              <FavoriteIcon className=\"text-red-700\" />\r\n            </IconButton>\r\n          </span>\r\n        </BootstrapTooltip>\r\n        <BootstrapTooltip placement=\"top\" title=\"Coming Soon\">\r\n          <span className=\"w-5 h-5 pointer\">\r\n            <IconButton disabled className=\"w-5 h-5\" aria-label=\"edit\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </span>\r\n        </BootstrapTooltip>\r\n        <BootstrapTooltip arrow placement=\"top\" title={boardObj.createdBy!==currentUserId ? \"Boards created by others can't be deleted by you\" : \"Delete Board\"}>\r\n          <span className=\"w-5 h-5 pointer\">\r\n            <IconButton \r\n                disabled={boardObj.createdBy!==currentUserId}\r\n                className=\"w-5 h-5 pointer\"\r\n                onClick={(e)=> {\r\n                        e.stopPropagation();\r\n                        setListToDelete(boardObj);\r\n                        handleConfirmationOpen(true);\r\n                      }} \r\n                aria-label=\"delete\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </span>\r\n        </BootstrapTooltip>\r\n        <BootstrapTooltip placement=\"top\" title={!boardObj.isPublic ? \"Board is not public\" : \"Share Board\"}>\r\n          <span className=\"w-5 h-5 pointer\">\r\n            <IconButton \r\n              onClick={()=>handleShareBtnClick(boardObj.id)} \r\n              disabled={boardObj.id===selectedList.id ? !selectedList.isPublic : !boardObj.isPublic} \r\n              className=\"w-5 h-5\" aria-label=\"share\"\r\n              >\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </span>\r\n        </BootstrapTooltip>\r\n        </span>\r\n        <span className=\"flex items-center self-end justify-end w-6/12 pr-2 text-green-dark\">\r\n            <span className=\"mr-1 text-lg font-bold\">{ completedPercent }%</span> Complete\r\n        </span>\r\n      </CardActions>\r\n\r\n      <SuccessModal title={'Success'} subtitle={alertMessage} open={alertOpen} setOpen={setAlertOpen} />\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\n      {/* <Snackbar\r\n        open={alertOpen}\r\n        autoHideDuration={4000}\r\n        onClose={handleCloseAlert}\r\n        // anchorOrigin={{vertical: 'top', horizontal:'center'}}\r\n      >\r\n        <Alert variant=\"filled\" onClose={handleCloseAlert} severity={severity}>\r\n          {alertMessage}\r\n        </Alert>\r\n      </Snackbar> */}\r\n\r\nconst Subheader = ({boardObj}) => (\r\n  <span style={{fontSize:'14px'}} className=\"flex flex-col items-start justify-center \">\r\n    <span className=\"w-full\">\r\n      <span className=\"\">{boardObj.createdByUsername ? boardObj.createdByUsername : boardObj.createdBy}</span>\r\n      {/* <hr className=\"w-full my-2\" /> */}\r\n    </span>\r\n    {/* <span className=\"w-20 text-white rounded-xl row-center h-7 bg-green\">{boardObj?.todoList?.length} steps</span> */}\r\n  </span>\r\n)\r\n\r\nconst Title = ({boardObj}) => (\r\n  <span className=\"flex flex-wrap items-start justify-between\">\r\n    <span style={{fontSize:'20px'}} className=\"w-3/4\">{boardObj.name}</span>\r\n    <span style={{fontSize:'12px'}} className=\"h-5 text-white w-14 rounded-xl row-center bg-green\">{boardObj?.todoList?.length} steps</span>\r\n  </span>\r\n)\r\n\r\nexport default BoardCard;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\n// import OkayIcon from \"@material-ui/icons/\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n    modal: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(4, 2, 2),\r\n    },\r\n  }));\r\n\r\nconst MobilePopup = ()=> {\r\n    const classes = useStyless();\r\n\r\n    const [ openMobilePopup, setOpenMobilePopup] = useState(true);\r\n  \r\n    const handleClose = () => {\r\n      setOpenMobilePopup(false);\r\n    };  \r\n    \r\n    return (\r\n    <>\r\n    {\r\n      openMobilePopup ?\r\n      <div>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={openMobilePopup}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 5000,\r\n          }}\r\n        >\r\n          <Fade in={openMobilePopup}>\r\n            <div className={classes.paper}>\r\n              <h4 id=\"transition-modal-title\">\r\n                Please use desktop/laptop. Mobile friendly Todue is still in development.\r\n              </h4>\r\n              <Box mt={2}>\r\n                <Button\r\n                  onClick={(event) => {\r\n                        handleClose();\r\n                      }}\r\n                  style={{color:'white', background:'#3dd19d'}}\r\n                  variant=\"contained\"\r\n                >\r\n                {/* <OkayIcon style={{marginRight:'10px'}} /> */}\r\n                    Okay\r\n                </Button>\r\n              </Box>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n      :\r\n      <></>\r\n      }\r\n    </>\r\n    );\r\n  }\r\n\r\n  export default MobilePopup;","import { InputBase } from '@material-ui/core';\r\nimport {Search as SearchIcon} from '@material-ui/icons';\r\nimport React, { useState, useEffect } from 'react'\r\nimport BootstrapTooltip from './BootstrapTooltip';\r\n\r\nconst BoardsSortControls = ({ todoLists, setTodoLists, initialTodoLists, setInitialTodoLists }) => {\r\n\r\n    const [ascendingCompleted, setAscendingCompleted] = useState(false);\r\n    const [ascendingCreated, setAscendingCreated] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const sortCreatedAscending = (a,b) => {\r\n        let created1 = a.createdAt ? a.createdAt : new Date(1619421204*1000).getTime(); // April 26, 2021\r\n        let created2 = b.createdAt ? b.createdAt : new Date(1619421204*1000).getTime();\r\n\r\n        return (created2-created1);\r\n    }\r\n    const sortCreatedDescending = (a,b) => {\r\n        let created1 = a.createdAt ? a.createdAt : new Date(1619421204*1000).getTime(); // April 26, 2021\r\n        let created2 = b.createdAt ? b.createdAt : new Date(1619421204*1000).getTime();\r\n\r\n        return (created1-created2);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let tempArr = [...todoLists];\r\n        if(ascendingCreated){\r\n            const sortedTodoLists = tempArr.sort((a,b)=>sortCreatedAscending(a,b));\r\n            setTodoLists((prev)=>sortedTodoLists);\r\n        }\r\n        if(!ascendingCreated){\r\n            const sortedTodoLists = tempArr.sort((a,b)=>sortCreatedDescending(a,b));\r\n            setTodoLists((prev)=>sortedTodoLists);\r\n        }\r\n    }, [ascendingCreated])\r\n\r\n    useEffect(() => {\r\n        if(todoLists.length<1) return;\r\n        const tempArr = [...todoLists];\r\n        tempArr.sort((board1,board2)=>{\r\n            let numOfTasksCompletedB1 = 0;\r\n            let totalTasksB1 = board1.todoList.length;\r\n            let numOfTasksCompletedB2 = 0;\r\n            let totalTasksB2 = board2.todoList.length;\r\n            if(totalTasksB1>0){\r\n                board1.todoList.map(taskObj=>{\r\n                    if(taskObj.isComplete) numOfTasksCompletedB1= numOfTasksCompletedB1 + 1;\r\n                })\r\n            }\r\n            if(totalTasksB2>0){\r\n                board2.todoList.map(taskObj=>{\r\n                    if(taskObj.isComplete) numOfTasksCompletedB2= numOfTasksCompletedB2 + 1;\r\n                })\r\n            }\r\n            const completedPercentB1 = totalTasksB1 && numOfTasksCompletedB1 ? Math.round(( numOfTasksCompletedB1 * 100 ) / totalTasksB1) : 0;\r\n            const completedPercentB2 = totalTasksB2 && numOfTasksCompletedB2 ? Math.round(( numOfTasksCompletedB2 * 100 ) / totalTasksB2) : 0;\r\n            if(ascendingCompleted){\r\n                return completedPercentB1-completedPercentB2;\r\n            } else {\r\n                return completedPercentB2-completedPercentB1;\r\n            }\r\n        })\r\n        setTodoLists(tempArr);\r\n    }, [ascendingCompleted])\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchText(e.target.value);\r\n        const value = e.target.value.toLowerCase();\r\n        const tempArr = [...initialTodoLists];\r\n        const tempFilteredArr = tempArr.filter(boardObj=>\r\n            boardObj?.name?.toLowerCase().includes(value) \r\n            || boardObj?.description?.toLowerCase().includes(value) \r\n            || boardObj?.createdBy?.toLowerCase().includes(value)\r\n            || boardObj?.createdByUsername?.toLowerCase().includes(value)\r\n        );\r\n        // console.log('tempFilteredArr',tempFilteredArr);\r\n        setTodoLists(tempFilteredArr);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTodoLists(initialTodoLists);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex flex-wrap items-center justify-start w-full px-3 space-x-3 space-y-2 md:px-0\">\r\n            <span className=\"w-40 ml-4 mr-2 space-x-3 row-center\">\r\n                <span className=\"space-x-2 row-center\">\r\n                    <SearchIcon style={{color:\"#3dd19d\"}}/>\r\n                    <InputBase\r\n                        placeholder=\"Search boards…\"\r\n                        onChange={(e) => handleSearchChange(e)}\r\n                        value={searchText}\r\n                        inputProps={{'aria-label': 'search'}}\r\n                    />\r\n                </span>\r\n            </span>\r\n            <span className=\"space-x-1 md:space-x-3 row-center\">\r\n                {/* <span className=\"text-lg font-medium text-gray-700\">Sort by Completion Percentage:</span> */}\r\n                <BootstrapTooltip placement=\"top\" title=\"Sort by completion percentage\">\r\n                    <span className=\"flex-wrap space-x-2 row-center\">\r\n                        <button onClick={()=>setAscendingCompleted(false)} \r\n                            // className={`px-3 py-1 my-1 font-medium text-white transition-all ${!ascendingCompleted ? \"bg-green\" : \"bg-gray-400\"} rounded-lg shadow-md hover:shadow-lg pointer`}\r\n                            className={`px-3 py-1 my-1 font-medium text-white transition-all ${!ascendingCompleted ? \"bg-green\" : \"bg-gray-400\"} rounded-lg shadow-md hover:shadow-lg pointer`}\r\n                        >\r\n                            Most Progress\r\n                        </button>\r\n                        <button onClick={()=>setAscendingCompleted(true)} className={`px-3 py-1 font-medium text-white transition-all rounded-lg shadow-md ${ascendingCompleted ? \"bg-green\" : \"bg-gray-400\"} hover:shadow-lg pointer`}>\r\n                            Least Progress\r\n                        </button>\r\n                    </span>\r\n                </BootstrapTooltip>\r\n            </span>\r\n            <span className=\"space-x-1 md:space-x-3 row-center\">\r\n                {/* <span className=\"text-lg font-medium text-gray-700\">Sort by Create Date:</span> */}\r\n                <BootstrapTooltip placement=\"top\" title=\"Sort by Create Date\">\r\n                    <span className=\"flex-wrap space-x-2 row-center\">\r\n                        <button onClick={()=>setAscendingCreated(true)} className={`px-3 py-1 font-medium text-white transition-all rounded-lg shadow-md ${ascendingCreated ? \"bg-green\" : \"bg-gray-400\"} hover:shadow-lg pointer`}>\r\n                            Most recent                            \r\n                        </button>\r\n                        <button onClick={()=>setAscendingCreated(false)} className={`px-3 py-1 my-1 font-medium text-white transition-all ${!ascendingCreated ? \"bg-green\" : \"bg-gray-400\"} rounded-lg shadow-md hover:shadow-lg pointer`}>\r\n                            Oldest\r\n                        </button>\r\n                    </span>\r\n                </BootstrapTooltip>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardsSortControls\r\n","import React from \"react\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nconst MainFooter = () => {\r\n  return (\r\n    <>\r\n      <span className=\"p-4 mt-20 mb-10 row-center\">\r\n        <Card elevation={2} className=\"px-3 py-2\">\r\n          <span className=\"text-base text-gray-600\">\r\n            Get started on your next task, idea, or project with todue boards.\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ textDecoration: \"none\" }}\r\n              href=\"https://forms.gle/CVBbiajoySqQtTgo8\"\r\n            >\r\n              <span className=\"inline font-medium text-green\">\r\n                {\" \"}\r\n                Join Email List\r\n              </span>\r\n            </a>\r\n          </span>\r\n        </Card>\r\n      </span>\r\n      <span className=\"flex justify-center mt-10 mb-5\">\r\n        <span className=\"text-gray-700\">\r\n          Copyright 2021. Follow us on twitter\r\n          <a\r\n            style={{ textDecoration: \"none\" }}\r\n            className=\"ml-1 text-green\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://twitter.com/@todue1\"\r\n          >\r\n            <span> @todue1</span>\r\n            {/* @DannyMullan6  */}\r\n          </a>\r\n        </span>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainFooter;\r\n","import makeStyles from '@material-ui/core/styles/makeStyles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      outline:'none'\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      background: \"#fff\"\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    drawerPaper: {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      background: 'white',\r\n      flexGrow: 1,\r\n      height: 'auto',\r\n      overflow: 'auto',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n    button: {\r\n      position: 'fixed',\r\n      right: 15,\r\n      top: 15,\r\n      height: 'auto',\r\n      color: \"white\",\r\n      background: \"#3dd19d\",\r\n    },\r\n  \r\n    logoutButton: {\r\n      position: 'fixed',\r\n      right: 40,\r\n      top: 25,\r\n      height: '30px',\r\n      color: \"black\",\r\n      background: \"white\",\r\n      fontSize: '18px'\r\n  \r\n    },\r\n    allMyTasksButton: {\r\n      height: '30px',\r\n      color: \"black\",\r\n      background: \"white\",\r\n      fontSize: '14px'\r\n    },\r\n  \r\n    todoListRoot: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      \r\n    },\r\n    emptyListText: {\r\n      display: 'block',\r\n      whiteSpace: 'initial',\r\n      padding: 20,\r\n      textAlign: 'center',\r\n      fontSize: 14,\r\n      color: '#777777'\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(5),\r\n    },\r\n    addTodoListButton: {\r\n      outline: '0 !important',\r\n      width: '100%'\r\n    },\r\n    listRemoveButton: {\r\n      outline: '0 !important',\r\n    },\r\n  }));\r\n\r\n  export default styles;","import React from 'react';\r\nimport {\r\n    Zoom,\r\n    Button,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nconst FilterButton = ({ name, state, stat, onClick }) => {\r\n    return (\r\n        <>\r\n            <Zoom timeout={500} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                outline=\"none\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  state\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={onClick}\r\n              >\r\n                <Typography\r\n                  style={state ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  {name}\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"5px\" }}\r\n                    display=\"inline\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {stat}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterButton\r\n","import dayjs from \"dayjs\";\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\ndayjs.extend(isBetween);\r\n\r\nconst checkBwDaysFuture = (tsToCheck, daysInFuture) => {\r\n\r\n    let futureTimeStamp = new Date();\r\n    futureTimeStamp.setTime(futureTimeStamp.getTime() + (daysInFuture * 24 * 60 * 60 * 1000));\r\n  \r\n    const startDate = dateMaker(new Date().getTime());\r\n    const endDate = dateMaker(futureTimeStamp);\r\n    const dateToCheck = dateMaker(tsToCheck);\r\n  \r\n    return dayjs(dateToCheck).isBetween(startDate, dayjs(endDate));\r\n};\r\n\r\nconst dateMaker = (timestamp) => {\r\n    // '2020-10-19'\r\n    const date = new Date(timestamp);\r\n    const fullYear = date.getFullYear();\r\n    const month = date.getMonth()+1;\r\n    const day = date.getDate();\r\n  \r\n    return `${fullYear}-${month}-${day}`;\r\n}\r\n\r\nconst TODAY_TS = 1624213693481;\r\n\r\nconst isDueToday = (timestamp) => dayjs().isSame(dateMaker(timestamp), 'day');\r\n\r\nexport const dueDateFilter = (tasks) => {\r\n    const today = [];\r\n    const tomorrow = [];\r\n    const sevendays = [];\r\n    const thirtydays = [];\r\n    \r\n    const incompleteTasks = tasks.filter(task=>!task.isComplete);\r\n    incompleteTasks.map(task=>{\r\n        if(isDueToday(task.date)) today.push(task);\r\n        if(checkBwDaysFuture(task.date, 2)) tomorrow.push(task);\r\n        if(checkBwDaysFuture(task.date, 7)) sevendays.push(task);\r\n        if(checkBwDaysFuture(task.date, 30)) thirtydays.push(task);\r\n    })\r\n\r\n    return [today, tomorrow, sevendays, thirtydays];\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport {\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n  // AutorenewTwoTone,\r\n  // ContactsOutlined,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n  Search as SearchIcon,\r\n  FileCopy as CopyIcon,\r\n  Share,\r\n} from \"@material-ui/icons\";\r\n\r\nimport TimeAgo from \"react-timeago\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nimport BootstrapTooltip from \"../../components/BootstrapTooltip\";\r\nimport SuccessAnimation from \"../../components/SuccessAnimation\";\r\nimport useStyles from \"../../components/todoItemListStyles\";\r\n\r\nimport \"../../components/style.css\";\r\n\r\nimport calculateFullDate from \"../../components/utils/twoDigitDateTextMaker\";\r\nimport { Fade, Switch, TextField, Zoom } from \"@material-ui/core\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport { dueDateFilter } from \"./utils\";\r\n\r\nconst AllTasks = (props) => {\r\n  let lists = props?.list\r\n    ?.map((boardObj, index) =>\r\n      boardObj.todoList\r\n        .filter((task) =>\r\n          [task.assignedTo, task.assignedBy].includes(props.currentUserEmail)\r\n        )\r\n        .flat()\r\n        .map((task) => {\r\n          return {\r\n            ...task,\r\n            boardName: boardObj.name,\r\n            boardId: boardObj.id,\r\n            boardIndex: index,\r\n            boardObj: JSON.parse(JSON.stringify(boardObj))\r\n          };\r\n        })\r\n    )\r\n    .flat();\r\n\r\n  // useEffect(() => {\r\n  //   lists = props?.list\r\n  //   ?.map((boardObj, index) =>\r\n  //     boardObj.todoList\r\n  //       .filter((task) =>\r\n  //         [task.assignedTo, task.assignedBy].includes(props.currentUserEmail)\r\n  //       )\r\n  //       .flat()\r\n  //       .map((task) => {\r\n  //         return {\r\n  //           ...task,\r\n  //           boardName: boardObj.name,\r\n  //           boardId: boardObj.id,\r\n  //           boardIndex: index,\r\n  //           boardObj: JSON.parse(JSON.stringify(boardObj))\r\n  //         };\r\n  //       })\r\n  //   )\r\n  //   .flat();\r\n  // }, [props.todoLists])\r\n    \r\n  // let filteredLists = [...lists];\r\n  const [filteredTasks, setFilteredTasks] = useState([...lists]);\r\n\r\n  // useEffect(() => {\r\n  //   setFilteredTasks(prev=>[...lists]);\r\n  // }, [lists.length])\r\n\r\n  console.log(\"listsssssss\", lists);\r\n\r\n  // Snackbar ALERT\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [severity, setSeverity] = useState(\"success\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  };\r\n\r\n  const handleSnackbarOpen = (severity, message) => {\r\n    setSeverity(severity);\r\n    setAlertMessage(message);\r\n    setAlertOpen(true);\r\n  };\r\n  //\r\n\r\n  const mobileWidth = window.screen.availWidth < 700;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [mainKey, setMainKey] = useState(123);\r\n\r\n  const [openCompletedAlert, setOpenCompletedAlert] = useState(false);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortCompleted, setSortCompleted] = useState(false);\r\n  const [sortIncomplete, setSortIncomplete] = useState(false);\r\n  const [sortAll, setSortAll] = useState(false);\r\n\r\n  const [filterDue, setFilterDue] = useState(false);\r\n  const [filterOverdue, setFilterOverdue] = useState(false);\r\n\r\n  // TIME FILTERS\r\n  const [filterToday, setFilterToday] = useState(true);\r\n  const [filterTomorrow, setFilterTomorrow] = useState(false);\r\n  const [filter7days, setFilter7days] = useState(false);\r\n  const [filter30days, setFilter30days] = useState(false);\r\n\r\n  const [tasksToday, tasksTomorrow, tasks7days, tasks30days] = dueDateFilter(lists);\r\n\r\n  // console.log('tasksToday', tasksToday, 'tasksTomorrow', tasksTomorrow, 'tasks7days', tasks7days, 'tasks30days', tasks30days);\r\n  \r\n  //\r\n\r\n  const [sortValue, setSortValue] = useState(\"due\");\r\n  // const [sortCreated, setSortCreated] = useState(false);\r\n  // const [sortDue, setSortDue] = useState(true);\r\n\r\n  const [filterAssigned, setFilterAssigned] = useState(false);\r\n  const [filterAssignee, setFilterAssignee] = useState(false);\r\n\r\n  let remaining = [];\r\n  if (lists?.length) {\r\n    remaining = lists.filter((list) => !list.isComplete);\r\n  } else {\r\n    remaining = [];\r\n  }\r\n\r\n  let notRemaining = [];\r\n  if (lists?.length) {\r\n    notRemaining = lists.filter((list) => list.isComplete);\r\n  } else {\r\n    notRemaining = [];\r\n  }\r\n\r\n  let allTasks = [];\r\n  if (lists?.length) {\r\n    // allTasks = props.list.map(item=>item.todoList).flat().filter((list) => list);\r\n    allTasks = [...lists];\r\n  } else {\r\n    allTasks = [];\r\n  }\r\n\r\n  // this will randomly choose words from an array and return it to the SuccessAnimation component as text prop\r\n  const chooseAlertText = () => {\r\n    const sentences = [\r\n      \"You Rock!!\",\r\n      \"Let's gooo!!\",\r\n      \"Great Work!\",\r\n      \"Done with that!\",\r\n      \"Nice Work!\",\r\n      \"Woohooo\",\r\n      \"Well done!\",\r\n      \"Great Job\",\r\n    ]; // add as many affirmations as you want\r\n    const selectedText = sentences[Math.round(Math.random() * 3)]; // replace 3 with 1 less than the number of messages in the array above\r\n\r\n    return selectedText;\r\n  };\r\n\r\n  const todayDate = new Date().getTime();\r\n\r\n  // FILTER BY: DUE / OVERDUE & FILTER BY: COMPLETE / INCOMPLETE\r\n  let dueRemaining = [];\r\n  let overdueRemaining = [];\r\n  let assigned = [];\r\n  let assignee = [];\r\n\r\n  if (lists?.length) {\r\n    dueRemaining = remaining.filter((list) => new Date(list.date) > new Date());\r\n    overdueRemaining = remaining.filter((list) => list.date < todayDate);\r\n\r\n    assigned = lists.filter(\r\n      (list) =>\r\n        list.assignedTo !== props.currentUserEmail &&\r\n        list.assignedTo !== \"\" &&\r\n        list.assignedBy === props.currentUserEmail\r\n    );\r\n    assignee = lists.filter(\r\n      (list) =>\r\n        list.assignedBy !== props.currentUserEmail &&\r\n        list.assignedTo === props.currentUserEmail\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lists?.length) {\r\n      \r\n      if(filterToday) setFilteredTasks(tasksToday);\r\n      else if(filterTomorrow) setFilteredTasks(tasksTomorrow);\r\n      else if(filter7days) setFilteredTasks(tasks7days);\r\n      else if(filter30days) setFilteredTasks(tasks30days);\r\n      else if (filterDue) {\r\n        setFilteredTasks(dueRemaining);\r\n      } else if (filterOverdue) {\r\n        setFilteredTasks(overdueRemaining);\r\n      } else if (sortCompleted) {\r\n        setFilteredTasks(lists.filter((list) => list.isComplete));\r\n      } else if (sortIncomplete) {\r\n        setFilteredTasks(lists.filter((list) => !list.isComplete));\r\n      } else if (filterAssigned) {\r\n        setFilteredTasks(assigned);\r\n      } else if (filterAssignee) {\r\n        setFilteredTasks(assignee);\r\n      } else\r\n        setFilteredTasks(\r\n          lists.filter(\r\n            (list) =>\r\n              list.name\r\n                .toLowerCase()\r\n                .includes(searchText.toLocaleLowerCase()) ||\r\n              list.detail.toLowerCase().includes(searchText.toLocaleLowerCase())\r\n          )\r\n        );\r\n    }\r\n  }, [\r\n    filterDue,\r\n    filterOverdue,\r\n    sortCompleted,\r\n    sortIncomplete,\r\n    filterAssigned,\r\n    filterAssignee,\r\n    searchText,\r\n    filterToday,\r\n    filterTomorrow,\r\n    filter7days,\r\n    filter30days,\r\n  ]);\r\n\r\n  // SORT BY:   CREATE DATE / DUE DATE\r\n  const handleChange = (event) => {\r\n    setSortValue(event.target.value);\r\n\r\n    if (event.target.value === \"created\") {\r\n      setFilteredTasks((prev) =>\r\n        prev.sort((a, b) => a.createDate - b.createDate)\r\n      );\r\n    } else if (event.target.value === \"due\") {\r\n      setFilteredTasks((prev) => prev.sort((a, b) => a.date - b.date));\r\n    }\r\n  };\r\n\r\n  const sortByAll = async () => {\r\n\r\n    await setSortAll(true);\r\n\r\n    await setFilterAssigned(false);\r\n    await setFilterAssignee(false);\r\n    await setSortIncomplete(false);\r\n    await setSortCompleted(false);\r\n    await setFilterDue(false);\r\n    await setFilterOverdue(false);\r\n\r\n    await setFilterToday(false);\r\n    await setFilterTomorrow(false);\r\n    await setFilter7days(false);\r\n    await setFilter30days(false);\r\n  };\r\n\r\n  const editTodo = (event, list, index) => {\r\n    event.stopPropagation();\r\n    props.openEditDialog(list, index);\r\n  };\r\n\r\n  const removeTodo = (event, list, index) => {\r\n    event.stopPropagation();\r\n    const deletedTask = lists.splice(index, 1);\r\n    const assignedToo = deletedTask[0].assignedTo;\r\n    const assignedByy = deletedTask[0].assignedBy;\r\n    // console.log('DELTED TASK:', deletedTask);\r\n    // console.log('assigned by:', assignedByy, 'assigned To:', assignedToo);\r\n    if (\r\n      assignedToo !== props.currentUserEmail &&\r\n      assignedToo !== \"\" &&\r\n      assignedByy === props.currentUserEmail\r\n    ) {\r\n      props.removeNewAssignment(\r\n        props.selectedList.id,\r\n        props.selectedList.name,\r\n        deletedTask[0]\r\n      );\r\n    }\r\n    props.updateTodoList({ ...props.list, todoList: lists });\r\n    setMainKey((mainKey) => mainKey + 1);\r\n  };\r\n\r\n  const checkboxToggle = async (event, task) => {\r\n    if (event.target.tagName !== \"INPUT\") return;\r\n\r\n    event.stopPropagation();\r\n\r\n    const updatedTodoList = task.boardObj.todoList.map(item=>\r\n      {\r\n        if(item.taskId===task.taskId) {\r\n          return { ...item, isComplete: !task.isComplete, completedAt: new Date().getTime() }\r\n        }\r\n        return item;\r\n      });\r\n\r\n    const updatedBoardObj = {...task.boardObj, todoList: updatedTodoList};\r\n    const updatedTask = { ...task, boardObj: updatedBoardObj, isComplete: !task.isComplete };\r\n\r\n    // lists = [...lists, updatedTask];\r\n    // sortByAll();\r\n    // setFilteredTasks(prev=> [...prev, updatedTask])\r\n\r\n    // open success message\r\n    if (updatedTask.isComplete) {\r\n      await setOpenCompletedAlert(true);\r\n      setTimeout(async () => await setOpenCompletedAlert(false), 4000);\r\n      // the function inside setTimeout will run after 4000 millisecond (written as second argument)\r\n      // which means that animation message will be open for 4000ms (or 4 seconds)\r\n\r\n      handleSnackbarOpen('success', 'Great, the task has been moved to the Todone section');\r\n    }\r\n\r\n    if (task.assignedBy !== props.currentUserEmail && task.isComplete) {\r\n      console.log(\"RAN CHECKKKK\");\r\n      const data = {\r\n        ...task.boardObj,\r\n        todoList: [...updatedTodoList]\r\n      };\r\n      console.log('data', data);\r\n      props.updateTodoList(data, true, task.assignedTo, task.assignedBy);\r\n    } else {\r\n      props.updateTodoList({\r\n        ...task.boardObj,\r\n        todoList: [...updatedTodoList]\r\n      });\r\n      // console.log('data', {\r\n        // ...task.boardObj,\r\n        // todoList: [...updatedTodoList]\r\n      // });\r\n    }\r\n\r\n    const filteredTodoLists = props.list.filter(item=>item.id!==updatedBoardObj.id);\r\n    props.setTodoLists(prev=>[...filteredTodoLists, updatedBoardObj]);\r\n\r\n    const filteredLists = lists.filter(item=>item.taskId!==task.taskId);\r\n    lists = [...filteredLists, updatedTask].sort((a,b)=>a.date-b.date);\r\n    // console.log('lists', lists);\r\n    // setFilteredTasks(prev=> lists);\r\n    setFilteredTasks(prev=>prev.map(item=>item.taskId===updatedTask.taskId ? updatedTask : item));\r\n    // sortByAll();\r\n\r\n    setMainKey((mainKey) => mainKey + 1) // for remounting the component (https://www.nikgraf.com/blog/using-reacts-key-attribute-to-remount-a-component)\r\n  };\r\n\r\n  const componentDecorator = (href, text, key) => (\r\n    <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n  );\r\n\r\n  const loc = window.location;\r\n\r\n  const animationTimeout = 500;\r\n\r\n  if (props?.list?.length) {\r\n    return (\r\n      <Container key={mainKey} maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={1}>\r\n          <span className=\"w-auto mt-1 row-center\">\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Typography aphy variant=\"h6\" className={classes.listTitle}>\r\n                All My Tasks\r\n              </Typography>\r\n            </Zoom>\r\n          </span>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item height={50} xs={12} sm={12} lg={12}>\r\n            <FilterButton\r\n              name=\"Today\"\r\n              state={filterToday}\r\n              stat={tasksToday.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortIncomplete(false);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n                \r\n                await setFilterToday(true);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Tomorrow\"\r\n              state={filterTomorrow}\r\n              stat={tasksTomorrow.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortIncomplete(false);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(true);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Next Seven Days\"\r\n              state={filter7days}\r\n              stat={tasks7days.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortIncomplete(false);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(true);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Next 30 Days\"\r\n              state={filter30days}\r\n              stat={tasks30days.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortIncomplete(false);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(true);\r\n              }}\r\n            />\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                onClick={sortByAll}\r\n                className=\"no-outline\"\r\n                style={\r\n                  sortAll\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n              >\r\n                <Typography\r\n                  style={\r\n                    sortAll\r\n                      ? { fontWeight: \"bold\" }\r\n                      : null\r\n                  }\r\n                >\r\n                  All Time\r\n                </Typography>\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={{ paddingLeft: \"15px\" }}\r\n                    display=\"inline\"\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                  >\r\n                    {\" \"}\r\n                    {allTasks.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <FilterButton\r\n              name=\"Todue\"\r\n              state={sortIncomplete}\r\n              stat={remaining.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortIncomplete(true);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Todone\"\r\n              state={sortCompleted}\r\n              stat={notRemaining.length}\r\n              onClick={async () => {\r\n                // compensate\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(false);\r\n\r\n                await setSortCompleted(true);\r\n                await setSortIncomplete(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Assigned to others\"\r\n              state={filterAssigned}\r\n              stat={assigned.length}\r\n              onClick={async () => {\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(true);\r\n                await setFilterAssignee(false);\r\n                await setSortIncomplete(false);\r\n                await setSortCompleted(false);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <FilterButton\r\n              name=\"Assigned to me\"\r\n              state={filterAssignee}\r\n              stat={assignee.length}\r\n              onClick={async () => {\r\n                await setSortAll(false);\r\n                \r\n                await setFilterAssigned(false);\r\n                await setFilterAssignee(true);\r\n                await setFilterDue(false);\r\n                await setFilterOverdue(false);\r\n                await setSortCompleted(false);\r\n                await setSortIncomplete(false);\r\n\r\n                await setFilterToday(false);\r\n                await setFilterTomorrow(false);\r\n                await setFilter7days(false);\r\n                await setFilter30days(false);\r\n              }}\r\n            />\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <Button\r\n                color=\"black\"\r\n                className=\"no-outline\"\r\n                style={\r\n                  filterOverdue\r\n                    ? {\r\n                        borderBottom: \"3px solid #3dd19d\",\r\n                        textTransform: \"none\",\r\n                      }\r\n                    : {\r\n                        textTransform: \"none\",\r\n                        borderBottom: \"3px solid transparent\",\r\n                      }\r\n                }\r\n                onClick={async () => {\r\n                  // compensation\r\n                  await setSortAll(false);\r\n                  \r\n                  await setFilterAssigned(false);\r\n                  await setFilterAssignee(false);\r\n\r\n                  await setFilterDue(false);\r\n                  await setFilterOverdue(true);\r\n                  await setSortIncomplete(false);\r\n                  await setSortCompleted(false);\r\n\r\n                  await setFilterToday(false);\r\n                  await setFilterTomorrow(false);\r\n                  await setFilter7days(false);\r\n                  await setFilter30days(false);\r\n                }}\r\n              >\r\n                <Typography\r\n                  style={filterOverdue ? { fontWeight: \"bold\" } : null}\r\n                >\r\n                  Overdue\r\n                </Typography>{\" \"}\r\n                <Typography variant=\"h6\">\r\n                  <Typography\r\n                    style={\r\n                      overdueRemaining.length > 0\r\n                        ? { paddingLeft: \"5px\", color: \"red\" }\r\n                        : { paddingLeft: \"5px\", color: \"#3dd19d\" }\r\n                    }\r\n                    display=\"\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    {\" \"}\r\n                    {overdueRemaining.length}\r\n                  </Typography>\r\n                </Typography>\r\n              </Button>\r\n            </Zoom>\r\n            <Zoom timeout={animationTimeout} in={true}>\r\n              <FormControl\r\n                style={{ marginTop: \"3px\", marginLeft: \"10px\" }}\r\n                component=\"fieldset\"\r\n              >\r\n                {/* <FormLabel component=\"legend\">Sort By:</FormLabel> */}\r\n                <RadioGroup\r\n                  style={{ display: \"flex\", flexDirection: \"row\" }}\r\n                  aria-label=\"sort by\"\r\n                  name=\"sortCreateDue\"\r\n                  value={sortValue}\r\n                  onChange={handleChange}\r\n                >\r\n                  <FormControlLabel\r\n                    style={{ fontSize: \"0.9rem\" }}\r\n                    value=\"created\"\r\n                    control={<Radio />}\r\n                    label=\"Date Created\"\r\n                  />\r\n                  <FormControlLabel\r\n                    style={{ fontSize: \"0.9rem\" }}\r\n                    value=\"due\"\r\n                    control={<Radio />}\r\n                    label=\"Due Date\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Zoom>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon style={{ color: \"#3dd19d\" }} />\r\n              </div>\r\n              <InputBase\r\n                style={{ marginTop: \"10px\" }}\r\n                placeholder=\"Search your tasks…\"\r\n                onChange={(text) => {\r\n                  setSearchText(text.target.value);\r\n                }}\r\n                value={searchText}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ \"aria-label\": \"search\" }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        {filteredTasks?.length ? (\r\n          <div className={classes.root}>\r\n            {filteredTasks.map((list, index) => {\r\n              const fullDate = calculateFullDate(list.date);\r\n              return (\r\n                // <Fade in={true}>\r\n                <ExpansionPanel\r\n                  // expanded={}\r\n                  key={list.taskId}\r\n                >\r\n                  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />} // !mobileWidth &&\r\n                    aria-label=\"Expand\"\r\n                    aria-controls=\"additional-actions1-content\"\r\n                    id=\"additional-actions1-header\"\r\n                    classes={{\r\n                      content: classes.expansionPanelSummaryContent,\r\n                    }}\r\n                  >\r\n                    {mobileWidth ? (\r\n                      <span className=\"flex flex-col justify-center w-full\">\r\n                        <FormControlLabel\r\n                          style={{ pointerEvents: \"none\" }}\r\n                          className={`${classes.todoItemFormControl} py-3 px-1`}\r\n                          aria-label=\"Acknowledge\"\r\n                          onFocus={(event) => event.stopPropagation()}\r\n                          control={\r\n                            <Checkbox\r\n                              style={{ pointerEvents: \"auto\" }}\r\n                              onClick={(event) => {\r\n                                checkboxToggle(event, list);\r\n                              }}\r\n                              checked={list.isComplete}\r\n                              disabled={\r\n                                list.assignedBy === props.currentUserEmail ||\r\n                                list.assignedTo === props.currentUserEmail\r\n                                  ? false\r\n                                  : true\r\n                              }\r\n                            />\r\n                          }\r\n                          label={list.name}\r\n                          style={{ width: \"100%\", color: \"black\" }}\r\n                        />\r\n\r\n                        <span className=\"space-x-1 row-center\">\r\n                          {props.isLogged &&\r\n                          list.assignedTo === props.currentUserEmail &&\r\n                          list.assignedBy !== props.currentUserEmail ? (\r\n                            <Typography\r\n                              className=\"pb-1 pl-1 col-center\"\r\n                              variant=\"subtitle2\"\r\n                            >\r\n                              <span>Assigned By:</span>\r\n                              <span>{list.assignedBy}</span>\r\n                            </Typography>\r\n                          ) : props.isLogged &&\r\n                            list.assignedTo &&\r\n                            list.assignedBy === props.currentUserEmail ? (\r\n                            <Typography\r\n                              className=\"pb-1 pl-1 col-center\"\r\n                              variant=\"subtitle2\"\r\n                            >\r\n                              <span>Assigned To:</span>\r\n                              <span>{list.assignedTo}</span>\r\n                            </Typography>\r\n                          ) : null}\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title=\"Sum of urgency, impact and difficulty\"\r\n                          >\r\n                            <span className=\"ml-1 min-w-max col-center\">\r\n                              {/* <span className=\"text-sm\">Todue Points</span> */}\r\n                              <span className=\"px-2 py-1 min-w-min rounded-2xl bg-green-lightest\">\r\n                                {1 +\r\n                                  (typeof list.level === \"number\"\r\n                                    ? list.level\r\n                                    : 1) +\r\n                                  (typeof list.urgent === \"number\"\r\n                                    ? list.urgent\r\n                                    : 1) +\r\n                                  (typeof list.important === \"number\"\r\n                                    ? list.important\r\n                                    : 1)}\r\n                              </span>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                        </span>\r\n                        <span className=\"row-center\">\r\n                          <Box\r\n                            component=\"span\"\r\n                            className=\"flex flex-wrap w-24\"\r\n                            pl={2}\r\n                            pt={2}\r\n                          >\r\n                            <Typography\r\n                              variant=\"subtitle2\"\r\n                              style={\r\n                                list.date < todayDate && list.isComplete\r\n                                  ? { color: \"black\" }\r\n                                  : list.date < todayDate && !list.isComplete\r\n                                  ? { color: \"red\" }\r\n                                  : { color: \"green\" }\r\n                              }\r\n                            >\r\n                              <TimeAgo\r\n                                live={false} // use false to increase performance (live means it updates est. time automatically without reloading the page)\r\n                                date={list.date}\r\n                              />\r\n                            </Typography>\r\n                          </Box>\r\n                          <span className=\"flex\">\r\n                            <Typography className={classes.dateField}>\r\n                              {fullDate.date}\r\n                              <br />\r\n                              {fullDate.clock}\r\n                            </Typography>\r\n\r\n                            {/* <>\r\n                              <BootstrapTooltip\r\n                                placement=\"top\"\r\n                                title={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? \"Edit Task\"\r\n                                    : \"Tasks added by others can't be edited by you\"\r\n                                }\r\n                              >\r\n                                <span className=\"pointer\">\r\n                                  <IconButton\r\n                                    aria-label=\"edit\"\r\n                                    disabled={\r\n                                      list.assignedBy === props.currentUserEmail\r\n                                        ? false\r\n                                        : true\r\n                                    }\r\n                                    className={classes.optionButtons}\r\n                                    onClick={(event) => {\r\n                                      editTodo(event, list, index);\r\n                                    }}\r\n                                  >\r\n                                    <EditIcon />\r\n                                  </IconButton>\r\n                                </span>\r\n                              </BootstrapTooltip>\r\n                              <BootstrapTooltip\r\n                                placement=\"top\"\r\n                                title={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? \"Delete Task\"\r\n                                    : \"Tasks added by others can't be deleted by you\"\r\n                                }\r\n                              >\r\n                                <span className=\"pointer\">\r\n                                  <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    disabled={\r\n                                      list.assignedBy === props.currentUserEmail\r\n                                        ? false\r\n                                        : true\r\n                                    }\r\n                                    className={classes.optionButtons}\r\n                                    onClick={(event) => {\r\n                                      removeTodo(event, list, index);\r\n                                    }}\r\n                                  >\r\n                                    <DeleteIcon />\r\n                                  </IconButton>\r\n                                </span>\r\n                              </BootstrapTooltip>\r\n                            </> */}\r\n                          </span>\r\n                        </span>\r\n                      </span>\r\n                    ) : (\r\n                      <>\r\n                        {\r\n                          <Fade in={true}>\r\n                            <FormControlLabel\r\n                              style={{\r\n                                pointerEvents: \"none\",\r\n                                transitionDelay: \"800ms\",\r\n                              }}\r\n                              className={classes.todoItemFormControl}\r\n                              aria-label=\"Acknowledge\"\r\n                              onFocus={(event) => event.stopPropagation()}\r\n                              control={\r\n                                <Checkbox\r\n                                  style={{ pointerEvents: \"auto\" }}\r\n                                  onClick={(event) => {\r\n                                    checkboxToggle(event, list);\r\n                                  }}\r\n                                  checked={list.isComplete}\r\n                                  disabled={\r\n                                    list.assignedBy ===\r\n                                      props.currentUserEmail ||\r\n                                    list.assignedTo === props.currentUserEmail\r\n                                      ? false\r\n                                      : true\r\n                                  }\r\n                                />\r\n                              }\r\n                              label={list.name}\r\n                            ></FormControlLabel>\r\n                          </Fade>\r\n                        }\r\n\r\n                        <span className=\"flex-wrap w-1/3 col-center\">\r\n                          <span>Board</span>\r\n                          <BootstrapTooltip placement=\"top\" title=\"View Board\">\r\n                            <button\r\n                              className=\"text-blue-500 no-outline hover:text-blue-700\"\r\n                              onClick={() => {\r\n                                props.setOpenProfile(false);\r\n                                props.setSelectedList(\r\n                                  props.list[list.boardIndex]\r\n                                );\r\n                                props.setOpenTasksFeed(false);\r\n                                props.setOpenDrawer(true);\r\n                              }}\r\n                            >\r\n                              {list.boardName}\r\n                            </button>\r\n                          </BootstrapTooltip>\r\n                        </span>\r\n\r\n                        <BootstrapTooltip\r\n                          placement=\"top\"\r\n                          title=\"Sum of urgency, impact and difficulty\"\r\n                        >\r\n                          <span className=\"ml-1 mr-3 space-x-1 min-w-max row-center\">\r\n                            {/* <span className=\"\">Todue Points</span> */}\r\n                            <span className=\"text-green-dark min-w-min\">\r\n                              {1 +\r\n                                (typeof list.level === \"number\"\r\n                                  ? list.level\r\n                                  : 1) +\r\n                                (typeof list.urgent === \"number\"\r\n                                  ? list.urgent\r\n                                  : 1) +\r\n                                (typeof list.important === \"number\"\r\n                                  ? list.important\r\n                                  : 1)}\r\n                            </span>\r\n                            <span>points</span>\r\n                          </span>\r\n                        </BootstrapTooltip>\r\n\r\n                        {props.isLogged &&\r\n                        list.assignedTo &&\r\n                        list.assignedBy !== props.currentUserEmail ? (\r\n                          <Typography className=\"w-1/3\" variant=\"subtitle2\">\r\n                            Assigned By:\r\n                            <BootstrapTooltip\r\n                              placement=\"top\"\r\n                              title=\"View Profile\"\r\n                            >\r\n                              <button\r\n                                className=\"text-blue-500 no-outline hover:text-blue-700\"\r\n                                onClick={() => {\r\n                                  props.setOpenProfile(true);\r\n                                  props.setProfileUserId(list.assignedBy);\r\n                                  props.setOpenTasksFeed(false);\r\n                                }}\r\n                              >\r\n                                {list.assignedBy}\r\n                              </button>\r\n                            </BootstrapTooltip>\r\n                          </Typography>\r\n                        ) : props.isLogged &&\r\n                          list.assignedTo &&\r\n                          list.assignedBy === props.currentUserEmail ? (\r\n                          <Typography className=\"w-1/3\" variant=\"subtitle2\">\r\n                            Assigned To:\r\n                            <BootstrapTooltip\r\n                              placement=\"top\"\r\n                              title=\"View Profile\"\r\n                            >\r\n                              <button\r\n                                className=\"text-blue-500 no-outline hover:text-blue-700\"\r\n                                onClick={() => {\r\n                                  props.setOpenProfile(true);\r\n                                  props.setProfileUserId(list.assignedTo);\r\n                                  props.setOpenTasksFeed(false);\r\n                                }}\r\n                              >\r\n                                {list.assignedTo}\r\n                              </button>\r\n                            </BootstrapTooltip>\r\n                          </Typography>\r\n                        ) : null}\r\n\r\n                        <Box component=\"span\" width=\"200px\" pl={2} pt={2}>\r\n                          <Typography\r\n                            variant=\"subtitle2\"\r\n                            style={\r\n                              list.date < todayDate && list.isComplete\r\n                                ? { color: \"black\" }\r\n                                : list.date < todayDate && !list.isComplete\r\n                                ? { color: \"red\" }\r\n                                : { color: \"green\" }\r\n                            }\r\n                          >\r\n                            <TimeAgo\r\n                              live={false} // use false to increase performance (live means it updates est. time automatically without reloading the page)\r\n                              date={list.date}\r\n                            />\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <Typography className={`${classes.dateField} mr-4`}>\r\n                          {fullDate.date} {fullDate.clock}\r\n                        </Typography>\r\n\r\n                        {/* <>\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title={\r\n                              list.assignedBy === props.currentUserEmail\r\n                                ? \"Edit Task\"\r\n                                : \"Tasks added by others can't be edited by you\"\r\n                            }\r\n                          >\r\n                            <span className=\"pointer\">\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                disabled={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                className={classes.optionButtons}\r\n                                onClick={(event) => {\r\n                                  editTodo(event, list, index);\r\n                                }}\r\n                              >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                          <BootstrapTooltip\r\n                            placement=\"top\"\r\n                            title={\r\n                              list.assignedBy === props.currentUserEmail\r\n                                ? \"Delete Task\"\r\n                                : \"Tasks added by others can't be deleted by you\"\r\n                            }\r\n                          >\r\n                            <span className=\"pointer\">\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                disabled={\r\n                                  list.assignedBy === props.currentUserEmail\r\n                                    ? false\r\n                                    : true\r\n                                }\r\n                                className={classes.optionButtons}\r\n                                onClick={(event) => {\r\n                                  removeTodo(event, list, index);\r\n                                }}\r\n                              >\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </span>\r\n                          </BootstrapTooltip>\r\n                        </> */}\r\n                      </>\r\n                    )}\r\n                  </ExpansionPanelSummary>\r\n                  <ExpansionPanelDetails className=\"flex items-center justify-between space-x-2\">\r\n                    <span\r\n                      style={{\r\n                        wordBreak: \"break-word\",\r\n                        overflowWrap: \"breakWord\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                      className=\"text-sm md:text-base xl:text-base lg:text-base\"\r\n                    >\r\n                      <Linkify componentDecorator={componentDecorator}>\r\n                        {list.detail}\r\n                      </Linkify>\r\n                    </span>\r\n                    <span className=\"flex flex-col items-center justify-end w-auto space-y-2 md:w-96 md:space-y-0 md:flex-row md:flex md:space-x-2\">\r\n                      <span className=\"col-center\">\r\n                        <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                          BUDGET\r\n                        </span>\r\n                        <span className=\"text-xl font-medium text-center rounded-full w-28 h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                          {list.estimatedBudget\r\n                            ? `$ ${list.estimatedBudget}`\r\n                            : `$ 0`}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"col-center\">\r\n                        <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                          URGENCY\r\n                        </span>\r\n                        <span className=\"w-32 text-xl font-semibold text-center rounded-full h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                          {list.urgent ? `${list.urgent} / 5` : `0 / 5`}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"col-center\">\r\n                        <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                          IMPACT\r\n                        </span>\r\n                        <span className=\"w-24 text-xl font-semibold text-center rounded-full h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                          {list.important ? `${list.important} / 5` : `0 / 5`}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"col-center\">\r\n                        <span className=\"mb-1 text-xs font-semibold text-gray-500\">\r\n                          DIFFICULTY\r\n                        </span>\r\n                        <span className=\"w-24 text-xl font-semibold text-center rounded-full h-7 bg-opacity-80 bg-green-lightest text-green\">\r\n                          {list.level ? `${list.level} / 5` : `0 / 5`}\r\n                        </span>\r\n                      </span>\r\n                    </span>\r\n                  </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                // </Fade>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : \r\n        <div>\r\n          <h5 style={{ textAlign: \"center\", padding: 25 }}>\r\n            No task matching this filter\r\n          </h5>\r\n        </div>\r\n      }\r\n        {props?.list?.length === 0 && (\r\n          <div>\r\n            <h5 style={{ textAlign: \"center\", padding: 25 }}>\r\n              Add the first task/ step to\r\n              <Typography variant=\"h6\"> {props.list.name}</Typography> and start\r\n              getting things todone around here...\r\n            </h5>\r\n          </div>\r\n        )}\r\n\r\n        {/* ALERT FOR WHEN TASK IS MARKED COMPLETED */}\r\n        {\r\n          // in the below line, && is used to make a AND Gate meaning that it'll only display Box component if\r\n          // openCompletedAlert is true (true+true=true & false in every other combination)\r\n          // this is widely used instead of ternary operator when there is no value for \"else\" condition\r\n          openCompletedAlert && (\r\n            <Box\r\n              position=\"fixed\"\r\n              width=\"250px\"\r\n              top=\"40%\"\r\n              left=\"36%\"\r\n              zIndex=\"999\"\r\n            >\r\n              <SuccessAnimation color=\"#3dd19d\" text={chooseAlertText()} />\r\n            </Box>\r\n          )\r\n        }\r\n\r\n        <Snackbar\r\n          open={alertOpen}\r\n          autoHideDuration={4000}\r\n          onClose={handleCloseAlert}\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        >\r\n          <Alert\r\n            style={{backgroundColor: '#3dd19d'}}\r\n            variant=\"filled\"\r\n            onClose={handleCloseAlert}\r\n            severity={severity}\r\n          >\r\n            {alertMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3\r\n          style={{\r\n            textAlign: \"center\",\r\n            padding: 25,\r\n            marginTop: \"50px\",\r\n            minHeight: \"40vh\",\r\n          }}\r\n        >\r\n          Create your first board from left menu and start getting things todone\r\n          around here.\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AllTasks;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n// import { DragDropContext, Droppable, Draggable  } from 'react-beautiful-dnd';\r\n\r\nimport firebase from '../../services/firebase';\r\nimport TodoItemList from \"../../components/todoItemList\";\r\n\r\nimport logo from '../../assets/images/logo.png';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport Profile from '../Profile/Profile';\r\nimport BoardDeleteConfirm from '../../components/BoardDeleteConfirm';\r\nimport BoardCard from '../../components/BoardCard';\r\nimport MobilePopup from '../../components/MobilePopup';\r\nimport BoardsSortControls from '../../components/BoardsSortControls';\r\nimport MainFooter from '../../components/MainFooter';\r\n\r\nimport styles from './styles';\r\nimport { Fade, Slide, Zoom } from '@material-ui/core';\r\nimport AllTasks from '../AllTasks/AllTasks';\r\nimport BootstrapTooltip from '../../components/BootstrapTooltip';\r\n\r\nfunction useTodoLists(currentUserId, setBoardsLoading, isLogged) {\r\n  const [todoLists, setTodoLists] = React.useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   firebase\r\n  //     .firestore()\r\n  //     .collection(currentUserId)\r\n  //     .onSnapshot((snapShot) => {\r\n  //       const newTodoLists = [];\r\n  //       snapShot.docs.map((doc) => {\r\n  //         let tempData = {};\r\n  //         tempData = doc.data();\r\n  //         tempData.id = doc.id;\r\n  //         newTodoLists.push(tempData);\r\n  //       })\r\n  //       setTodoLists(newTodoLists);\r\n  //     })\r\n  // }, []);\r\n  useEffect(() => {\r\n    if(!isLogged) return;\r\n    setBoardsLoading(true);\r\n    firebase\r\n      .firestore()\r\n      .collection('boards').where('assignments','array-contains', currentUserId)\r\n      .get()\r\n      .then((snapShot) => {\r\n        const newTodoLists = [];\r\n        snapShot.docs.map((doc) => {\r\n          let tempData = {};\r\n          tempData = doc.data();\r\n          tempData.id = doc.id;\r\n          newTodoLists.push(tempData);\r\n        })\r\n        setTodoLists(newTodoLists);\r\n        setBoardsLoading(false);\r\n      }).catch((error) => {\r\n        setBoardsLoading(false);\r\n        alert('error getting documents');\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }, []);\r\n  return todoLists;\r\n}\r\n\r\nconst HomePage = (props)=> {\r\n  const classes = styles();\r\n  \r\n  const currentUserEmail = firebase.auth().currentUser && firebase.auth().currentUser?.email;\r\n  const currentUserName = firebase.auth().currentUser && firebase.auth().currentUser?.displayName;\r\n\r\n  const publicView = window.location.href.includes(\"id=\");\r\n\r\n  const [isLogged, setIsLogged] = useState(currentUserName);\r\n\r\n  async function logout() {\r\n    // await firebase.logout()\r\n    await firebase.auth().signOut();\r\n    props.history.push('/')\r\n  }\r\n\r\n  async function signin() {\r\n    // await firebase.logout()\r\n    props.history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(currentUserName) setIsLogged(true);\r\n    else setIsLogged(false);\r\n  }, [currentUserName])\r\n\r\n  if (!isLogged && !publicView) {\r\n    // not logged in\r\n    alert('Please login first');\r\n    logout();\r\n    return null\r\n  }\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [listToDelete, setListToDelete] = useState('');\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const [otherUserUid, setOtherUserUid] = useState('');\r\n  \r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [navKey, setNavKey] = useState(123);\r\n  \r\n  // const currentUserId = firebase.auth().currentUser.uid;\r\n  // // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const todoLists = useTodoLists(currentUserId);\r\n\r\n  // All Tasks\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [openTasksFeed, setOpenTasksFeed] = useState(false);\r\n  \r\n  // PROFILE\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [openProfile, setOpenProfile] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [openOtherProfile, setOpenOtherProfile] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [otherUserUid, setOtherUserUid] = useState('');\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [profileUserId, setProfileUserId] = useState('');\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  // const [otherUserUid, setOtherUserUid] = useState('');\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [userName, setUserName] = useState('');\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [imgUrl, setImgUrl] = useState('');\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [currentUsername, setCurrentUsername] = useState('');\r\n  \r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(()=>{\r\n    if(!isLogged) return;\r\n    firebase.firestore().collection('users').doc(currentUserUid)\r\n        .get().then(async (doc)=>{\r\n            await setUserName(doc.data().name);\r\n            await setCurrentUsername(doc.data()?.psudo);\r\n            await setImgUrl(doc.data().imgUrl);\r\n        }).catch(err=>console.log(err))\r\n  },[])\r\n\r\n  const currentUserId = firebase.auth().currentUser?.email;\r\n  const currentUserUid = firebase.auth().currentUser?.uid;\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [boardsLoading, setBoardsLoading] = useState(false);\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  let todoListss = useTodoLists(currentUserId, setBoardsLoading, isLogged);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [todoLists, setTodoLists] = useState([]);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [initialTodoLists, setInitialTodoLists] = useState([]);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(()=>{\r\n    setTodoLists(todoListss);\r\n    setInitialTodoLists(todoListss);\r\n  },[todoListss])\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(()=>{\r\n    setTodoLists(initialTodoLists);\r\n  },[initialTodoLists])\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [taskToDuplicate, setTaskToDuplicate] = useState({});\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [todoListsOpen, setTodoListsOpen] = useState(true);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n// const [selectedList, setSelectedList] = useState(todoLists[0]);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\nconst [selectedList, setSelectedList] = useState({});\r\n//  const [selectedList, setSelectedList] = useState({}); //todoLists[0]\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\nuseEffect(()=>{\r\n  if(todoLists && todoLists?.length>0){\r\n    try{\r\n        const selectedListId = localStorage.getItem('selectedListId');\r\n        \r\n        // check the URL Parameters to look for Board ID which we'll use as selected board \r\n        // const parsedParams = queryString.parse(window.location.search);\r\n        // if(Object.keys(parsedParams).length>0 && parsedParams.id){\r\n        //   localStorage.setItem('selectedListId', parsedParams.id);\r\n        //   const toSet = todoLists.filter(obj=>obj.id===parsedParams.id);\r\n        //   toSet.length && toSet.length>0 ? setSelectedList(toSet[0]) : setSelectedList(todoLists[0]);\r\n        // } else if(selectedListId && selectedListId.length>0) {\r\n        //   // set selected list the same one that you last selected\r\n        //   const toSet = todoLists.filter(obj=>obj.id===selectedListId.id);\r\n        //   if (toSet.length && toSet.length>0) setSelectedList(toSet[0]); \r\n        //   else setSelectedList(todoLists[0]);\r\n        // } else {\r\n        //   setSelectedList(todoLists[0]);\r\n        //   localStorage.setItem('selectedListId', todoLists[0].id);\r\n        // }\r\n        if(selectedListId?.length){\r\n          // console.log(\"RIAOFJASO\");\r\n          const toSet = todoLists.filter(obj=>obj.id===selectedListId);\r\n          if (toSet?.length) setSelectedList(toSet[0]);\r\n          else setSelectedList(todoLists[0]);\r\n        }\r\n    } catch {\r\n      console.log('ERRRRRRRRRRRRRRR')\r\n      setSelectedList(todoLists[0]);\r\n      if (todoLists[0]) localStorage.setItem('selectedListId', todoLists[0].id);\r\n    }  \r\n  }\r\n},[todoLists.length])\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\nuseEffect(() => {\r\n  if(!isLogged && publicView){\r\n    const boardId = window.location.href.split('id=')[1];\r\n    if(!boardId) return;\r\n    firebase\r\n      .firestore()\r\n      .collection('boards').doc(boardId)\r\n      .get()\r\n      .then((snapShot) => {\r\n        const boardObj = snapShot.data();\r\n        boardObj.id = snapShot.id;\r\n        if(boardObj.isPublic) setSelectedList(boardObj);\r\n        // setBoardsLoading(false);\r\n      }).catch((error) => {\r\n        setBoardsLoading(false);\r\n        alert('Invalid ID or this board is not publicly shared.'); // add snackbar here\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }\r\n}, [isLogged])\r\n\r\nconst handleOnDragEnd = (result) => {\r\n  if (!result.destination) return;\r\n\r\n  const items = Array.from(todoLists);\r\n  const [reorderedItem] = items.splice(result.source.index, 1);\r\n  items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  setTodoLists(items);\r\n}\r\n\r\n  \r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [selectedListEditItemIndex, setSelectedListEditItemIndex] = useState(3.14);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [showEditTodoDialog, setShowEditTodoDialog] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [showNewTodoDialog, setShowNewTodoDialog] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [showNewListDialog, setShowNewListDialog] = useState(false);\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [selectNewAddedList, setSelectNewAddedList] = useState('');\r\n  \r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  const [openDrawer, setOpenDrawer] = useState(true);\r\n\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useEffect(() => {\r\n    // firebase.getCurrentUserQuote().then(setQuote)\r\n    console.log('Effect working.');\r\n    console.log(todoLists);\r\n    console.log(selectedList);\r\n    if (!selectedList) {\r\n      handleListItemClick(todoLists[0], 0);\r\n    }\r\n    \r\n    console.log('------ NEW LIST SELECT ------');\r\n    console.log(selectNewAddedList);\r\n    if (selectNewAddedList !== '') {\r\n      todoLists.map((item, index) => {\r\n        if (item.id === selectNewAddedList) {\r\n          setSelectNewAddedList('');\r\n          handleListItemClick(item, index);\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  \r\n  const handleListItemClick = async (list, index) => {\r\n    // putting the id of selected list to local storage as cache\r\n    localStorage.setItem('selectedListId',list.id);\r\n\r\n    await setSelectedIndex(index);\r\n    await setSelectedList(list);\r\n    await setOpenProfile(false);\r\n  };\r\n  \r\n  \r\n  const addTodoList = () => {\r\n    console.log('addTodoList');\r\n    setShowNewListDialog(true);\r\n  }\r\n  \r\n  const openEditTodoDialog = (list, index) => {\r\n    console.log('openEditTodoDialog --> ' + index);\r\n    console.log(list);\r\n    setSelectedListEditItemIndex(index)\r\n    setShowEditTodoDialog(true);\r\n  }\r\n  \r\n  const openNewTodoDialog = () => {\r\n    console.log('openNewTodoDialog');\r\n    setShowNewTodoDialog(true);\r\n  }\r\n\r\n  const handleDrawerClick = () => {\r\n    setOpenDrawer(openDrawer=>!openDrawer); \r\n    setOpenProfile(false);\r\n    setOpenTasksFeed(false);\r\n  }\r\n  \r\n  \r\n\r\n  const addNewAssignment = async (id,name, data, application=\"simple\")=> {\r\n    // const filteredToDoList = list.todoList.filter((obj)=>obj.assignedTo)\r\n    // prev data model:\r\n    // const collection = application==='simple' ? data.assignedTo : data.assignedBy; \r\n    const collection = 'boards';\r\n\r\n    let sendAssignedTaskEmail = data.assignedTo!==currentUserEmail ? true : false;\r\n    \r\n    let previousData;\r\n      previousData = await firebase.firestore().collection(collection).doc(id).get().then(doc=>{\r\n        if(doc.exists) {return doc.data()} \r\n        else {\r\n          return null\r\n        };\r\n      });\r\n    // console.log('prev data',previousData, typeof(previousData.todoList));\r\n    if(previousData){\r\n      \r\n      // let previousTask = previousData.todoList.filter(obj=> obj.taskId===data.taskId)[0]\r\n      \r\n      let previousTodoListFiltered = previousData.todoList.filter(obj=> obj.taskId!==data.taskId)\r\n      previousData.todoList = previousTodoListFiltered;\r\n      \r\n      // console.log('previous assigned::',previousTask.assignedTo);\r\n      // console.log('new Assigned:: ',data.assignedTo);\r\n      // if(previousTask.assignedTo===data.assignedTo) {sendAssignedTaskEmail=false};\r\n      \r\n      previousData.todoList.push(data);\r\n    }\r\n    const todoList = previousData ? previousData.todoList : new Array(data);\r\n    // const todoList = new Array(data);\r\n\r\n    // Manage Assignments\r\n    let assignmentsAll = [];\r\n    assignmentsAll.push(previousData.createdBy); // so that board without tasks is also fetched by WHERE query\r\n    previousData.todoList.map((task)=>{\r\n      assignmentsAll.push(task.assignedBy);\r\n      assignmentsAll.push(task.assignedTo);\r\n    })\r\n    const assignments = [... new Set(assignmentsAll)];\r\n    // --------END-------\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection(collection)\r\n      .doc(id)\r\n      .set({\r\n        createdBy: previousData.createdBy,\r\n        createdByUsername: previousData.createdByUsername ? previousData.createdByUsername : '',\r\n        name: name,\r\n        todoList: todoList,\r\n        assignments: assignments,\r\n        isPublic: previousData.isPublic ? true : false\r\n      })\r\n      .then((e) => {\r\n        if(sendAssignedTaskEmail){\r\n          const url = 'https://us-central1-todue-mullan.cloudfunctions.net/sendTaskAssignEmail';\r\n          const functionData = {\r\n            username: currentUserName,\r\n            email: data.assignedTo,\r\n          }\r\n          axios.post(url, functionData).then((e)=>console.log(e)).catch(err=>console.log(err));\r\n        }\r\n      })\r\n      .catch(err=>console.log(err));\r\n  }\r\n\r\n  const updateTodoList = (list, sendTaskCompletionEmail, emailAssignee, emailAssignor) => {\r\n    // firebase\r\n    //   .firestore()\r\n    //   .collection(currentUserId)\r\n    //   .doc(selectedList.id)\r\n    //   .set({\r\n    //     name: list.name,\r\n    //     todoList: list.todoList\r\n    //   })\r\n    //   .then((e) => {\r\n    //     console.log(e)\r\n    //   });\r\n\r\n    console.log(sendTaskCompletionEmail, emailAssignee, emailAssignor);\r\n    // console.log(list);\r\n    // Manage Assignments\r\n    let assignmentsAll = [];\r\n    assignmentsAll.push(list.createdBy); // so that board without tasks is also fetched by WHERE query  \r\n    list.todoList.map((task)=>{\r\n      assignmentsAll.push(task.assignedBy);\r\n      assignmentsAll.push(task.assignedTo);\r\n    })\r\n    const assignments = [... new Set(assignmentsAll)];\r\n    // --------END-------\r\n    \r\n\r\n    firebase\r\n      .firestore()\r\n      .collection('boards')\r\n      .doc(list.id) // BEFORE TASKS: selectedList.id\r\n      .set({\r\n        createdBy: list.createdBy,\r\n        createdByUsername: list.createdByUsername ? list.createdByUsername : '',\r\n        name: list.name,\r\n        todoList: list.todoList,\r\n        assignments: assignments,\r\n        isPublic: list.isPublic ? true : false\r\n      }, {merge: true})\r\n      .then((e) => {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        // todoListss = useTodoLists(currentUserId, setBoardsLoading, isLogged);\r\n\r\n        console.log(e);\r\n        console.log(sendTaskCompletionEmail, emailAssignee, emailAssignor);\r\n        if(sendTaskCompletionEmail){\r\n          console.log('RAN COMPLETION EMAIL')\r\n          const url = 'https://us-central1-todue-mullan.cloudfunctions.net/sendTaskCompletionEmail';\r\n          const functionData = {\r\n            emailAssignor: emailAssignee,\r\n            usernameAssignee: currentUserName,\r\n            email: emailAssignor,\r\n        }\r\n        axios.post(url, functionData).then((e)=>console.log(e)).catch(err=>console.log(err));\r\n        }\r\n      })\r\n      .catch(err=>console.log(err));\r\n  }\r\n\r\n  const removeNewAssignment = async (id,name, data)=> {\r\n    // const filteredToDoList = list.todoList.filter((obj)=>obj.assignedTo)\r\n    // prev DM:\r\n    // const collection = data.assignedTo;\r\n    const collection = 'boards'; \r\n    let previousData = await firebase.firestore().collection(collection).doc(id).get().then(doc=>{\r\n      if(doc.exists) {return doc.data()} \r\n      else {\r\n        return null;\r\n      };\r\n    });\r\n    if(previousData){\r\n      previousData.todoList =  previousData.todoList.filter(obj=>obj.taskId!==data.taskId);\r\n    }\r\n    const todoList = previousData ? previousData.todoList : [];\r\n    \r\n    // Manage Assignments\r\n    let assignmentsAll = [];\r\n    assignmentsAll.push(previousData.createdBy); // so that board without tasks is also fetched by WHERE query\r\n    previousData.todoList.map((task)=>{\r\n      assignmentsAll.push(task.assignedBy);\r\n      assignmentsAll.push(task.assignedTo);\r\n    })\r\n    const assignments = [... new Set(assignmentsAll)];\r\n    // --------END-------\r\n    \r\n    firebase\r\n      .firestore()\r\n      // .collection(data.assignedTo)\r\n      .collection(collection)\r\n      .doc(id)\r\n      .set({\r\n        name: name,\r\n        todoList: todoList,\r\n        assignments: assignments,\r\n        createdBy: previousData.createdBy,\r\n        createdByUsername: previousData.createdByUsername ? previousData.createdByUsername : '',\r\n        isPublic: previousData.isPublic ? true : false\r\n      })\r\n      .then((e) => {\r\n        console.log(e)\r\n      }).catch(err=>console.log(err));\r\n  }\r\n\r\n  const saveEditTodo = (title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget) => {\r\n    console.log('saveEditTodo');\r\n    if (title !== '' \r\n        // && detail !== '' && level !== '' && important !== '' && urgent !== ''\r\n    ) {\r\n      selectedList.todoList[selectedListEditItemIndex].name = title;\r\n      selectedList.todoList[selectedListEditItemIndex].detail = detail;\r\n      selectedList.todoList[selectedListEditItemIndex].date = new Date(date).getTime();\r\n      //level of difficulty of the task. (Easy, medium, hard)\r\n      selectedList.todoList[selectedListEditItemIndex].level = level;\r\n\r\n      //level of importance (not critical, critical)\r\n      selectedList.todoList[selectedListEditItemIndex].important = important;\r\n\r\n      //level of urgency (asap, today, tomorrow, this week, this month, this year). Can also be denoted using due date\r\n      selectedList.todoList[selectedListEditItemIndex].urgent = urgent;\r\n\r\n      //assignor (the person who created the task). Will be built by Talha\r\n      selectedList.todoList[selectedListEditItemIndex].assignedBy = currentUserEmail;\r\n      //assignee (the person who is assigned to complete the task). Will be built by Talha\r\n      //\r\n      selectedList.todoList[selectedListEditItemIndex].assignedTo = assignedTo;\r\n      \r\n      // if(selectedList.todoList[selectedListEditItemIndex].estimatedDays && selectedList.todoList[selectedListEditItemIndex].estimatedBudget){\r\n        selectedList.todoList[selectedListEditItemIndex].estimatedDays = estimatedDays;\r\n        selectedList.todoList[selectedListEditItemIndex].estimatedBudget = estimatedBudget;\r\n      // }\r\n       \r\n      if(assignedTo!=='' && assignedTo!==currentUserEmail){\r\n        if(assignedTo.toLowerCase().includes('.') && assignedTo.toLowerCase().includes('@') && assignedTo.toLowerCase().length>7){\r\n          const data = selectedList.todoList[selectedListEditItemIndex]; \r\n          addNewAssignment(selectedList.id,selectedList.name, data);\r\n          setTimeout(()=>updateTodoList(selectedList), 0);\r\n          setShowEditTodoDialog(false);\r\n          setSelectedListEditItemIndex(3.14);\r\n        }\r\n        else{\r\n          alert('not valid email')\r\n        }\r\n        return;\r\n      }\r\n      \r\n      updateTodoList(selectedList);\r\n      setShowEditTodoDialog(false);\r\n      setSelectedListEditItemIndex(3.14);\r\n    } else {\r\n      alert('Please check the form again, and make sure that there is no missing space.');\r\n    }\r\n  }\r\n  \r\n  //Only validation on title to increase user experience. All task properties should be optional except main title/ goal.\r\n  const saveNewTodo = (title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget) => {\r\n    console.log('saveNewTodo');\r\n    if (title !== '') {\r\n      if(assignedTo!==''){\r\n        if(assignedTo.toLowerCase().includes('.') && assignedTo.toLowerCase().includes('@') && assignedTo.toLowerCase().length>7){\r\n          const data = {\r\n            name: title,\r\n            detail: detail,\r\n            date: new Date(date).getTime(),\r\n            level: level,\r\n            important: important,\r\n            urgent: urgent,\r\n            isComplete: false,\r\n            createDate: new Date().getTime(),\r\n            assignedTo: assignedTo,\r\n            assignedBy: currentUserEmail,\r\n            taskId: uuidv4(),\r\n            estimatedDays: estimatedDays,\r\n            estimatedBudget: estimatedBudget\r\n          }\r\n          console.log('TODOLISTT', data);\r\n          selectedList.todoList.push(data); \r\n          addNewAssignment(selectedList.id,selectedList.name, data);\r\n          updateTodoList(selectedList);\r\n          setShowNewTodoDialog(false);\r\n        }\r\n        else{\r\n          alert('not valid email')\r\n        }\r\n        return;\r\n      }\r\n      selectedList.todoList.push({\r\n        name: title,\r\n        detail: detail,\r\n        date: new Date(date).getTime(),\r\n        level: level,\r\n        important: important,\r\n        urgent: urgent,\r\n        isComplete: false,\r\n        createDate: new Date().getTime(),\r\n        assignedTo: '',\r\n        assignedBy: currentUserEmail,\r\n        taskId: uuidv4(),\r\n        estimatedDays: estimatedDays,\r\n        estimatedBudget: estimatedBudget\r\n      });\r\n      console.log(selectedList);\r\n      \r\n      updateTodoList(selectedList);\r\n      setShowNewTodoDialog(false);\r\n    } else {\r\n      alert('A main goal/ objection is rquired. Everything else is optional');\r\n    }\r\n  }\r\n  \r\n  const saveNewTodoList = (title, description) => {\r\n    console.log('saveNewTodo');\r\n    if (title !== '') {\r\n      // firebase\r\n      //   .firestore()\r\n      //   .collection(currentUserId)\r\n      //   .add({\r\n      //     name: title,\r\n      //     todoList: []\r\n      //   })\r\n      //   .then((doc) => {\r\n      //     setSelectNewAddedList(doc.id);\r\n      //     setShowNewListDialog(false);\r\n      //   })\r\n      firebase\r\n        .firestore()\r\n        .collection('boards')\r\n        .add({\r\n          name: title,\r\n          description: description,\r\n          todoList: [],\r\n          createdBy: currentUserId,\r\n          createdByUsername: currentUsername ? currentUserName : '',\r\n          assignments: [currentUserId],\r\n          createdAt: new Date().getTime().toString(),\r\n          isPublic: false\r\n        })\r\n        .then(async (doc) => {\r\n          localStorage.setItem('selectedListId', doc.id);\r\n          setSelectNewAddedList(doc.id);\r\n          setShowNewListDialog(false);\r\n          await setNavKey(navKey=>navKey+1);\r\n          props.history.go(0);\r\n        }).catch(err=>console.log(err));\r\n      \r\n    } else {\r\n      alert('Please check the form again, and make sure that there is no missing space.');\r\n    }\r\n  }\r\n   \r\n\r\n  const removeTodoList = (event, list, index) => {\r\n    event.stopPropagation();\r\n    \r\n    firebase\r\n      .firestore()\r\n      // .collection(currentUserId)\r\n      .collection('boards')\r\n      .doc(list.id)\r\n      .delete()\r\n      .then((e) => {\r\n        setNavKey(navKey=>navKey+1);\r\n        props.history.go(0);\r\n        if (list.id === selectedList.id) {\r\n          handleListItemClick(todoLists[0], 0);\r\n        }\r\n      }).catch(err=>console.log(err))\r\n  }\r\n  \r\n  const renderEditDialog = () => {\r\n    console.log('renderEditDialog');\r\n    console.log(selectedList);\r\n    if ((selectedListEditItemIndex % 1) === 0) {\r\n      let editItem = selectedList.todoList[selectedListEditItemIndex];\r\n      let date = calculateFullDate(editItem.date);\r\n      let title = editItem.name;\r\n      let detail = editItem.detail;\r\n\r\n      let level = editItem.level ? typeof(editItem.level)===\"string\" ? 1 : editItem.level : 1;\r\n      let important = editItem.important ? typeof(editItem.important)===\"number\" ? editItem.important : 1 : 1;\r\n      let urgent = editItem.urgent ? typeof(editItem.urgent)===\"string\" ? 1 : editItem.urgent : 1;\r\n      \r\n      let assignedTo = editItem.assignedTo;\r\n      let estimatedDays= editItem.estimatedDays ? editItem.estimatedDays : 1;\r\n      let estimatedBudget= editItem.estimatedBudget ? editItem.estimatedBudget : 0;\r\n      \r\n      console.log(editItem);\r\n\r\n      const mobileWidth = window.screen.availWidth<700;\r\n      \r\n      return (\r\n        <Dialog open={showEditTodoDialog} \r\n          onKeyUp={(e)=>{\r\n            if (e.key==='Enter' && e.target.value!==detail) \r\n              saveEditTodo(title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget);\r\n            if(e.key==='Escape') setShowEditTodoDialog(false);\r\n          }} \r\n          aria-labelledby=\"form-dialog-title\"\r\n          >\r\n          <DialogTitle id=\"form-dialog-title\">EDIT</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              You can edit task/ step information here.\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              defaultValue={title}\r\n              onChange={(event) => title = event.target.value}\r\n              margin=\"dense\"\r\n              id=\"todo-title\"\r\n              label=\"Title\"\r\n              type=\"text\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              // autoFocus\r\n              defaultValue={detail}\r\n              onChange={(event) => detail = event.target.value}\r\n              margin=\"dense\"\r\n              id=\"todo-detail\"\r\n              label=\"Details\"\r\n              type=\"text\"\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              marginTop='10px'\r\n            />\r\n            <TextField\r\n              className=\"py-2\"\r\n              defaultValue={assignedTo}\r\n              onChange={(event) => assignedTo = event.target.value.toLowerCase()}\r\n              id=\"todo-assign\"\r\n              label=\"Assign this task to someone (enter their email address)\"\r\n              type=\"text\"\r\n              margin=\"dense\"\r\n              InputLabelProps={mobileWidth && { shrink: true }}\r\n              fullWidth\r\n            // defaultValue=\"2020-05-16T18:30\"\r\n            // className={classes.textField}\r\n            // InputLabelProps={{\r\n            //   shrink: true,\r\n            // }}\r\n          />\r\n            <TextField\r\n              className=\"py-2\"\r\n              defaultValue={level}\r\n              onChange={(event) => level = event.target.value*1}\r\n              margin=\"dense\"\r\n              id=\"todo-level\"\r\n              label=\"Level of difficulty (1: least difficult, 5: most difficult)\"\r\n              type=\"number\"\r\n              InputProps={{inputProps:{min: 1, max:5}}}\r\n              InputLabelProps={mobileWidth && { shrink: true }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              className=\"py-2\"\r\n              defaultValue={important}\r\n              onChange={(event) => important = event.target.value*1}\r\n              margin=\"dense\"\r\n              id=\"todo-impact\"\r\n              label=\"Level of impact out of 5 (1: least impact, 5: most impact)\"\r\n              type=\"number\"\r\n              InputProps={{inputProps:{min: 1, max:5}}}\r\n              InputLabelProps={mobileWidth && { shrink: true }}\r\n              fullWidth\r\n            />\r\n              <TextField\r\n                className=\"py-2\"  \r\n                defaultValue={urgent}\r\n                onChange={(event) => urgent = event.target.value*1}\r\n                margin=\"dense\"\r\n                id=\"todo-urgent\"\r\n                label=\"Level of Urgency (1: least urgent, 5: most urgent)\"\r\n                type=\"number\"\r\n                InputProps={{inputProps:{min: 1, max:5}}}\r\n                InputLabelProps={mobileWidth && { shrink: true }}\r\n                fullWidth\r\n            />\r\n            <span className=\"flex w-full\">\r\n              <TextField\r\n                className=\"w-1/2 py-2\"\r\n                defaultValue={estimatedDays}\r\n                onChange={(event) => estimatedDays = event.target.value*1}\r\n                margin=\"dense\"\r\n                id=\"todo-estimated-days\"\r\n                label=\"Estimated days to complete this task\"\r\n                type=\"number\"\r\n                InputLabelProps={mobileWidth && { shrink: true }}\r\n                // fullWidth\r\n              />\r\n              <TextField\r\n                className=\"w-1/2 py-2\"\r\n                defaultValue={estimatedBudget}\r\n                onChange={(event) => estimatedBudget = event.target.value*1}\r\n                margin=\"dense\"\r\n                id=\"todo-estimated-budget\"\r\n                label=\"Estimated budget(in USD)\"\r\n                type=\"number\"\r\n                InputLabelProps={mobileWidth && { shrink: true }}\r\n                // fullWidth\r\n              />\r\n            </span>\r\n            <TextField\r\n              defaultValue={date}\r\n              onChange={(event) => date = event.target.value}\r\n              id=\"todo-datetime\"\r\n              label=\"date\"\r\n              type=\"datetime-local\"\r\n              // defaultValue=\"2020-05-16T18:30\"\r\n              className={classes.textField}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => {\r\n              setShowEditTodoDialog(false);\r\n              setSelectedListEditItemIndex(3.14);\r\n            }} color=\"secondary\">\r\n              CLOSE\r\n            </Button>\r\n            <Button onClick={() => saveEditTodo(title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget)} color=\"primary\">\r\n              SAVE\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )\r\n    } else {\r\n      return (<div></div>)\r\n    }\r\n  }\r\n  \r\n  function renderNewTodoDialog() {\r\n    console.log('renderNewTodoDialog');\r\n\r\n    const todayDate = new Date();\r\n    const [year, month, day] = [todayDate.getFullYear(), todayDate.getMonth()+1, todayDate.getDate()];\r\n    let dateToSet = new Date(`${year}-${month}-${day} 17:00:00`);\r\n    // let tomorrow = new Date();\r\n    // tomorrow.setDate(today.getDate()+2); // change default due date by simply replacing 2 with the number of days + 1\r\n\r\n    let date = calculateFullDate(dateToSet.getTime());\r\n    let title = '';\r\n    let detail = '';\r\n    let level = 1;\r\n    let important = 1;\r\n    let urgent = 1;\r\n    let assignedTo = currentUserEmail;\r\n    let estimatedDays = 1;\r\n    let estimatedBudget = 0;\r\n\r\n    if(Object.keys(taskToDuplicate).length){\r\n      title = taskToDuplicate.name;\r\n      detail = taskToDuplicate.detail;\r\n      level = taskToDuplicate.level;\r\n      important = taskToDuplicate.important;\r\n      urgent = taskToDuplicate.urgent;\r\n      estimatedBudget = taskToDuplicate.estimatedBudget;\r\n      estimatedDays = taskToDuplicate.estimatedDays;\r\n      assignedTo = isLogged ? taskToDuplicate.assignedTo : '';\r\n      date = calculateFullDate(taskToDuplicate.date) ?? date;\r\n    }\r\n\r\n    const mobileWidth = window.screen.availWidth<700;\r\n\r\n    const addTask = () => {\r\n      if(!isLogged) signin();\r\n      else saveNewTodo(title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget); \r\n      setTaskToDuplicate({});\r\n    }\r\n    \r\n    return (\r\n      <Dialog \r\n        onKeyUp={(e)=>{\r\n          if (e.key==='Enter' && e.target.value!==detail) {\r\n              saveNewTodo(title, detail, date, level, important, urgent, assignedTo, estimatedDays, estimatedBudget);\r\n              setTaskToDuplicate({});\r\n            }\r\n          if(e.key==='Escape') {\r\n            setShowNewTodoDialog(false);\r\n            setTaskToDuplicate({});\r\n          }\r\n        }}\r\n        open={showNewTodoDialog} \r\n        aria-labelledby=\"form-dialog-title\"\r\n        >\r\n        <DialogTitle id=\"form-dialog-title\">Add a task</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            defaultValue={title}\r\n            onChange={(event) => title = event.target.value}\r\n            margin=\"normal\"\r\n            id=\"todo-title\"\r\n            label=\"Main Goal/Objective\"\r\n            type=\"text\"\r\n\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            // autoFocus\r\n            defaultValue={detail}\r\n            onChange={(event) => detail = event.target.value}\r\n            margin=\"dense\"\r\n            id=\"todo-detail\"\r\n            label=\"Details, context, links,\r\n             milestones and tips etc\"\r\n            type=\"text\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            marginTop='10px'\r\n          />\r\n          <TextField\r\n            className=\"py-2\"\r\n            defaultValue={assignedTo}\r\n            onChange={(event) => assignedTo = event.target.value.toLowerCase()}\r\n            id=\"todo-assign\"\r\n            label=\"Assign this task to someone (enter their email address)\"\r\n            type=\"text\"\r\n            margin=\"dense\"\r\n            InputLabelProps={mobileWidth && { shrink: true }}\r\n            fullWidth\r\n            // defaultValue=\"2020-05-16T18:30\"\r\n            // className={classes.textField}\r\n            // InputLabelProps={{\r\n            //   shrink: true,\r\n            // }}\r\n          />\r\n          <TextField\r\n            className=\"py-2\"\r\n            defaultValue={level}\r\n            onChange={(event) => level = event.target.value*1}\r\n            margin=\"dense\"\r\n            id=\"todo-level\"\r\n            label=\"Level of difficulty (1: least difficult, 5: most difficult)\"\r\n            type=\"number\"\r\n            InputProps={{inputProps:{min: 1, max:5}}}\r\n            InputLabelProps={mobileWidth && { shrink: true }}\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            className=\"py-2\"\r\n            defaultValue={important}\r\n            onChange={(event) => important = event.target.value*1}\r\n            margin=\"dense\"\r\n            id=\"todo-impact\"\r\n            label=\"Level of impact out of 5 (1: least impact, 5: most impact)\"\r\n            type=\"number\"\r\n            InputProps={{inputProps:{min: 1, max:5}}}\r\n            InputLabelProps={mobileWidth && { shrink: true }}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            className=\"py-2\"\r\n            defaultValue={urgent}\r\n            onChange={(event) => urgent = event.target.value*1}\r\n            margin=\"dense\"\r\n            id=\"todo-urgent\"\r\n            label=\"Level of urgency. (1: least urgent, 5: most urgent)\"\r\n            type=\"number\"\r\n            InputProps={{inputProps:{min: 1, max:5}}}\r\n            InputLabelProps={mobileWidth && { shrink: true }}\r\n            fullWidth\r\n          />\r\n          <span className=\"flex w-full\">\r\n            <TextField\r\n              className=\"w-1/2 py-2\"\r\n              defaultValue={estimatedDays}\r\n              onChange={(event) => estimatedDays = event.target.value*1}\r\n              margin=\"dense\"\r\n              id=\"todo-estimated-days\"\r\n              label=\"Estimated days to complete this task\"\r\n              type=\"number\"\r\n              InputProps={{inputProps:{min: 1}}}\r\n              InputLabelProps={mobileWidth && { shrink: true }}\r\n              // fullWidth\r\n            />\r\n            <TextField\r\n              className=\"w-1/2 py-2\"\r\n              defaultValue={estimatedBudget}\r\n              onChange={(event) => estimatedBudget = event.target.value*1}\r\n              margin=\"dense\"\r\n              id=\"todo-estimated-budget\"\r\n              label=\"Estimated budget(in USD)\"\r\n              type=\"number\"\r\n              InputProps={{inputProps:{min: 1}}}\r\n              InputLabelProps={mobileWidth && { shrink: true }}\r\n              // fullWidth\r\n            />\r\n          </span>\r\n\r\n          <TextField\r\n            defaultValue={date}\r\n            onChange={(event) => date = event.target.value}\r\n            id=\"todo-datetime\"\r\n            label=\"Due date\"\r\n            type=\"datetime-local\"\r\n            // defaultValue=\"2020-05-16T18:30\"\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => {setShowNewTodoDialog(false);setTaskToDuplicate({});}} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addTask} color=\"primary\">\r\n            Add task\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n  \r\n  const renderNewListDialog = () => {\r\n    console.log('renderNewListDialog');\r\n    let title = '';\r\n    let description = '';\r\n    \r\n    return (\r\n      <Dialog open={showNewListDialog} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Create How-To</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Create a board for how-to guides, projects, tasks lists, assignments etc.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            defaultValue={title}\r\n            onChange={(event) => title = event.target.value}\r\n            margin=\"dense\"\r\n            id=\"todo-title\"\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            defaultValue={description}\r\n            onChange={(event) => description = event.target.value}\r\n            margin=\"dense\"\r\n            id=\"todo-description\"\r\n            label=\"Description\"\r\n            type=\"text\"\r\n            rows={2}\r\n            variant=\"outlined\"\r\n            multiline\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowNewListDialog(false)} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => saveNewTodoList(title, description)} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n  \r\n// COMMENT 1\r\n  \r\n  return (\r\n    <div \r\n      // key={`${openProfile}`}\r\n      tabIndex={0} \r\n      onKeyDown={(e)=>{\r\n        e.stopPropagation();\r\n        if(!openProfile && e.key===\"Enter\" && e.ctrlKey) openNewTodoDialog();\r\n      }} \r\n      className={classes.root}>\r\n      { window.screen.availWidth < 750 && <MobilePopup /> }\r\n      <CssBaseline/>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          {\r\n            isLogged &&\r\n              <Button style={{outline:'none'}} color=\"primary\" onClick={handleDrawerClick}>\r\n                {\r\n                  openDrawer \r\n                  ? <HomeIcon />\r\n                  : <FormatListBulletedIcon />\r\n                }\r\n              </Button> \r\n          }\r\n          <Button href=\"/home\" style={{textTransform:\"none\"}}>\r\n          <Typography className=\"mb-1 row-center\" style={{paddingTop:\"10px\"}} color=\"primary\" variant=\"h4\" noWrap>\r\n            <img alt=\"logo\" style={{paddingRight:'5px', width:'40px', height:'35px'}} src={logo}></img>\r\n            <span>Todue</span>\r\n          </Typography>\r\n          </Button>\r\n          {\r\n            isLogged && window.screen.availWidth>750 ?\r\n            <Box className=\"space-x-6\" position=\"fixed\" right={180} top={20} alignItems=\"center\" justifyContent=\"center\" display=\"flex\">\r\n              <span>\r\n                <BootstrapTooltip arrow placement=\"top\" title=\"All my tasks across all boards\">\r\n                {/* <Button\r\n                  variant=\"contained\"\r\n                  className={`${classes.allMyTasksButton} ${openTasksFeed && 'border-b-4 border-green'}`}\r\n                  onClick={()=>{setOpenTasksFeed(true); setOpenDrawer(false)}}\r\n                  size=\"small\"\r\n                > */}\r\n                  <button \r\n                      onClick={()=>{setOpenTasksFeed(true); setOpenDrawer(false)}}\r\n                      className={`no-outline px-3 py-1 my-1 font-medium ${openTasksFeed && 'border-b-4 border-green'} text-black transition-all bg-grey-50 hover:grey-300 rounded-lg shadow-md hover:shadow-xl pointer`}\r\n                    > \r\n                      All My Tasks\r\n                  </button>\r\n                 {/* </Button> */}\r\n                </BootstrapTooltip>\r\n              </span>\r\n              <span className=\"row-center\">\r\n                <Avatar style={{width:'40px', height:'40px'}} alt={userName} src={imgUrl} />\r\n                <span className=\"ml-1\">\r\n                  <Button onClick={()=>{\r\n                    setOpenProfile(true);\r\n                    setOpenDrawer(false);\r\n                    setOpenTasksFeed(false);\r\n                    setProfileUserId(currentUserId);\r\n                  }\r\n                    // setSelectedList({})\r\n                    } style={{textTransform:'none'}}> <Typography variant=\"h6\" component=\"span\">{userName}</Typography>\r\n                  </Button>\r\n                </span>\r\n              </span>\r\n          </Box>\r\n          : null\r\n          }\r\n          {\r\n            isLogged ?\r\n            <Button\r\n            variant=\"contained\"\r\n            className={classes.logoutButton}\r\n            onClick={logout}\r\n            size=\"small\"\r\n          >\r\n            <Typography variant=\"body2\">Log out</Typography>\r\n          </Button>\r\n          :\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.logoutButton}\r\n            onClick={signin}\r\n            size=\"small\"\r\n          >\r\n            <Typography variant=\"body2\">Sign In</Typography>\r\n          </Button>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* COMMENT 2 */}\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer}/>\r\n        {/* {console.log('profileee',openProfile)} */}\r\n        {\r\n          // Object.keys(selectedList).length>0 ?\r\n          !openProfile && !openTasksFeed ?\r\n          <> \r\n          {\r\n            openDrawer ? \r\n            <TodoItemList \r\n              isLogged = {isLogged}\r\n              publicView={publicView}\r\n              list={selectedList ? selectedList : {}} \r\n              updateTodoList={(list, sendTaskCompletionEmail, emailAssignee, emailAssignor) => updateTodoList(list, sendTaskCompletionEmail, emailAssignee, emailAssignor)}\r\n              openEditDialog={(list, index) => openEditTodoDialog(list, index)}\r\n              openNewTodoDialog={() => openNewTodoDialog()}\r\n              currentUserEmail={currentUserEmail}\r\n              removeNewAssignment={removeNewAssignment}\r\n              selectedList={selectedList}\r\n              addNewAssignment={addNewAssignment}\r\n              setTaskToDuplicate = {setTaskToDuplicate}\r\n              setSelectedList={setSelectedList}\r\n              setOpenProfile = {setOpenProfile}\r\n              setProfileUserId = {setProfileUserId}     \r\n              />\r\n            :\r\n            <span className=\"space-y-5\">\r\n              <span className=\"mt-10 space-y-5 col-center\">\r\n                  <span onClick={()=>addTodoList()} className=\"text-white big-btn bg-green\">\r\n                    + Create How-To\r\n                  </span>\r\n                  <span className=\"w-full\">\r\n                    <BoardsSortControls\r\n                      todoLists = {todoLists}\r\n                      setTodoLists = {setTodoLists}\r\n                      initialTodoLists = {initialTodoLists}\r\n                      setInitialTodoLists={setInitialTodoLists}\r\n                    />\r\n                  </span>\r\n              </span>\r\n              <Fade timeout={500} in={!openProfile}>\r\n                <span\r\n                  // className=\"flex-grow w-full\"\r\n                  className={`flex flex-wrap ${boardsLoading ? \"justify-center\" : \"justify-center xl:justify-start lg:justify-start lg:pl-3\"}`}\r\n                  >\r\n                  {\r\n                    !boardsLoading ?\r\n                    todoLists.map((boardObj, index)=>(\r\n                      <span key={`${index}${selectedList.isPublic}`} className=\"mx-3 my-3\">\r\n                        <BoardCard\r\n                          currentUserId = {currentUserId}\r\n                          boardOnClick={() => {handleListItemClick(boardObj, index); setOpenDrawer(!openDrawer)}}\r\n                          key={boardObj.id}\r\n                          boardObj = {boardObj}\r\n                          setListToDelete = {setListToDelete}\r\n                          handleConfirmationOpen = {setOpenDeleteModal}\r\n                          selectedList={selectedList}\r\n                        />\r\n                      </span>\r\n                      )) \r\n                      :\r\n                      <CircularProgress style={{ marginTop:'50px', color: \"#3dd19d\" }} />\r\n                  }\r\n                </span>\r\n              </Fade>\r\n              <BoardDeleteConfirm\r\n                      removeTodoList={removeTodoList}\r\n                      listToDelete={listToDelete}\r\n                      openDeleteModal={openDeleteModal} \r\n                      setOpenDeleteModal={setOpenDeleteModal} \r\n                    />\r\n            </span>\r\n          }\r\n          </>\r\n          : openTasksFeed ?\r\n              <AllTasks\r\n                isLogged = {isLogged}\r\n                publicView={publicView}\r\n                // list={selectedList ? selectedList : {}}\r\n                list={todoLists?.length?todoLists : []}\r\n                setTodoLists={setTodoLists} \r\n                updateTodoList={(list, sendTaskCompletionEmail, emailAssignee, emailAssignor) => updateTodoList(list, sendTaskCompletionEmail, emailAssignee, emailAssignor)}\r\n                openEditDialog={(list, index) => openEditTodoDialog(list, index)}\r\n                openNewTodoDialog={() => openNewTodoDialog()}\r\n                currentUserEmail={currentUserEmail}\r\n                removeNewAssignment={removeNewAssignment}\r\n                selectedList={selectedList}\r\n                addNewAssignment={addNewAssignment}\r\n                setTaskToDuplicate = {setTaskToDuplicate}\r\n                setSelectedList={setSelectedList}\r\n                setOpenProfile = {setOpenProfile}\r\n                setProfileUserId = {setProfileUserId}\r\n                setOpenTasksFeed={setOpenTasksFeed}\r\n                setOpenDrawer={setOpenDrawer}\r\n              />\r\n          :\r\n            <Profile \r\n              key={`${openDrawer}${selectedIndex}`}\r\n              profileOpen={openOtherProfile} \r\n              currentUserId=  {profileUserId} \r\n            />\r\n\r\n          }\r\n        <MainFooter />\r\n      </main>\r\n      \r\n      {renderEditDialog()}\r\n      {renderNewTodoDialog()}\r\n      {renderNewListDialog()}\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nconst twoDigitDateTextMaker = (time) => {\r\n  let text = time.toString();\r\n  if (text.toString().length > 1) {\r\n    return text;\r\n  } else {\r\n    return '0' + text;\r\n  }\r\n}\r\n\r\nconst calculateFullDate = (time) => {\r\n  // Return Type -> DD-MM-YYYYTHH:MM\r\n  const eventDate = new Date(time);\r\n  const resDate = twoDigitDateTextMaker(eventDate.getUTCFullYear()) + '-' + twoDigitDateTextMaker(eventDate.getUTCMonth() + 1) + '-' + twoDigitDateTextMaker(eventDate.getUTCDate()) + 'T' + twoDigitDateTextMaker(eventDate.getHours()) + ':' + twoDigitDateTextMaker(eventDate.getMinutes());\r\n  return resDate;\r\n}\r\n\r\nexport default HomePage;\r\n","import React, {useState} from 'react'\r\nimport {Avatar, Button, FormControl, Input, Snackbar, InputLabel, Paper, Typography} from '@material-ui/core'\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport firebase from '../../services/firebase'\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },  \r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  createAccount: {\r\n    background: '#41b5f0',\r\n    marginTop: '10px',\r\n  },\r\n});\r\n\r\nfunction SignIn(props) {\r\n  const {classes} = props\r\n  \r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [alertData, setAlertData] = useState('success');\r\n  const [alertType, setAlertType] = useState('success');\r\n  const [alertOpen, setAlertOpen] = useState(false);  \r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={e => e.preventDefault() && false}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoComplete=\"on\" autoFocus value={email}\r\n                   onChange={e => setEmail(e.target.value)}/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"off\" value={password}\r\n                   onChange={e => setPassword(e.target.value)}/>\r\n          </FormControl>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={login}\r\n            style={{textDecoration:'none', color: 'white'}}\r\n            className={classes.submit}>\r\n            Sign in\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"blue\"\r\n            component={Link}\r\n            to=\"/register\"\r\n            style={{textDecoration:'none', color: 'white'}}\r\n            className={classes.createAccount}>\r\n            Create Account\r\n          </Button>\r\n        </form>\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            onClick={handleForgotPassword}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{textDecoration:'none', color: '#3dd19d'}}\r\n            className={classes.submit}>\r\n            Forgot Password?\r\n          </Button>\r\n      </Paper>\r\n      <Snackbar\r\n                open={alertOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                // anchorOrigin={{vertical: 'top', horizontal:'center'}}\r\n              >\r\n          <Alert\r\n                  variant=\"filled\"\r\n                  onClose={handleClose}\r\n                  severity={alertType}\r\n                >\r\n                  {alertData}\r\n                </Alert>\r\n      </Snackbar>\r\n    </main>\r\n  )\r\n\r\n  async function handleForgotPassword(){\r\n    if(email.length>10 && email.includes('@') && email.includes('.')){\r\n      await firebase.auth().sendPasswordResetEmail(email).then(async ()=> {\r\n        await setAlertData('Email sent. Kindly check you email inbox after a few moments.')\r\n        await setAlertType('success')\r\n        await setAlertOpen('true');\r\n      }).catch(async (err)=>{\r\n        await setAlertData(err.message)\r\n        await setAlertType('error')\r\n        await setAlertOpen('true');\r\n      });\r\n    }\r\n    else{\r\n      await setAlertData('Please enter a valid email address')\r\n      await setAlertType('error')\r\n      await setAlertOpen('true');\r\n    }\r\n}\r\n  \r\n  async function login() {\r\n    try {\r\n      // await firebase.login(email, password)\r\n      await firebase.auth().signInWithEmailAndPassword(email, password);\r\n      const isVerified = await firebase.auth().currentUser.emailVerified;\r\n      if(!isVerified){\r\n        await firebase.auth().currentUser.sendEmailVerification();\r\n        \r\n        await setAlertType('error');\r\n        await setAlertData('Please check your mailbox for the confirmation email.');\r\n        await setAlertOpen(true);\r\n        \r\n        await firebase.auth().signOut();\r\n        return;\r\n      }\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks  \r\n    props.history.replace('/home');\r\n    props.history.go(0);\r\n    } catch (error) {\r\n      await setAlertData(error.message)\r\n      await setAlertType('error')\r\n      await setAlertOpen('true');\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(SignIn))\r\n","import React, {useState} from 'react'\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport withStyles from '@material-ui/core/styles/withStyles'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport {makeStyles } from '@material-ui/core/styles';\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport firebase from '../../services/firebase'\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  backToLogin: {\r\n    background: '#41b5f0',\r\n    marginTop: '10px',\r\n  },\r\n})\r\n\r\nfunction Register(props) {\r\n\r\n  const {classes} = props\r\n\r\n  const storage = firebase.storage();\r\n\r\n  const [signupLoading, setSignupLoading] = useState(false);\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\");\r\n  \r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [psudo, setPsudo] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [position, setPosition] = useState('');\r\n\r\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\r\n\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [severity, setSeverity] = useState('success');\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const handleCloseAlert = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlertOpen(false);\r\n  };\r\n\r\n  // IMAGE UPLOAD INPUT\r\n  const handleFileChange = async (e) => {\r\n    const filee = e.target.files[0];\r\n    await setFile(filee);\r\n    handleUpload(filee);\r\n  }\r\n\r\n  const handleUpload= async (file) => {\r\n    try{\r\n    const fileName = await file.name;\r\n    const uploadTask = storage.ref(`/images/${fileName}`).put(file);\r\n    uploadTask.on(\"state_changed\", {\r\n      'complete': () => {\r\n        storage\r\n          .ref(\"images\")\r\n          .child(fileName)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            // setFile(null);\r\n            setURL(url);\r\n            console.log('URLLLLLLLLLLL', url);\r\n          });\r\n      }     \r\n    });\r\n  } catch(err){\r\n    console.log('ERRORRRRRRRRRRR',err);\r\n  }\r\n  }\r\n\r\n  const validateData = ()=>{\r\n    if(name===\"\") return 'Please enter your full name';\r\n    if(name.length>20) return 'Name can only be of 20 characters';\r\n    if(!name.includes(' ')) return 'Please use your full name';\r\n    if(psudo.length>20) return 'Username can only be of 20 characters';\r\n    if(psudo.includes(' ')) return 'username cannot contain spaces';\r\n    if(psudo.includes('`')||psudo.includes('!')||psudo.includes('@')||psudo.includes('#')||psudo.includes('$')||psudo.includes('%')||psudo.includes('^')||psudo.includes('&')||psudo.includes('*')||psudo.includes(\"'\")||psudo.includes('/')||psudo.includes('\\\\')) return 'username cannot contain special characters except underscore: _ ';\r\n    if(psudo===\"\") return 'Please enter a unique username';\r\n    /*if(position===\"\") return 'Please enter your employment position';*/\r\n    if(email===\"\") return 'Please enter a valid email address';\r\n    // if(file===null) return 'Please upload your profile picture ';\r\n    return true;\r\n  }\r\n  \r\n  return (\r\n    <main className={classes.main}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Create Account\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={e => e.preventDefault() && false}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"name\">Full Name (first and last name)</InputLabel>\r\n            <Input id=\"name\" name=\"name\" autoComplete=\"on\" autoFocus value={name}\r\n                   onChange={e => setName(e.target.value)}/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"username\">Username (no spaces)</InputLabel>\r\n            <Input id=\"username\" name=\"username\" autoComplete=\"on\" value={psudo} onChange={e => setPsudo(e.target.value)}/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoComplete=\"on\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n          </FormControl>\r\n          <Typography>Profile Picture (only .jpg files)</Typography>\r\n          <FormControl margin=\"normal\" fullWidth>\r\n            <InputLabel htmlFor=\"file\">Profile Picture</InputLabel>\r\n            <Input id=\"file\" name=\"file\" type=\"file\" onChange={handleFileChange}/>\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"off\" value={password}\r\n                   onChange={e => setPassword(e.target.value)}/>\r\n          </FormControl>\r\n\r\n          {\r\n              signupLoading ? \r\n                <Box display=\"flex\" justifyContent=\"center\" width=\"100%\"><CircularProgress style={{color:\"#3dd19d\"}}/></Box> \r\n              : <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onRegister}\r\n              className={classes.submit}\r\n              style={{textDecoration:'none', color: 'white'}}\r\n              // disabled={signupLoading}\r\n              >\r\n              Register\r\n            </Button>\r\n          }\r\n          \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"black\"\r\n            // component={Link}\r\n            // to=\"/\"\r\n            style={{textDecoration: 'none'}}\r\n            className={classes.backToLogin}\r\n            >\r\n            <Link to=\"/\" style={{textDecoration:'none', color: 'white'}}>Go back to Login </Link>\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n\r\n      <SuccessModal open={successModalOpen} setOpen={setSuccessModalOpen} />\r\n\r\n      <Snackbar\r\n        open={alertOpen}\r\n        autoHideDuration={4000}\r\n        onClose={handleCloseAlert}\r\n        // anchorOrigin={{vertical: 'top', horizontal:'center'}}\r\n      >\r\n        <Alert variant=\"filled\" onClose={handleCloseAlert} severity={severity}>\r\n          {alertMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </main>\r\n  )\r\n\r\n  \r\n  async function onRegister() {\r\n\r\n  const tempDate = new Date().getTime() + (3600*24*1000);\r\n  const dateForTomorrow = new Date(tempDate).getTime();\r\n\r\n  const buildTodoList = (email) => [\r\n        {\r\n          name: \"Hi, welcome to Mytodue.com. I am a task. Mark me as completed!\",\r\n          detail: \"\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },  \r\n        {\r\n          name: \"Click anywhere or dropdown arrow to expand the view and see the details section.\",\r\n          detail: \"You can add context, links to documents, milestones, and tips to support main goal/ objective.\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"Now it's time to create your first task and call it 'Test, check me!'. Then Mark as completed\",\r\n          detail: \"\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"View your profile page by clicking your name/ profile picture in the top right\",\r\n          detail: \"\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"ReadMe: Message to you from Danny\",\r\n          detail: \"Hi, I wanted to write personal note thanking you for joining Todue. We are building this platform in public and in the beta testing stage. We are building Todue to help people with their remote work and lives. You can use it to create personal todo lists, or assign errands to family or friends, or delegate work flows and sequences to co-workers and colleagues. We spent most of the pandemic at home working on this project and early adopters like yourself make all the long nights worth it. I hope you enjoy it and it brings you affirmation and joy! Regards, Danny. You can email me anytime with ideas, questions, bugs at mytoduelist2020@gmail.com or follow me @danm2021 on twitter.\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"Help us spread the word\",\r\n          detail: \"You can Todue spread the word by inviting a friend. Create a task called “Hi friend” to this welcome board & assign to a friend or co worker that would enjoy this platform (add email at the bottom of the task form). They will receive an email notification that you created it. When they create an account and complete the task  you will receive an email. You can invite as many friends to this board as you like.\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"Follow us on Twitter at @Todue1 (link in details section. Click drop down)\",\r\n          detail: \"Follow us on Twitter at @Todue1 https://twitter.com/Todue1\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"If you complete this board...\",\r\n          detail: \"If you complete this board you will be invited to our ideas and improvements board. This is exclusive behind the scenes board with ideas, updates, and brainstorming.\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        },\r\n        {\r\n          name: \"Have early feedback? Fill out this survey\",\r\n          detail: \"https://docs.google.com/forms/d/e/1FAIpQLSdVHZ_BLbBUL5LhSfGtTgoJkk_g9lzsDUA6LFWV-RQzUguzLg/viewform\",\r\n          date: dateForTomorrow,\r\n          level: 1,\r\n          important: 2,\r\n          urgent: 3,\r\n          isComplete: false,\r\n          createDate: new Date().getTime(),\r\n          assignedTo: email,\r\n          assignedBy: email,\r\n          taskId: uuidv4(),\r\n          estimatedDays: 5,\r\n          estimatedBudget: 5\r\n        }\r\n      ]\r\n    \r\n    const sendWelcomeEmail = (username, email) => {\r\n      const url = 'https://us-central1-todue-mullan.cloudfunctions.net/sendWelcomeEmail';\r\n      const functionData = {\r\n        username: username,\r\n        email: email,\r\n      }\r\n      axios.post(url, functionData).then((e)=>console.log(e)).catch(err=>console.log(err));\r\n    }\r\n\r\n    try {\r\n      // await firebase.register(name, email, password)\r\n      const validationResult = validateData();\r\n      if(validationResult!==true){\r\n        await setSeverity('error');\r\n        await setAlertMessage(validationResult);\r\n        await setAlertOpen(true);\r\n        return;\r\n      }\r\n      // await firebase.auth().createUserWithEmailAndPassword(email, password)\r\n      // await firebase.auth().currentUser.updateProfile({\r\n      //   displayName: name\r\n      // })\r\n      // props.history.replace('/home')\r\n      \r\n      await setSignupLoading(true);\r\n      \r\n      firebase.firestore().collection('users')\r\n        .where(\"psudo\", \"==\", psudo)\r\n        .get()\r\n        .then(async (snapShot) => {\r\n            // snapShot.map(async (doc) => {\r\n              // if(doc.psudo===psudo){\r\n                // console.log(snapShot)\r\n              if(snapShot!==null && snapShot.size>0){\r\n                await setSeverity('error');\r\n                await setAlertMessage(`A user with username ${psudo} already exists`);\r\n                await setAlertOpen(true);\r\n                await setSignupLoading(false);\r\n                return;\r\n              }\r\n              else {\r\n                try{\r\n                  await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n                  // await handleUpload();\r\n                }\r\n                catch (err){\r\n                  await setSeverity('error');\r\n                  await setAlertMessage(err.message);\r\n                  await setAlertOpen(true);\r\n                  await setSignupLoading(false);\r\n                }\r\n                if(firebase.auth().currentUser===null) return;\r\n                await firebase.auth().currentUser.updateProfile({\r\n                  displayName: psudo\r\n                }).then( async ()=> {\r\n                  // handleUpload().then(async ()=>{\r\n                    // await handleUpload();\r\n                    await firebase.auth().currentUser.sendEmailVerification();\r\n                    const currentUserId = await firebase.auth().currentUser.uid;\r\n                    // handleUpload().then(()=>\r\n                      setTimeout(()=>{\r\n                      firebase.firestore().collection('users').doc(currentUserId)\r\n                      .set({\r\n                        name: name,\r\n                        email: email,\r\n                        psudo: psudo,\r\n                        position: position,\r\n                        imgUrl: url,\r\n                      })\r\n                      .then(async (doc) => {\r\n\r\n                        firebase\r\n                          .firestore()\r\n                          .collection('boards')\r\n                          .add({\r\n                            name: `Welcome, ${name?.split(' ')[0]} I am a board`,\r\n                            todoList: buildTodoList(email),\r\n                            createdBy: email,\r\n                            createdByUsername: psudo,\r\n                            assignments: [email],\r\n                          })\r\n                          .then(async (doc) => {\r\n                            localStorage.setItem('selectedListId', doc.id);\r\n                          }).catch(err=>console.log(err));\r\n\r\n\r\n                        sendWelcomeEmail(psudo, email);\r\n\r\n\r\n                        await setSuccessModalOpen(true);\r\n                        // await setSeverity('success');\r\n                        // await setAlertMessage('Log in to your email to verify, then return to https://mytodue.com/ to sign in.');\r\n                        // await setAlertOpen(true);\r\n                        await setSignupLoading(false);\r\n                        setTimeout(()=> props.history.replace('/'), 6000) \r\n                    }).catch(async (err) =>{\r\n                        await setSeverity('error');\r\n                        await setAlertMessage(err.message);\r\n                        await setAlertOpen(true);\r\n                        await setSignupLoading(false);\r\n                    })\r\n                  }, 1000)\r\n                    // );\r\n                  // })\r\n                })\r\n              }\r\n            })\r\n    } catch (err){\r\n      await setSeverity('error');\r\n      await setAlertMessage(err.message);\r\n      await setAlertOpen(true);\r\n      await setSignupLoading(false);\r\n    }\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    backgroundColor: 'rgb(33,33,33)',\r\n    // border: \"2px solid #000\",\r\n    border: 'none',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(4, 4, 4),\r\n  },\r\n}));\r\n\r\nconst SuccessModal = ({open, setOpen}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n    style={{display:'flex',alignItems:'center',justifyContent:'center'}}\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 5000,\r\n        }}\r\n        closeAfterTransition\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n          <Typography><CheckCircleIcon fontSize=\"large\" style={{marginTop:'5px', color:'lightgreen'}} /></Typography> \r\n            <h3 id=\"transition-modal-title\" style={{color: 'white'}}>\r\n                Success!\r\n            </h3>\r\n            <div id=\"transition-modal-description\" style={{color: 'white', paddingBottom:'10px'}}>\r\n              <h5>\r\n                Verify your email BEFORE signing in.\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Register))\r\n","import React, {useEffect, useState} from 'react'\r\nimport './App.css'\r\nimport HomePage from './app/screens/Home/index'\r\nimport SignIn from './app/screens/Login/index'\r\nimport Register from './app/screens/Register/index'\r\nimport Profile from './app/screens/Profile/Profile'\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles'\r\nimport { purple } from '@material-ui/core/colors';\r\nimport {CircularProgress, CssBaseline} from '@material-ui/core'\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\n\r\nimport firebase from './app/services/firebase'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#3dd19d'\r\n    },\r\n    secondary: {\r\n      main: '#3dd19d'\r\n    }\r\n  }\r\n});\r\n\r\nexport default function App() {\r\n  \r\n  const [firebaseInitialized, setFirebaseInitialized] = useState(false)\r\n  \r\n  function isInitialized() {\r\n    return new Promise(resolve => {\r\n      firebase.auth().onAuthStateChanged(resolve)\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    isInitialized().then(val => {\r\n      setFirebaseInitialized(val)\r\n    })\r\n  })\r\n  \r\n  \r\n  return firebaseInitialized !== false ? (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline/>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SignIn}/>\r\n          <Route exact path=\"/register\" component={Register}/>\r\n          <Route exact path=\"/home\" component={HomePage}/>\r\n        </Switch>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  ) : <div id=\"loader\"><CircularProgress style={{color:\"#3dd19d\"}}/></div>\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n    \r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      \r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n        \r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n              \r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n              \r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}